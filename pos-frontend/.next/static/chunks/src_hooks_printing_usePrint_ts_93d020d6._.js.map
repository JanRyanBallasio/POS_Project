{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Code/POS_Project/pos-frontend/src/hooks/printing/usePrint.ts"],"sourcesContent":["// pos-frontend/src/hooks/printing/usePrint.ts\r\nexport type PrintItem = { desc: string; qty: number; price?: number; amount: number };\r\nexport type PrintPayload = {\r\n  store?: { name?: string; address1?: string; address2?: string };\r\n  customer?: { name?: string | null };\r\n  cartTotal: number;\r\n  amount: number;\r\n  change: number;\r\n  points?: number;\r\n  items: PrintItem[];\r\n};\r\n\r\nexport function usePrint() {\r\n  const printReceipt = async (data: PrintPayload) => {\r\n    const origin = typeof window !== 'undefined'\r\n      ? (window.location.origin.includes('localhost') ? 'http://localhost:5000' : window.location.origin)\r\n      : 'http://localhost:5000';\r\n\r\n    const url = `${origin.replace(/\\/$/, '')}/print/receipt`;\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!res.ok) {\r\n      const t = await res.text().catch(() => '');\r\n      throw new Error(`Print failed: ${res.status} ${t}`);\r\n    }\r\n    return res.json();\r\n  };\r\n\r\n  return { printReceipt };\r\n}"],"names":[],"mappings":"AAAA,8CAA8C;;;;;AAYvC,SAAS;IACd,MAAM,eAAe,OAAO;QAC1B,MAAM,SAAS,uCACV,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,0BAA0B,OAAO,QAAQ,CAAC,MAAM,GAChG;QAEJ,MAAM,MAAM,AAAC,GAA4B,OAA1B,OAAO,OAAO,CAAC,OAAO,KAAI;QACzC,MAAM,MAAM,MAAM,MAAM,KAAK;YAC3B,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,IAAI,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;YACvC,MAAM,IAAI,MAAM,AAAC,iBAA8B,OAAd,IAAI,MAAM,EAAC,KAAK,OAAF;QACjD;QACA,OAAO,IAAI,IAAI;IACjB;IAEA,OAAO;QAAE;IAAa;AACxB","debugId":null}}]
}