{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Code/POS_Project/pos-frontend/src/lib/qz.ts"],"sourcesContent":["// Lightweight QZ Tray wrapper with lazy loading\r\n// Usage: await initQZ(); await setPrinterByName('YOUR_PRINTER'); await printRaw(escposBytes);\r\nlet qzReady = false;\r\n\r\nfunction qzLib(): any {\r\n  // @ts-ignore\r\n  return (window as any).qz;\r\n}\r\n\r\nasync function loadQZScript(): Promise<void> {\r\n  if (qzLib()) return;\r\n\r\n  // Avoid duplicate loads\r\n  const existing = document.querySelector('script[data-qz]') as HTMLScriptElement | null;\r\n  if (existing) {\r\n    // If QZ is already attached, weâ€™re done\r\n    if (qzLib()) return;\r\n\r\n    // Otherwise wait for the existing tag to finish loading\r\n    await new Promise<void>((resolve) => {\r\n      existing.addEventListener('load', () => resolve(), { once: true });\r\n    });\r\n    return;\r\n  }\r\n\r\n  await new Promise<void>((resolve, reject) => {\r\n    const s = document.createElement('script');\r\n    s.src = '/vendor/qz-tray.js'; // served from Next public/\r\n    s.async = true;\r\n    s.defer = true;\r\n    s.dataset.qz = '1';\r\n    s.onload = () => resolve();\r\n    s.onerror = () => reject(new Error('Failed to load /vendor/qz-tray.js'));\r\n    document.head.appendChild(s);\r\n  });\r\n}\r\n\r\nexport async function initQZ() {\r\n  if (qzReady) return;\r\n  await loadQZScript();\r\n  const qz = qzLib();\r\n  if (!qz) throw new Error('QZ Tray library not available. Is QZ Tray running?');\r\n\r\n  // In dev you can allow unsigned; in prod you should set certificate/signing\r\n  qz.api.setPromiseType((p: any) => new Promise(p));\r\n  if (!qz.websocket.isActive()) {\r\n    await qz.websocket.connect();\r\n  }\r\n  qzReady = true;\r\n}\r\n\r\nexport async function setPrinterByName(name: string) {\r\n  const qz = qzLib();\r\n  if (!qzReady) await initQZ();\r\n  const cfg = qz.configs.create(name, {\r\n    encoding: 'binary',\r\n    rasterize: false,\r\n  });\r\n  // @ts-ignore\r\n  (window as any).__qz_cfg = cfg;\r\n  return cfg;\r\n}\r\n\r\nexport async function printRaw(data: Uint8Array) {\r\n  const qz = qzLib();\r\n  if (!qzReady) await initQZ();\r\n  // @ts-ignore\r\n  const cfg = (window as any).__qz_cfg || qz.configs.create(null, { encoding: 'binary', rasterize: false });\r\n  const bytes = Array.from(data);\r\n  return qz.print(cfg, [{ type: 'raw', format: 'command', data: bytes }]);\r\n}\r\n\r\nexport async function getPrinters(): Promise<string[]> {\r\n  const qz = qzLib();\r\n  if (!qzReady) await initQZ();\r\n  return qz.printers.find();\r\n}\r\n\r\nexport async function getDefaultPrinter(): Promise<string | null> {\r\n  const qz = qzLib();\r\n  if (!qzReady) await initQZ();\r\n  try {\r\n    return await qz.printers.getDefault();\r\n  } catch {\r\n    return null;\r\n  }\r\n}"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,8FAA8F;;;;;;;;;;;;;AAC9F,IAAI,UAAU;AAEd,SAAS;IACP,aAAa;IACb,OAAO,AAAC,OAAe,EAAE;AAC3B;AAEA,eAAe;IACb,IAAI,SAAS;IAEb,wBAAwB;IACxB,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,IAAI,UAAU;QACZ,wCAAwC;QACxC,IAAI,SAAS;QAEb,wDAAwD;QACxD,MAAM,IAAI,QAAc,CAAC;YACvB,SAAS,gBAAgB,CAAC,QAAQ,IAAM,WAAW;gBAAE,MAAM;YAAK;QAClE;QACA;IACF;IAEA,MAAM,IAAI,QAAc,CAAC,SAAS;QAChC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,GAAG,GAAG,sBAAsB,2BAA2B;QACzD,EAAE,KAAK,GAAG;QACV,EAAE,KAAK,GAAG;QACV,EAAE,OAAO,CAAC,EAAE,GAAG;QACf,EAAE,MAAM,GAAG,IAAM;QACjB,EAAE,OAAO,GAAG,IAAM,OAAO,IAAI,MAAM;QACnC,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;AACF;AAEO,eAAe;IACpB,IAAI,SAAS;IACb,MAAM;IACN,MAAM,KAAK;IACX,IAAI,CAAC,IAAI,MAAM,IAAI,MAAM;IAEzB,4EAA4E;IAC5E,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,IAAW,IAAI,QAAQ;IAC9C,IAAI,CAAC,GAAG,SAAS,CAAC,QAAQ,IAAI;QAC5B,MAAM,GAAG,SAAS,CAAC,OAAO;IAC5B;IACA,UAAU;AACZ;AAEO,eAAe,iBAAiB,IAAY;IACjD,MAAM,KAAK;IACX,IAAI,CAAC,SAAS,MAAM;IACpB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM;QAClC,UAAU;QACV,WAAW;IACb;IACA,aAAa;IACZ,OAAe,QAAQ,GAAG;IAC3B,OAAO;AACT;AAEO,eAAe,SAAS,IAAgB;IAC7C,MAAM,KAAK;IACX,IAAI,CAAC,SAAS,MAAM;IACpB,aAAa;IACb,MAAM,MAAM,AAAC,OAAe,QAAQ,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM;QAAE,UAAU;QAAU,WAAW;IAAM;IACvG,MAAM,QAAQ,MAAM,IAAI,CAAC;IACzB,OAAO,GAAG,KAAK,CAAC,KAAK;QAAC;YAAE,MAAM;YAAO,QAAQ;YAAW,MAAM;QAAM;KAAE;AACxE;AAEO,eAAe;IACpB,MAAM,KAAK;IACX,IAAI,CAAC,SAAS,MAAM;IACpB,OAAO,GAAG,QAAQ,CAAC,IAAI;AACzB;AAEO,eAAe;IACpB,MAAM,KAAK;IACX,IAAI,CAAC,SAAS,MAAM;IACpB,IAAI;QACF,OAAO,MAAM,GAAG,QAAQ,CAAC,UAAU;IACrC,EAAE,UAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Code/POS_Project/pos-frontend/src/hooks/printing/usePrint.ts"],"sourcesContent":["import { WebviewWindow } from '@tauri-apps/api/webviewWindow';\r\nimport { invoke } from '@tauri-apps/api/core';\r\n// NEW: QZ Tray helpers\r\nimport { initQZ, setPrinterByName, printRaw as qzPrintRaw, getDefaultPrinter } from '@/lib/qz';\r\n\r\ntype PrintData = {\r\n  store?: { name?: string; address1?: string; address2?: string };\r\n  customer?: { name?: string | null };\r\n  cartTotal: number;\r\n  amount: number;\r\n  change: number;\r\n  points?: number;\r\n  items: Array<{ desc: string; qty: number; price?: number; amount: number }>;\r\n};\r\n\r\nfunction genId() {\r\n  return `pr-${Date.now()}-${Math.random().toString(36).slice(2, 8)}`;\r\n}\r\n\r\nfunction persistPrintPayload(id: string, data: PrintData) {\r\n  localStorage.setItem(`print:${id}`, JSON.stringify(data));\r\n}\r\n\r\nfunction removePrintPayload(id: string) {\r\n  try { localStorage.removeItem(`print:${id}`); } catch { }\r\n}\r\n\r\nexport function usePrint() {\r\n  const openPrintPreview = async (data: PrintData) => {\r\n    const id = genId();\r\n    persistPrintPayload(id, data);\r\n\r\n    const label = `print-preview-${id}`;\r\n    const win = new WebviewWindow(label, {\r\n      title: 'Print Preview',\r\n      url: `/print/receipt?id=${id}`,\r\n      width: 420,\r\n      height: 800,\r\n      resizable: true,\r\n      center: true,\r\n      visible: true,\r\n\r\n    });\r\n    win.once('tauri://created', () => console.log('Print preview window created:', label));\r\n    win.once('tauri://error', (e) => {\r\n      console.error('Failed to create print preview window:', e);\r\n      alert('Failed to open print preview window. Check Tauri capabilities.');\r\n    });\r\n    win.once('tauri://destroyed', () => removePrintPayload(id));\r\n    return win;\r\n  };\r\n\r\n  // Existing native direct printing via Tauri command (fallback)\r\n  const printDirect = async (escposData: string, itemCount: number, printerName?: string) => {\r\n    await invoke('print_receipt_direct', {\r\n      receipt_data: escposData,\r\n      item_count: itemCount,\r\n      printer_name: printerName ?? null,\r\n    });\r\n  };\r\n\r\n  // NEW: QZ Tray direct raw printing\r\n  const printViaQZ = async (escposData: string, preferredPrinter?: string) => {\r\n    await initQZ();\r\n    const target = preferredPrinter || (await getDefaultPrinter()) || '';\r\n    await setPrinterByName(target);\r\n    // Convert string to Uint8Array for raw ESC/POS\r\n    const buf = new TextEncoder().encode(escposData);\r\n    await qzPrintRaw(buf);\r\n  };\r\n\r\n  return { openPrintPreview, printDirect, printViaQZ };\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA,uBAAuB;AACvB;;;;AAYA,SAAS;IACP,OAAO,AAAC,MAAmB,OAAd,KAAK,GAAG,IAAG,KAA0C,OAAvC,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG;AACjE;AAEA,SAAS,oBAAoB,EAAU,EAAE,IAAe;IACtD,aAAa,OAAO,CAAC,AAAC,SAAW,OAAH,KAAM,KAAK,SAAS,CAAC;AACrD;AAEA,SAAS,mBAAmB,EAAU;IACpC,IAAI;QAAE,aAAa,UAAU,CAAC,AAAC,SAAW,OAAH;IAAO,EAAE,UAAM,CAAE;AAC1D;AAEO,SAAS;IACd,MAAM,mBAAmB,OAAO;QAC9B,MAAM,KAAK;QACX,oBAAoB,IAAI;QAExB,MAAM,QAAQ,AAAC,iBAAmB,OAAH;QAC/B,MAAM,MAAM,IAAI,2KAAa,CAAC,OAAO;YACnC,OAAO;YACP,KAAK,AAAC,qBAAuB,OAAH;YAC1B,OAAO;YACP,QAAQ;YACR,WAAW;YACX,QAAQ;YACR,SAAS;QAEX;QACA,IAAI,IAAI,CAAC,mBAAmB,IAAM,QAAQ,GAAG,CAAC,iCAAiC;QAC/E,IAAI,IAAI,CAAC,iBAAiB,CAAC;YACzB,QAAQ,KAAK,CAAC,0CAA0C;YACxD,MAAM;QACR;QACA,IAAI,IAAI,CAAC,qBAAqB,IAAM,mBAAmB;QACvD,OAAO;IACT;IAEA,+DAA+D;IAC/D,MAAM,cAAc,OAAO,YAAoB,WAAmB;QAChE,MAAM,IAAA,2JAAM,EAAC,wBAAwB;YACnC,cAAc;YACd,YAAY;YACZ,cAAc,wBAAA,yBAAA,cAAe;QAC/B;IACF;IAEA,mCAAmC;IACnC,MAAM,aAAa,OAAO,YAAoB;QAC5C,MAAM,IAAA,6HAAM;QACZ,MAAM,SAAS,oBAAqB,MAAM,IAAA,wIAAiB,OAAO;QAClE,MAAM,IAAA,uIAAgB,EAAC;QACvB,+CAA+C;QAC/C,MAAM,MAAM,IAAI,cAAc,MAAM,CAAC;QACrC,MAAM,IAAA,+HAAU,EAAC;IACnB;IAEA,OAAO;QAAE;QAAkB;QAAa;IAAW;AACrD","debugId":null}}]
}