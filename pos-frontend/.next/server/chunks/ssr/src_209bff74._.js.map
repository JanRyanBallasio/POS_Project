{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"Sidebar\",\n);\nexport const SidebarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarContent() from the server but SidebarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarContent\",\n);\nexport const SidebarFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarFooter() from the server but SidebarFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarFooter\",\n);\nexport const SidebarGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroup() from the server but SidebarGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroup\",\n);\nexport const SidebarGroupAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupAction() from the server but SidebarGroupAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupAction\",\n);\nexport const SidebarGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupContent() from the server but SidebarGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupContent\",\n);\nexport const SidebarGroupLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupLabel() from the server but SidebarGroupLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupLabel\",\n);\nexport const SidebarHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarHeader() from the server but SidebarHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarHeader\",\n);\nexport const SidebarInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInput() from the server but SidebarInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarInput\",\n);\nexport const SidebarInset = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInset() from the server but SidebarInset is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarInset\",\n);\nexport const SidebarMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenu() from the server but SidebarMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenu\",\n);\nexport const SidebarMenuAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuAction() from the server but SidebarMenuAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuAction\",\n);\nexport const SidebarMenuBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuBadge() from the server but SidebarMenuBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuBadge\",\n);\nexport const SidebarMenuButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuButton() from the server but SidebarMenuButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuButton\",\n);\nexport const SidebarMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuItem() from the server but SidebarMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuItem\",\n);\nexport const SidebarMenuSkeleton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSkeleton() from the server but SidebarMenuSkeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSkeleton\",\n);\nexport const SidebarMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSub() from the server but SidebarMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSub\",\n);\nexport const SidebarMenuSubButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubButton() from the server but SidebarMenuSubButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSubButton\",\n);\nexport const SidebarMenuSubItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubItem() from the server but SidebarMenuSubItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSubItem\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarProvider\",\n);\nexport const SidebarRail = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarRail() from the server but SidebarRail is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarRail\",\n);\nexport const SidebarSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSeparator() from the server but SidebarSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarSeparator\",\n);\nexport const SidebarTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarTrigger() from the server but SidebarTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarTrigger\",\n);\nexport const useSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebar() from the server but useSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx <module evaluation>\",\n    \"useSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,wQAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+DACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+DACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+DACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+DACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+DACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+DACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+DACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+DACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+DACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+DACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+DACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+DACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,+DACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+DACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+DACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+DACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,+DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"Sidebar\",\n);\nexport const SidebarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarContent() from the server but SidebarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarContent\",\n);\nexport const SidebarFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarFooter() from the server but SidebarFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarFooter\",\n);\nexport const SidebarGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroup() from the server but SidebarGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroup\",\n);\nexport const SidebarGroupAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupAction() from the server but SidebarGroupAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroupAction\",\n);\nexport const SidebarGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupContent() from the server but SidebarGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroupContent\",\n);\nexport const SidebarGroupLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupLabel() from the server but SidebarGroupLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarGroupLabel\",\n);\nexport const SidebarHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarHeader() from the server but SidebarHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarHeader\",\n);\nexport const SidebarInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInput() from the server but SidebarInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarInput\",\n);\nexport const SidebarInset = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInset() from the server but SidebarInset is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarInset\",\n);\nexport const SidebarMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenu() from the server but SidebarMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenu\",\n);\nexport const SidebarMenuAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuAction() from the server but SidebarMenuAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuAction\",\n);\nexport const SidebarMenuBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuBadge() from the server but SidebarMenuBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuBadge\",\n);\nexport const SidebarMenuButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuButton() from the server but SidebarMenuButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuButton\",\n);\nexport const SidebarMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuItem() from the server but SidebarMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuItem\",\n);\nexport const SidebarMenuSkeleton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSkeleton() from the server but SidebarMenuSkeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSkeleton\",\n);\nexport const SidebarMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSub() from the server but SidebarMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSub\",\n);\nexport const SidebarMenuSubButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubButton() from the server but SidebarMenuSubButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSubButton\",\n);\nexport const SidebarMenuSubItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubItem() from the server but SidebarMenuSubItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarMenuSubItem\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarProvider\",\n);\nexport const SidebarRail = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarRail() from the server but SidebarRail is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarRail\",\n);\nexport const SidebarSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSeparator() from the server but SidebarSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarSeparator\",\n);\nexport const SidebarTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarTrigger() from the server but SidebarTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"SidebarTrigger\",\n);\nexport const useSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebar() from the server but useSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sidebar.tsx\",\n    \"useSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,wQAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2CACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2CACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2CACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2CACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2CACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2CACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2CACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2CACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2CACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2CACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2CACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2CACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,2CACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2CACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2CACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2CACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2CACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,2CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/global/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AppSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppSidebar() from the server but AppSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/global/sidebar.tsx <module evaluation>\",\n    \"AppSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,mEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/global/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AppSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppSidebar() from the server but AppSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/global/sidebar.tsx\",\n    \"AppSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,+CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/global/navbar.tsx"],"sourcesContent":["import { SidebarTrigger } from \"@/components/ui/sidebar\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav  className=\"py-4 px-2 flex items-center w-full h-full border-b\">\r\n      <SidebarTrigger className=\"\" />\r\n    </nav >\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAGe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,qJAAc;YAAC,WAAU;;;;;;;;;;;AAGhC","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/stores/productFormStore.ts"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\ntype ProductFormState = {\r\n  name: string;\r\n  barcode: string;\r\n  category_id: string;\r\n  category_name: string;\r\n  price: string;\r\n  quantity: string;\r\n  setName: (v: string) => void;\r\n  setBarcode: (v: string) => void;\r\n  setCategoryId: (v: string) => void;\r\n  setCategoryName: (v: string) => void;\r\n  setPrice: (v: string) => void;\r\n  setQuantity: (v: string) => void;\r\n  reset: () => void;\r\n};\r\n\r\nexport const useProductFormStore = create<ProductFormState>((set) => ({\r\n  name: \"\",\r\n  barcode: \"\",\r\n  category_id: \"\",\r\n  category_name: \"\",\r\n  price: \"\",\r\n  quantity: \"\",\r\n  setName: (v) => set({ name: v }),\r\n  setBarcode: (v) => set({ barcode: v }),\r\n  setCategoryId: (v) => set({ category_id: v }),\r\n  setCategoryName: (v) => set({ category_name: v }),\r\n  setPrice: (v) => set({ price: v }),\r\n  setQuantity: (v) => set({ quantity: v }),\r\n  reset: () =>\r\n    set({\r\n      name: \"\",\r\n      barcode: \"\",\r\n      category_id: \"\",\r\n      category_name: \"\",\r\n      price: \"\",\r\n      quantity: \"\",\r\n    }),\r\n}));"],"names":[],"mappings":";;;;AAAA;;AAkBO,MAAM,sBAAsB,IAAA,kJAAM,EAAmB,CAAC,MAAQ,CAAC;QACpE,MAAM;QACN,SAAS;QACT,aAAa;QACb,eAAe;QACf,OAAO;QACP,UAAU;QACV,SAAS,CAAC,IAAM,IAAI;gBAAE,MAAM;YAAE;QAC9B,YAAY,CAAC,IAAM,IAAI;gBAAE,SAAS;YAAE;QACpC,eAAe,CAAC,IAAM,IAAI;gBAAE,aAAa;YAAE;QAC3C,iBAAiB,CAAC,IAAM,IAAI;gBAAE,eAAe;YAAE;QAC/C,UAAU,CAAC,IAAM,IAAI;gBAAE,OAAO;YAAE;QAChC,aAAa,CAAC,IAAM,IAAI;gBAAE,UAAU;YAAE;QACtC,OAAO,IACL,IAAI;gBACF,MAAM;gBACN,SAAS;gBACT,aAAa;gBACb,eAAe;gBACf,OAAO;gBACP,UAAU;YACZ;IACJ,CAAC","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/addCategoryModal.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/_pages/Products/components/addCategoryModal.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/_pages/Products/components/addCategoryModal.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAqU,GAClW,mGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/addCategoryModal.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/_pages/Products/components/addCategoryModal.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/_pages/Products/components/addCategoryModal.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAiT,GAC9U,+EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/hooks/products/useProductApi.ts"],"sourcesContent":["// ...existing code...\r\nconst API_BASE_URL = (process.env.NEXT_PUBLIC_backend_api_url || \"\").replace(/\\/$/, \"\");\r\n\r\nexport interface Product {\r\n  id: number;\r\n  name: string;\r\n  barcode?: string;\r\n  price: number;\r\n  quantity: number;\r\n  category_id: number;\r\n}\r\n\r\nexport interface ApiResponse<T = any> {\r\n  success?: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport const productApi = {\r\n  async getAll(): Promise<Product[]> {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/products`);\r\n      if (!response.ok) {\r\n        // return empty list instead of throwing to keep UI stable\r\n        return [];\r\n      }\r\n      const json: ApiResponse<Product[]> = await response.json().catch(() => ({ data: [] }));\r\n      return json.data ?? [];\r\n    } catch {\r\n      return [];\r\n    }\r\n  },\r\n\r\n  async create(product: Omit<Product, \"id\">): Promise<Product> {\r\n    const response = await fetch(`${API_BASE_URL}/products`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(product),\r\n    });\r\n    const json: ApiResponse<Product> = await response.json().catch(() => ({ data: null } as any));\r\n    if (!response.ok) {\r\n      const errorMsg = json?.error || json?.message || `Failed to create product: ${response.status}`;\r\n      throw new Error(errorMsg);\r\n    }\r\n    return json.data as Product;\r\n  },\r\n\r\n  async update(id: number, product: Omit<Product, \"id\">): Promise<Product> {\r\n    const response = await fetch(`${API_BASE_URL}/products/${id}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(product),\r\n    });\r\n    const json: ApiResponse<Product> = await response.json().catch(() => ({ data: null } as any));\r\n    if (!response.ok) {\r\n      const errorMsg = json?.error || json?.message || `Failed to update product: ${response.status}`;\r\n      throw new Error(errorMsg);\r\n    }\r\n    return json.data as Product;\r\n  },\r\n\r\n  async getById(id: number): Promise<Product | null> {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/products/${id}`);\r\n      if (!response.ok) {\r\n        if (response.status === 404) return null;\r\n        throw new Error(`Failed to fetch product with id ${id}`);\r\n      }\r\n      const json: ApiResponse<Product> = await response.json().catch(() => ({ data: null } as any));\r\n      return json.data ?? null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  async delete(id: number): Promise<void> {\r\n    const response = await fetch(`${API_BASE_URL}/products/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (!response.ok) {\r\n      const json = await response.json().catch(() => ({}));\r\n      const errorMsg = json?.error || json?.message || `Failed to delete product: ${response.status}`;\r\n      throw new Error(errorMsg);\r\n    }\r\n  },\r\n\r\n  // Prefer query param endpoint (safe) -> dedicated route -> fallback to local search\r\n  async getByBarcode(barcode: string): Promise<Product | null> {\r\n    if (!barcode) return null;\r\n\r\n    // 1) query param (returns array, safe 200)\r\n    try {\r\n      const qRes = await fetch(`${API_BASE_URL}/products?barcode=${encodeURIComponent(String(barcode))}`);\r\n      if (qRes.ok) {\r\n        const qJson: ApiResponse<Product[]> = await qRes.json().catch(() => ({ data: [] }));\r\n        const arr = qJson.data ?? [];\r\n        return arr.length > 0 ? arr[0] : null;\r\n      }\r\n    } catch {\r\n      /* ignore and try next */\r\n    }\r\n\r\n    // 2) dedicated route (may return data:null or 200/404)\r\n    try {\r\n      const r = await fetch(`${API_BASE_URL}/products/barcode/${encodeURIComponent(String(barcode))}`);\r\n      if (r.ok) {\r\n        const json: ApiResponse<Product | null> = await r.json().catch(() => ({ data: null } as any));\r\n        return json.data ?? null;\r\n      }\r\n    } catch {\r\n      /* ignore and try fallback */\r\n    }\r\n\r\n    // 3) final fallback: fetch all and search locally\r\n    try {\r\n      const all = await productApi.getAll();\r\n      return all.find(p => String(p.barcode) === String(barcode)) ?? null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  async getByName(name: string): Promise<Product | null> {\r\n    if (!name) return null;\r\n\r\n    // 1) query param (safe)\r\n    try {\r\n      const qRes = await fetch(`${API_BASE_URL}/products?name=${encodeURIComponent(String(name))}`);\r\n      if (qRes.ok) {\r\n        const qJson: ApiResponse<Product[]> = await qRes.json().catch(() => ({ data: [] }));\r\n        const arr = qJson.data ?? [];\r\n        if (arr.length > 0) {\r\n          const exact = arr.find(p => (p.name || \"\").toLowerCase() === name.trim().toLowerCase());\r\n          return exact ?? arr[0];\r\n        }\r\n        return null;\r\n      }\r\n    } catch {}\r\n\r\n    // 2) dedicated route\r\n    try {\r\n      const r = await fetch(`${API_BASE_URL}/products/name/${encodeURIComponent(String(name))}`);\r\n      if (r.ok) {\r\n        const json: ApiResponse<Product | null> = await r.json().catch(() => ({ data: null } as any));\r\n        return json.data ?? null;\r\n      }\r\n    } catch {}\r\n\r\n    // 3) fallback to local search\r\n    try {\r\n      const all = await productApi.getAll();\r\n      const lower = name.trim().toLowerCase();\r\n      return all.find(p => (p.name || \"\").toLowerCase() === lower) ?? null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n};\r\n// ...existing code..."],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB,MAAM,eAAe,CAAC,iEAA2C,EAAE,EAAE,OAAO,CAAC,OAAO;AAkB7E,MAAM,aAAa;IACxB,MAAM;QACJ,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC;YACvD,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,0DAA0D;gBAC1D,OAAO,EAAE;YACX;YACA,MAAM,OAA+B,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;oBAAE,MAAM,EAAE;gBAAC,CAAC;YACpF,OAAO,KAAK,IAAI,IAAI,EAAE;QACxB,EAAE,OAAM;YACN,OAAO,EAAE;QACX;IACF;IAEA,MAAM,QAAO,OAA4B;QACvC,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC,EAAE;YACvD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,MAAM,OAA6B,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;gBAAE,MAAM;YAAK,CAAQ;QAC3F,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,WAAW,MAAM,SAAS,MAAM,WAAW,CAAC,0BAA0B,EAAE,SAAS,MAAM,EAAE;YAC/F,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,KAAK,IAAI;IAClB;IAEA,MAAM,QAAO,EAAU,EAAE,OAA4B;QACnD,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,UAAU,EAAE,IAAI,EAAE;YAC7D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,MAAM,OAA6B,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;gBAAE,MAAM;YAAK,CAAQ;QAC3F,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,WAAW,MAAM,SAAS,MAAM,WAAW,CAAC,0BAA0B,EAAE,SAAS,MAAM,EAAE;YAC/F,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,KAAK,IAAI;IAClB;IAEA,MAAM,SAAQ,EAAU;QACtB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,UAAU,EAAE,IAAI;YAC7D,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,IAAI,SAAS,MAAM,KAAK,KAAK,OAAO;gBACpC,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,IAAI;YACzD;YACA,MAAM,OAA6B,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;oBAAE,MAAM;gBAAK,CAAQ;YAC3F,OAAO,KAAK,IAAI,IAAI;QACtB,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEA,MAAM,QAAO,EAAU;QACrB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,UAAU,EAAE,IAAI,EAAE;YAC7D,QAAQ;QACV;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,OAAO,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YAClD,MAAM,WAAW,MAAM,SAAS,MAAM,WAAW,CAAC,0BAA0B,EAAE,SAAS,MAAM,EAAE;YAC/F,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,oFAAoF;IACpF,MAAM,cAAa,OAAe;QAChC,IAAI,CAAC,SAAS,OAAO;QAErB,2CAA2C;QAC3C,IAAI;YACF,MAAM,OAAO,MAAM,MAAM,GAAG,aAAa,kBAAkB,EAAE,mBAAmB,OAAO,WAAW;YAClG,IAAI,KAAK,EAAE,EAAE;gBACX,MAAM,QAAgC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;wBAAE,MAAM,EAAE;oBAAC,CAAC;gBACjF,MAAM,MAAM,MAAM,IAAI,IAAI,EAAE;gBAC5B,OAAO,IAAI,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE,GAAG;YACnC;QACF,EAAE,OAAM;QACN,uBAAuB,GACzB;QAEA,uDAAuD;QACvD,IAAI;YACF,MAAM,IAAI,MAAM,MAAM,GAAG,aAAa,kBAAkB,EAAE,mBAAmB,OAAO,WAAW;YAC/F,IAAI,EAAE,EAAE,EAAE;gBACR,MAAM,OAAoC,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;wBAAE,MAAM;oBAAK,CAAQ;gBAC3F,OAAO,KAAK,IAAI,IAAI;YACtB;QACF,EAAE,OAAM;QACN,2BAA2B,GAC7B;QAEA,kDAAkD;QAClD,IAAI;YACF,MAAM,MAAM,MAAM,WAAW,MAAM;YACnC,OAAO,IAAI,IAAI,CAAC,CAAA,IAAK,OAAO,EAAE,OAAO,MAAM,OAAO,aAAa;QACjE,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEA,MAAM,WAAU,IAAY;QAC1B,IAAI,CAAC,MAAM,OAAO;QAElB,wBAAwB;QACxB,IAAI;YACF,MAAM,OAAO,MAAM,MAAM,GAAG,aAAa,eAAe,EAAE,mBAAmB,OAAO,QAAQ;YAC5F,IAAI,KAAK,EAAE,EAAE;gBACX,MAAM,QAAgC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;wBAAE,MAAM,EAAE;oBAAC,CAAC;gBACjF,MAAM,MAAM,MAAM,IAAI,IAAI,EAAE;gBAC5B,IAAI,IAAI,MAAM,GAAG,GAAG;oBAClB,MAAM,QAAQ,IAAI,IAAI,CAAC,CAAA,IAAK,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,WAAW,OAAO,KAAK,IAAI,GAAG,WAAW;oBACpF,OAAO,SAAS,GAAG,CAAC,EAAE;gBACxB;gBACA,OAAO;YACT;QACF,EAAE,OAAM,CAAC;QAET,qBAAqB;QACrB,IAAI;YACF,MAAM,IAAI,MAAM,MAAM,GAAG,aAAa,eAAe,EAAE,mBAAmB,OAAO,QAAQ;YACzF,IAAI,EAAE,EAAE,EAAE;gBACR,MAAM,OAAoC,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;wBAAE,MAAM;oBAAK,CAAQ;gBAC3F,OAAO,KAAK,IAAI,IAAI;YACtB;QACF,EAAE,OAAM,CAAC;QAET,8BAA8B;QAC9B,IAAI;YACF,MAAM,MAAM,MAAM,WAAW,MAAM;YACnC,MAAM,QAAQ,KAAK,IAAI,GAAG,WAAW;YACrC,OAAO,IAAI,IAAI,CAAC,CAAA,IAAK,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,WAAW,OAAO,UAAU;QAClE,EAAE,OAAM;YACN,OAAO;QACT;IACF;AACF,GACA,sBAAsB","debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/hooks/global/fetching/useProducts.ts"],"sourcesContent":["// ...existing code...\r\nimport useSWR from \"swr\";\r\nimport { productApi, Product } from \"@/hooks/products/useProductApi\";\r\n\r\n// canonical SWR key used across app\r\nexport const PRODUCTS_KEY = \"/api/products\";\r\n\r\nconst fetcher = async (): Promise<Product[]> => {\r\n  try {\r\n    return await productApi.getAll();\r\n  } catch {\r\n    // keep UI stable: return empty array on fetch error\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const useProducts = () => {\r\n  const { data, error, isLoading, mutate } = useSWR<Product[]>(PRODUCTS_KEY, fetcher, {\r\n    revalidateOnFocus: true,\r\n  });\r\n\r\n  return {\r\n    products: data ?? [],\r\n    loading: !!isLoading,\r\n    error: error ? (error as Error).message : null,\r\n    refetch: mutate,\r\n  };\r\n};\r\n// ...existing code..."],"names":[],"mappings":"AAAA,sBAAsB;;;;;;;AACtB;AACA;;;AAGO,MAAM,eAAe;AAE5B,MAAM,UAAU;IACd,IAAI;QACF,OAAO,MAAM,uJAAU,CAAC,MAAM;IAChC,EAAE,OAAM;QACN,oDAAoD;QACpD,OAAO,EAAE;IACX;AACF;AAEO,MAAM,cAAc;IACzB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,IAAA,mKAAM,EAAY,cAAc,SAAS;QAClF,mBAAmB;IACrB;IAEA,OAAO;QACL,UAAU,QAAQ,EAAE;QACpB,SAAS,CAAC,CAAC;QACX,OAAO,QAAQ,AAAC,MAAgB,OAAO,GAAG;QAC1C,SAAS;IACX;AACF,GACA,sBAAsB","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/hooks/products/useAddProducts.ts"],"sourcesContent":["import { useState } from \"react\";\r\nimport { mutate } from \"swr\";\r\nimport { productApi, Product } from \"@/hooks/products/useProductApi\";\r\nimport { PRODUCTS_KEY, useProducts } from \"@/hooks/global/fetching/useProducts\";\r\n\r\ntype CreateInput = Omit<Product, \"id\">;\r\ntype FieldError = { field?: string; message: string } | null;\r\n\r\nexport function useAddProduct() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<FieldError>(null);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // Use SWR-backed product list for fast local checks\r\n    const { products } = useProducts();\r\n\r\n    const addProduct = async (product: CreateInput) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setSuccess(false);\r\n\r\n        try {\r\n            const barcodeVal = product.barcode ?? \"\";\r\n            const nameVal = (product.name ?? \"\").trim().toLowerCase();\r\n\r\n            // Build fast-lookup sets (O(n) to build, O(1) checks)\r\n            const barcodeSet = new Set((products ?? []).map(p => String(p.barcode)));\r\n            const nameSet = new Set((products ?? []).map(p => (p.name || \"\").trim().toLowerCase()));\r\n\r\n            if (barcodeVal && barcodeSet.has(String(barcodeVal))) {\r\n                setError({ field: \"barcode\", message: \"Barcode already exists. Please use a unique barcode.\" });\r\n                setLoading(false);\r\n                return null;\r\n            }\r\n\r\n            if (nameVal && nameSet.has(nameVal)) {\r\n                setError({ field: \"name\", message: \"Product name already exists. Please use a unique name.\" });\r\n                setLoading(false);\r\n                return null;\r\n            }\r\n\r\n            // Create on server - use productApi if available; fallback to fetch\r\n            const API_BASE = (process.env.NEXT_PUBLIC_backend_api_url || \"\").replace(/\\/$/, \"\");\r\n            let createdProduct: Product | null = null;\r\n            try {\r\n                if (productApi && typeof productApi.create === \"function\") {\r\n                    // productApi.create should throw on non-2xx; we still wrap for structured parsing below\r\n                    createdProduct = await productApi.create(product);\r\n                } else {\r\n                    const res = await fetch(`${API_BASE}/products`, {\r\n                        method: \"POST\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify(product),\r\n                    });\r\n                    const body = await res.json().catch(() => ({}));\r\n                    if (!res.ok) {\r\n                        // try to map field errors\r\n                        if (res.status === 409 || res.status === 400) {\r\n                            // server might send { field: \"...\", message: \"...\" } or { errors: [{ field, message }] }\r\n                            if (body?.field && body?.message) {\r\n                                setError({ field: body.field, message: body.message });\r\n                            } else if (Array.isArray(body?.errors) && body.errors.length > 0) {\r\n                                const first = body.errors[0];\r\n                                setError({ field: first.field, message: first.message });\r\n                            } else {\r\n                                setError({ message: body?.message || \"Duplicate or invalid data\" });\r\n                            }\r\n                        } else {\r\n                            setError({ message: body?.message || `Failed to create product (${res.status})` });\r\n                        }\r\n                        setLoading(false);\r\n                        return null;\r\n                    }\r\n                    createdProduct = body?.data ?? body;\r\n                }\r\n            } catch (err: any) {\r\n                // Try to parse structured error from thrown object (productApi implementations vary)\r\n                const e = err as any;\r\n                if (e?.response && typeof e.response.json === \"function\") {\r\n                    const parsed = await e.response.json().catch(() => null);\r\n                    if (parsed?.field && parsed?.message) {\r\n                        setError({ field: parsed.field, message: parsed.message });\r\n                    } else if (Array.isArray(parsed?.errors) && parsed.errors.length > 0) {\r\n                        setError({ field: parsed.errors[0].field, message: parsed.errors[0].message });\r\n                    } else {\r\n                        setError({ message: parsed?.message || \"Failed to add product\" });\r\n                    }\r\n                } else {\r\n                    const msg = e?.message || String(e);\r\n                    // simple heuristic for duplicate messages\r\n                    if (msg.toLowerCase().includes(\"barcode\")) {\r\n                        setError({ field: \"barcode\", message: msg });\r\n                    } else if (msg.toLowerCase().includes(\"name\")) {\r\n                        setError({ field: \"name\", message: msg });\r\n                    } else {\r\n                        setError({ message: msg });\r\n                    }\r\n                }\r\n                setLoading(false);\r\n                return null;\r\n            }\r\n\r\n            if (!createdProduct) {\r\n                setLoading(false);\r\n                setError({ message: \"Failed to add product\" });\r\n                return null;\r\n            }\r\n\r\n            // Optimistically update SWR cache\r\n            try {\r\n                await mutate(\r\n                    PRODUCTS_KEY,\r\n                    (current: Product[] | undefined) => {\r\n                        const filtered = (current ?? []).filter((p) => p.id !== createdProduct!.id);\r\n                        return [createdProduct!, ...filtered];\r\n                    },\r\n                    false\r\n                );\r\n            } catch {\r\n                // ignore mutate errors\r\n            }\r\n            mutate(PRODUCTS_KEY);\r\n\r\n            setSuccess(true);\r\n            setLoading(false);\r\n            return createdProduct;\r\n        } catch (err: any) {\r\n            setError({ message: err?.message || \"Failed to add product\" });\r\n            setSuccess(false);\r\n            setLoading(false);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setError(null);\r\n        setSuccess(false);\r\n    };\r\n\r\n    return {\r\n        addProduct,\r\n        loading,\r\n        error,\r\n        success,\r\n        reset,\r\n    };\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/hooks/categories/useCategoryApi.ts"],"sourcesContent":["const rawBase = process.env.NEXT_PUBLIC_backend_api_url ?? \"\";\r\nconst cleanedBase = String(rawBase).replace(/^[\"']|[\"']$/g, \"\").replace(/\\/+$/g, \"\");\r\nexport const CATEGORIES_KEY = cleanedBase ? `${cleanedBase}/categories` : `/categories`;\r\n\r\nexport interface Category {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n  data: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport const categoryApi = {\r\n  async getAll(): Promise<Category[]> {\r\n    const response = await fetch(CATEGORIES_KEY);\r\n    if (!response.ok) throw new Error(`Failed to fetch categories: ${response.status}`);\r\n    const data: ApiResponse<Category[]> = await response.json();\r\n    return data?.data ?? [];\r\n  },\r\n};"],"names":[],"mappings":";;;;;;AAAA,MAAM,UAAU,iEAA2C;AAC3D,MAAM,cAAc,OAAO,SAAS,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,SAAS;AAC1E,MAAM,iBAAiB,cAAc,GAAG,YAAY,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC;AAahF,MAAM,cAAc;IACzB,MAAM;QACJ,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,4BAA4B,EAAE,SAAS,MAAM,EAAE;QAClF,MAAM,OAAgC,MAAM,SAAS,IAAI;QACzD,OAAO,MAAM,QAAQ,EAAE;IACzB;AACF","debugId":null}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/hooks/global/fetching/useCategories.ts"],"sourcesContent":["import useSWR, { mutate as globalMutate } from \"swr\";\r\nimport { categoryApi, CATEGORIES_KEY } from \"@/hooks/categories/useCategoryApi\";\r\n\r\nexport const useCategories = () => {\r\n  const { data, error, mutate } = useSWR(CATEGORIES_KEY, () => categoryApi.getAll(), {\r\n    revalidateOnFocus: true,\r\n  });\r\n\r\n  return {\r\n    categories: data ?? [],\r\n    loading: !error && !data,\r\n    error: error ? (error as Error).message : null,\r\n    refetch: mutate,     // call this to revalidate\r\n    mutate: globalMutate // optional global mutate if you need it elsewhere\r\n  };\r\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,gBAAgB;IAC3B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAA,mKAAM,EAAC,8JAAc,EAAE,IAAM,2JAAW,CAAC,MAAM,IAAI;QACjF,mBAAmB;IACrB;IAEA,OAAO;QACL,YAAY,QAAQ,EAAE;QACtB,SAAS,CAAC,SAAS,CAAC;QACpB,OAAO,QAAQ,AAAC,MAAgB,OAAO,GAAG;QAC1C,SAAS;QACT,QAAQ,kKAAY,CAAC,kDAAkD;IACzE;AACF","debugId":null}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/dialog.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8DACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/dialog.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0CACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 971, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/label.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/label.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,wQAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1032, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1089, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qEACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,qEACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qEACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qEACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,qEACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,qEACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qEACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iDACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,iDACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iDACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iDACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iDACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iDACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iDACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1265, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/scroll-area.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ScrollArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollArea() from the server but ScrollArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/scroll-area.tsx <module evaluation>\",\n    \"ScrollArea\",\n);\nexport const ScrollBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollBar() from the server but ScrollBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/scroll-area.tsx <module evaluation>\",\n    \"ScrollBar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,mEACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/scroll-area.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ScrollArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollArea() from the server but ScrollArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/scroll-area.tsx\",\n    \"ScrollArea\",\n);\nexport const ScrollBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollBar() from the server but ScrollBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/scroll-area.tsx\",\n    \"ScrollBar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,+CACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/alert-dialog.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AlertDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialog() from the server but AlertDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialog\",\n);\nexport const AlertDialogAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogAction() from the server but AlertDialogAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogAction\",\n);\nexport const AlertDialogCancel = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogCancel() from the server but AlertDialogCancel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogCancel\",\n);\nexport const AlertDialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogContent() from the server but AlertDialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogContent\",\n);\nexport const AlertDialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogDescription() from the server but AlertDialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogDescription\",\n);\nexport const AlertDialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogFooter() from the server but AlertDialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogFooter\",\n);\nexport const AlertDialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogHeader() from the server but AlertDialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogHeader\",\n);\nexport const AlertDialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogOverlay() from the server but AlertDialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogOverlay\",\n);\nexport const AlertDialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogPortal() from the server but AlertDialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogPortal\",\n);\nexport const AlertDialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTitle() from the server but AlertDialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogTitle\",\n);\nexport const AlertDialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTrigger() from the server but AlertDialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,oEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,oEACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/ui/alert-dialog.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AlertDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialog() from the server but AlertDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialog\",\n);\nexport const AlertDialogAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogAction() from the server but AlertDialogAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogAction\",\n);\nexport const AlertDialogCancel = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogCancel() from the server but AlertDialogCancel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogCancel\",\n);\nexport const AlertDialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogContent() from the server but AlertDialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogContent\",\n);\nexport const AlertDialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogDescription() from the server but AlertDialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogDescription\",\n);\nexport const AlertDialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogFooter() from the server but AlertDialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogFooter\",\n);\nexport const AlertDialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogHeader() from the server but AlertDialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogHeader\",\n);\nexport const AlertDialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogOverlay() from the server but AlertDialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogOverlay\",\n);\nexport const AlertDialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogPortal() from the server but AlertDialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogPortal\",\n);\nexport const AlertDialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTitle() from the server but AlertDialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogTitle\",\n);\nexport const AlertDialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTrigger() from the server but AlertDialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,gDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,gDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,gDACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1447, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/components/global/ProductRegisterModal.tsx"],"sourcesContent":[" \"client\";\r\nimport { useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { Plus } from \"lucide-react\";\r\n\r\nimport { useProductModal } from \"@/contexts/productRegister-context\";\r\nimport { useProductFormStore } from \"@/stores/productFormStore\";\r\nimport AddCategoryModal from \"@/app/dashboard/_pages/Products/components/addCategoryModal\";\r\n\r\nimport { useAddProduct } from \"@/hooks/products/useAddProducts\";\r\nimport { useProducts } from \"@/hooks/global/fetching/useProducts\";\r\nimport { useCategories } from \"@/hooks/global/fetching/useCategories\";\r\n\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogClose } from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n    DropdownMenu,\r\n    DropdownMenuContent,\r\n    DropdownMenuItem,\r\n    DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport {\r\n    AlertDialog,\r\n    AlertDialogContent,\r\n    AlertDialogHeader,\r\n    AlertDialogTitle,\r\n    AlertDialogDescription,\r\n    AlertDialogFooter,\r\n    AlertDialogAction,\r\n} from \"@/components/ui/alert-dialog\";\r\n\r\n/* -------------------------\r\n   Helpers & Schema\r\n   ------------------------- */\r\n\r\nconst getCategoryId = (c: any) => c?.id ?? c?._id ?? c?.category_id ?? c?.categoryId ?? c?.ID ?? null;\r\n\r\nconst productSchema = z.object({\r\n    name: z.string().min(1, \"Product name is required\"),\r\n    barcode: z.preprocess((v) => (v == null ? \"\" : String(v)), z.string().min(1, \"Barcode is required\").regex(/^\\d+$/, \"Barcode must contain only digits\")),\r\n    category_id: z.preprocess((v) => {\r\n        if (v == null || v === \"\") return undefined;\r\n        const n = Number(v);\r\n        return Number.isNaN(n) ? undefined : n;\r\n    }, z.number().positive(\"Please select a category\")),\r\n    price: z.preprocess((v) => {\r\n        if (v == null || v === \"\") return undefined;\r\n        const n = Number(v);\r\n        return Number.isNaN(n) ? undefined : n;\r\n    }, z.number().nonnegative(\"Price must be >= 0\")),\r\n    quantity: z.preprocess((v) => {\r\n        if (v == null || v === \"\") return undefined;\r\n        const n = Number(v);\r\n        return Number.isNaN(n) ? undefined : n;\r\n    }, z.number().nonnegative(\"Quantity must be >= 0\")),\r\n});\r\n\r\ntype ProductFormValues = z.infer<typeof productSchema>;\r\n\r\n/* -------------------------\r\n   Component\r\n   ------------------------- */\r\n\r\nexport default function ProductRegisterModal() {\r\n    // modal + context barcode\r\n    const { open, setOpen, barcode: contextBarcode, setBarcode: setContextBarcode, openModal } = useProductModal();\r\n\r\n    // persisted local form store (keeps values between opens)\r\n    const nameStore = useProductFormStore(s => s.name);\r\n    const barcodeStore = useProductFormStore(s => s.barcode);\r\n    const categoryIdStore = useProductFormStore(s => s.category_id);\r\n    const categoryNameFallback = useProductFormStore(s => s.category_name);\r\n    const priceStore = useProductFormStore(s => s.price);\r\n    const quantityStore = useProductFormStore(s => s.quantity);\r\n    const setNameStore = useProductFormStore(s => s.setName);\r\n    const setBarcodeStore = useProductFormStore(s => s.setBarcode);\r\n    const setCategoryIdStore = useProductFormStore(s => s.setCategoryId);\r\n    const setCategoryNameStore = useProductFormStore(s => s.setCategoryName);\r\n    const setPriceStore = useProductFormStore(s => s.setPrice);\r\n    const setQuantityStore = useProductFormStore(s => s.setQuantity);\r\n    const resetFormStore = useProductFormStore(s => s.reset);\r\n\r\n    // hooks\r\n    const { addProduct, loading, error, reset: resetAddError } = useAddProduct();\r\n    const { categories, loading: categoriesLoading, error: categoriesError } = useCategories();\r\n    const { refetch } = useProducts();\r\n\r\n    // local UI state\r\n    const [categorySearch, setCategorySearch] = useState(\"\");\r\n    const [showSuccessDialog, setShowSuccessDialog] = useState(false);\r\n    const [globalError, setGlobalError] = useState<string | null>(null);\r\n\r\n    // react-hook-form\r\n    const { register, handleSubmit, setValue, reset: resetForm, formState: { errors }, setError } = useForm<ProductFormValues>({\r\n        resolver: zodResolver(productSchema) as any,\r\n        defaultValues: {\r\n            name: \"\",\r\n            barcode: \"\",\r\n            category_id: undefined,\r\n            price: undefined,\r\n            quantity: undefined,\r\n        },\r\n    });\r\n\r\n    /* -------------------------\r\n       Derived values\r\n       ------------------------- */\r\n\r\n    const filteredCategories = useMemo(() => {\r\n        if (!categories) return [];\r\n        const q = categorySearch.trim().toLowerCase();\r\n        if (!q) return categories;\r\n        return categories.filter((c: any) => (c?.name || \"\").toLowerCase().includes(q));\r\n    }, [categories, categorySearch]);\r\n\r\n    const selectedCategory = useMemo(() => {\r\n        if (!categories) return undefined;\r\n        return categories.find((c: any) => String(getCategoryId(c)) === String(categoryIdStore));\r\n    }, [categories, categoryIdStore]);\r\n\r\n    const selectedCategoryName = selectedCategory?.name ?? categoryNameFallback ?? \"\";\r\n\r\n    /* -------------------------\r\n       Sync form <> store when modal opens/closes\r\n       ------------------------- */\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            // clear persistent store and form state when modal closes\r\n            resetFormStore();\r\n            resetAddError?.();\r\n            resetForm();\r\n            setGlobalError(null);\r\n            return;\r\n        }\r\n\r\n        // when opened, populate form from persisted store\r\n        resetForm({\r\n            name: nameStore || \"\",\r\n            barcode: barcodeStore || \"\",\r\n            category_id: categoryIdStore ? Number(categoryIdStore) : undefined,\r\n            price: priceStore === \"\" ? undefined : Number(priceStore),\r\n            quantity: quantityStore === \"\" ? undefined : Number(quantityStore),\r\n        });\r\n\r\n        // if a barcode came from context (scanner), apply once\r\n        if (contextBarcode && contextBarcode !== barcodeStore) {\r\n            setBarcodeStore(contextBarcode);\r\n            setValue(\"barcode\", contextBarcode as any);\r\n            if (typeof setContextBarcode === \"function\") setContextBarcode(\"\");\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [open]);\r\n\r\n    /* -------------------------\r\n       Map server errors to form/global\r\n       ------------------------- */\r\n\r\n    useEffect(() => {\r\n        setGlobalError(null);\r\n        if (!error) return;\r\n        if (error.field) {\r\n            setError(error.field as any, { message: error.message, type: \"server\" });\r\n        } else {\r\n            setGlobalError(error.message);\r\n        }\r\n    }, [error, setError]);\r\n\r\n    /* -------------------------\r\n       Handlers - keep store in sync for other contexts\r\n       ------------------------- */\r\n\r\n    const onFieldChangeStore = useCallback((field: string, value: string) => {\r\n        switch (field) {\r\n            case \"name\": return setNameStore(value);\r\n            case \"barcode\": return setBarcodeStore(value);\r\n            case \"price\": return setPriceStore(value);\r\n            case \"quantity\": return setQuantityStore(value);\r\n            default: return;\r\n        }\r\n    }, [setNameStore, setBarcodeStore, setPriceStore, setQuantityStore]);\r\n\r\n    const onSelectCategory = useCallback((cat: any) => {\r\n        const idVal = getCategoryId(cat);\r\n        setCategoryIdStore(idVal ?? \"\");\r\n        setCategoryNameStore(\"\");\r\n        setCategorySearch(\"\");\r\n        setValue(\"category_id\", idVal as any, { shouldValidate: true });\r\n    }, [setCategoryIdStore, setCategoryNameStore, setValue]);\r\n\r\n    /* -------------------------\r\n       Submit\r\n       ------------------------- */\r\n\r\n    const onSubmit = async (values: ProductFormValues) => {\r\n        setGlobalError(null);\r\n\r\n        // persist parsed values to store\r\n        setNameStore(values.name);\r\n        setBarcodeStore(values.barcode ?? \"\");\r\n        setCategoryIdStore(String(values.category_id ?? \"\"));\r\n        setPriceStore(String(values.price ?? \"\"));\r\n        setQuantityStore(String(values.quantity ?? \"\"));\r\n\r\n        const result = await addProduct(values as any);\r\n        if (result) {\r\n            setShowSuccessDialog(true);\r\n            resetForm();\r\n            resetFormStore();\r\n            try { await refetch(); } catch { /* ignore */ }\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    /* -------------------------\r\n       Render\r\n       ------------------------- */\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onOpenChange={setOpen}>\r\n                <DialogContent>\r\n                    <DialogHeader>\r\n                        <DialogTitle>Product</DialogTitle>\r\n                        <DialogDescription>Fill in the details below to add a new product.</DialogDescription>\r\n                    </DialogHeader>\r\n\r\n                    <div className=\"flex-col gap-4\">\r\n                        {globalError && <p className=\"text-sm text-red-500 mb-2\">{globalError}</p>}\r\n\r\n                        <div className=\"flex flex-col gap-2\">\r\n                            <Label htmlFor=\"name-1\">Product Name</Label>\r\n                            <Input\r\n                                id=\"name-1\"\r\n                                {...register(\"name\")}\r\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                    register(\"name\").onChange?.(e as any);\r\n                                    onFieldChangeStore(\"name\", e.target.value);\r\n                                }}\r\n                            />\r\n                            {errors.name && <p className=\"text-sm text-red-500 mt-1\">{errors.name.message}</p>}\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-row gap-2 mt-4\">\r\n                            <div className=\"flex-1 flex flex-col gap-2\">\r\n                                <Label htmlFor=\"barcode-1\">Barcode</Label>\r\n                                <Input\r\n                                    id=\"barcode-1\"\r\n                                    {...register(\"barcode\")}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                        setValue(\"barcode\", e.target.value as any);\r\n                                        onFieldChangeStore(\"barcode\", e.target.value);\r\n                                    }}\r\n                                />\r\n                                {errors.barcode && <p className=\"text-sm text-red-500 mt-1\">{errors.barcode.message}</p>}\r\n                            </div>\r\n\r\n                            <div className=\"flex-1 flex flex-col gap-2\">\r\n                                <Label htmlFor=\"category-1\">Category</Label>\r\n                                <div className=\"flex gap-2\">\r\n                                    <DropdownMenu>\r\n                                        <DropdownMenuTrigger asChild>\r\n                                            <Input\r\n                                                id=\"category-1\"\r\n                                                readOnly\r\n                                                value={selectedCategoryName}\r\n                                                placeholder=\"Select category\"\r\n                                                className=\"cursor-pointer\"\r\n                                            />\r\n                                        </DropdownMenuTrigger>\r\n                                        <DropdownMenuContent className=\"w-64 p-0\">\r\n                                            <div className=\"p-2\">\r\n                                                <Input\r\n                                                    placeholder=\"Search category...\"\r\n                                                    value={categorySearch}\r\n                                                    onChange={e => setCategorySearch(e.target.value)}\r\n                                                    className=\"mb-2\"\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {categoriesLoading && <div className=\"p-2 text-gray-400\">Loading...</div>}\r\n                                            {categoriesError && <div className=\"p-2 text-red-500\">{categoriesError}</div>}\r\n\r\n                                            {!categoriesLoading && !categoriesError && (\r\n                                                <ScrollArea className=\"h-40\">\r\n                                                    <div className=\"p-2\">\r\n                                                        {filteredCategories.map((cat) => {\r\n                                                            const idString = String(getCategoryId(cat));\r\n                                                            return (\r\n                                                                <DropdownMenuItem key={idString} onClick={() => onSelectCategory(cat)}>\r\n                                                                    {cat.name}\r\n                                                                </DropdownMenuItem>\r\n                                                            );\r\n                                                        })}\r\n\r\n                                                        {filteredCategories.length === 0 && <div className=\"p-2 text-gray-400\">No categories found.</div>}\r\n                                                    </div>\r\n                                                </ScrollArea>\r\n                                            )}\r\n                                        </DropdownMenuContent>\r\n                                    </DropdownMenu>\r\n\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"icon\"\r\n                                        onClick={() => (typeof openModal === \"function\" ? openModal(\"addCategory\") : null)}\r\n                                        aria-label=\"Add Category\"\r\n                                    >\r\n                                        <Plus className=\"w-4 h-4\" />\r\n                                    </Button>\r\n                                </div>\r\n                                {errors.category_id && <p className=\"text-sm text-red-500 mt-1\">{errors.category_id.message}</p>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-row gap-2 my-4\">\r\n                            <div className=\"flex-1 flex flex-col gap-2\">\r\n                                <Label htmlFor=\"price-1\">Price</Label>\r\n                                <div className=\"relative\">\r\n                                    <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-500 pointer-events-none\">₱</span>\r\n                                    <Input\r\n                                        id=\"price-1\"\r\n                                        type=\"number\"\r\n                                        {...register(\"price\")}\r\n                                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                            const v = e.target.value;\r\n                                            setValue(\"price\", v === \"\" ? undefined : Number(v) as any, { shouldValidate: true });\r\n                                            onFieldChangeStore(\"price\", v);\r\n                                        }}\r\n                                        className=\"pl-8\"\r\n                                    />\r\n                                </div>\r\n                                {errors.price && <p className=\"text-sm text-red-500 mt-1\">{errors.price.message}</p>}\r\n                            </div>\r\n\r\n                            <div className=\"flex-1 flex flex-col gap-2\">\r\n                                <Label htmlFor=\"quantity-1\">Quantity</Label>\r\n                                <Input\r\n                                    id=\"quantity-1\"\r\n                                    type=\"number\"\r\n                                    {...register(\"quantity\")}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                        const v = e.target.value;\r\n                                        setValue(\"quantity\", v === \"\" ? undefined : Number(v) as any, { shouldValidate: true });\r\n                                        onFieldChangeStore(\"quantity\", v);\r\n                                    }}\r\n                                />\r\n                                {errors.quantity && <p className=\"text-sm text-red-500 mt-1\">{errors.quantity.message}</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <DialogFooter>\r\n                        <DialogClose asChild>\r\n                            <Button variant=\"outline\">Cancel</Button>\r\n                        </DialogClose>\r\n\r\n                        <Button onClick={handleSubmit(onSubmit)} disabled={loading}>\r\n                            {loading ? \"Adding...\" : \"Add Product\"}\r\n                        </Button>\r\n                    </DialogFooter>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AddCategoryModal />\r\n\r\n            <AlertDialog open={showSuccessDialog} onOpenChange={setShowSuccessDialog}>\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader>\r\n                        <AlertDialogTitle>Product Added</AlertDialogTitle>\r\n                        <AlertDialogDescription>Congratulations! Your product has been added successfully.</AlertDialogDescription>\r\n                    </AlertDialogHeader>\r\n                    <AlertDialogFooter>\r\n                        <AlertDialogAction onClick={() => setShowSuccessDialog(false)}>OK</AlertDialogAction>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n            </AlertDialog>\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2169, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS_Project/pos-frontend/src/app/dashboard/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\r\nimport \"../globals.css\";\r\nimport { SidebarProvider } from \"@/components/ui/sidebar\";\r\nimport { AppSidebar } from \"@/components/global/sidebar\";\r\nimport Navbar from \"@/components/global/navbar\";\r\nimport { ProductModalProvider } from \"@/contexts/productRegister-context\";\r\nimport ProductRegisterModal from \"@/components/global/ProductRegisterModal\";\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Store\",\r\n  description: \"Generated by create next app\",\r\n};\r\n\r\nexport default function DashboardLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  return (\r\n     <ProductModalProvider>\r\n      <SidebarProvider>\r\n        <AppSidebar />\r\n        <main className=\"w-full h-screen flex flex-col\">\r\n          <ProductRegisterModal />\r\n          <div className=\"flex-[5%]\">\r\n            <Navbar />\r\n          </div>\r\n          <div className=\"flex-[95%]\">\r\n            {children}\r\n          </div>\r\n        </main>\r\n      </SidebarProvider>\r\n    </ProductModalProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,gBAAgB,EACtC,QAAQ,EAGR;IACA,qBACG,8OAAC,sKAAoB;kBACpB,cAAA,8OAAC,sJAAe;;8BACd,8OAAC,qJAAU;;;;;8BACX,8OAAC;oBAAK,WAAU;;sCACd,8OAAC,+JAAoB;;;;;sCACrB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,iJAAM;;;;;;;;;;sCAET,8OAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAMb","debugId":null}}]
}