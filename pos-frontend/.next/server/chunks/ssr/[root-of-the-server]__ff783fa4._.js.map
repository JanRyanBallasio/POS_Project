{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Code/POS_Project/pos-frontend/src/components/global/BreakpointIndicator.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst breakpoints = [\r\n  { name: \"2xl\", min: 1536 },\r\n  { name: \"xl\", min: 1280 },\r\n  { name: \"lg\", min: 1024 },\r\n  { name: \"md\", min: 768 },\r\n  { name: \"sm\", min: 640 },\r\n  { name: \"xs\", min: 0 },\r\n];\r\n\r\nfunction getBreakpoint(width: number) {\r\n  const bp = breakpoints.find(b => width >= b.min) || breakpoints[breakpoints.length - 1];\r\n  return `${bp.name}:${bp.min}`;\r\n}\r\n\r\nexport default function BreakpointIndicator() {\r\n  const [breakpoint, setBreakpoint] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const updateBreakpoint = () => setBreakpoint(getBreakpoint(window.innerWidth));\r\n    updateBreakpoint();\r\n    window.addEventListener(\"resize\", updateBreakpoint);\r\n    return () => window.removeEventListener(\"resize\", updateBreakpoint);\r\n  }, []);\r\n\r\n  if (!breakpoint) return null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        left: 8,\r\n        bottom: 8,\r\n        zIndex: 9999,\r\n        background: \"#222\",\r\n        color: \"#fff\",\r\n        padding: \"4px 12px\",\r\n        borderRadius: 6,\r\n        fontSize: 14,\r\n        opacity: 0.7,\r\n        pointerEvents: \"none\",\r\n      }}\r\n    >\r\n      {breakpoint}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGA,MAAM,cAAc;IAClB;QAAE,MAAM;QAAO,KAAK;IAAK;IACzB;QAAE,MAAM;QAAM,KAAK;IAAK;IACxB;QAAE,MAAM;QAAM,KAAK;IAAK;IACxB;QAAE,MAAM;QAAM,KAAK;IAAI;IACvB;QAAE,MAAM;QAAM,KAAK;IAAI;IACvB;QAAE,MAAM;QAAM,KAAK;IAAE;CACtB;AAED,SAAS,cAAc,KAAa;IAClC,MAAM,KAAK,YAAY,IAAI,CAAC,CAAA,IAAK,SAAS,EAAE,GAAG,KAAK,WAAW,CAAC,YAAY,MAAM,GAAG,EAAE;IACvF,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE;AAC/B;AAEe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAgB;IAE5D,IAAA,kNAAS,EAAC;QACR,MAAM,mBAAmB,IAAM,cAAc,cAAc,OAAO,UAAU;QAC5E;QACA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,IAAI,CAAC,YAAY,OAAO;IAExB,qBACE,8OAAC;QACC,OAAO;YACL,UAAU;YACV,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,YAAY;YACZ,OAAO;YACP,SAAS;YACT,cAAc;YACd,UAAU;YACV,SAAS;YACT,eAAe;QACjB;kBAEC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///C:/Code/POS_Project/pos-frontend/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useTheme } from \"next-themes\"\r\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\r\n\r\nconst Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = \"system\" } = useTheme()\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme as ToasterProps[\"theme\"]}\r\n      className=\"toaster group\"\r\n      style={\r\n        {\r\n          \"--normal-bg\": \"var(--popover)\",\r\n          \"--normal-text\": \"var(--popover-foreground)\",\r\n          \"--normal-border\": \"var(--border)\",\r\n        } as React.CSSProperties\r\n      }\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Toaster }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,IAAA,4JAAQ;IAErC,qBACE,8OAAC,mJAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///C:/Code/POS_Project/pos-frontend/src/contexts/productRegister-context.tsx"],"sourcesContent":["// ...existing code...\r\n\"use client\";\r\n\r\nimport React, { createContext, useContext, useState, ReactNode } from \"react\";\r\n\r\ntype ModalName = string;\r\n\r\ninterface ProductModalContextValue {\r\n  // stacked modals API\r\n  activeModals: ModalName[]; // stack of opened modal names (first opened -> last opened)\r\n  activeModal: ModalName | null; // convenience: last opened modal or null\r\n  isOpen: (name: ModalName) => boolean;\r\n  modalProps?: Record<string, any>;\r\n  openModal: (name: ModalName, props?: any) => void;\r\n  closeModal: (name?: ModalName) => void;\r\n  // backward compatibility helpers (kept for existing components)\r\n  open: boolean; // convenience for product modal specifically\r\n  setOpen: (v: boolean) => void;\r\n  barcode: string;\r\n  setBarcode: (v: string) => void;\r\n}\r\n\r\nconst ProductModalContext = createContext<ProductModalContextValue>({\r\n  activeModals: [],\r\n  activeModal: null,\r\n  isOpen: () => false,\r\n  modalProps: undefined,\r\n  openModal: () => {},\r\n  closeModal: () => {},\r\n  open: false,\r\n  setOpen: () => {},\r\n  barcode: \"\",\r\n  setBarcode: () => {},\r\n});\r\n\r\nexport const ProductModalProvider = ({ children }: { children: ReactNode }) => {\r\n  const [activeModals, setActiveModals] = useState<ModalName[]>([]);\r\n  const [modalProps, setModalProps] = useState<Record<string, any> | undefined>(undefined);\r\n  const [barcode, setBarcode] = useState<string>(\"\");\r\n\r\n  const openModal = (name: ModalName, props?: any) => {\r\n    setActiveModals((prev) => {\r\n      if (prev.includes(name)) return prev;\r\n      return [...prev, name];\r\n    });\r\n    setModalProps((prev) => ({ ...(prev || {}), [name]: props }));\r\n  };\r\n\r\n  const closeModal = (name?: ModalName) => {\r\n    if (typeof name === \"string\") {\r\n      setActiveModals((prev) => prev.filter((m) => m !== name));\r\n      setModalProps((prev) => {\r\n        if (!prev) return prev;\r\n        const next = { ...prev };\r\n        delete next[name];\r\n        return Object.keys(next).length ? next : undefined;\r\n      });\r\n    } else {\r\n      // no name -> close all\r\n      setActiveModals([]);\r\n      setModalProps(undefined);\r\n    }\r\n  };\r\n\r\n  const isOpen = (name: ModalName) => activeModals.includes(name);\r\n\r\n  // backward compat: treat the \"product register\" modal name as \"addProduct\"\r\n  const open = isOpen(\"addProduct\");\r\n  const setOpen = (v: boolean) => {\r\n    if (v) {\r\n      openModal(\"addProduct\");\r\n    } else {\r\n      // only remove the product modal entry\r\n      closeModal(\"addProduct\");\r\n    }\r\n  };\r\n\r\n  const activeModal = activeModals.length ? activeModals[activeModals.length - 1] : null;\r\n\r\n  return (\r\n    <ProductModalContext.Provider\r\n      value={{\r\n        activeModals,\r\n        activeModal,\r\n        isOpen,\r\n        modalProps,\r\n        openModal,\r\n        closeModal,\r\n        open,\r\n        setOpen,\r\n        barcode,\r\n        setBarcode,\r\n      }}\r\n    >\r\n      {children}\r\n    </ProductModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProductModal = () => useContext(ProductModalContext);\r\n// ...existing code..."],"names":[],"mappings":"AAAA,sBAAsB;;;;;;;;AAGtB;AAFA;;;AAqBA,MAAM,oCAAsB,IAAA,sNAAa,EAA2B;IAClE,cAAc,EAAE;IAChB,aAAa;IACb,QAAQ,IAAM;IACd,YAAY;IACZ,WAAW,KAAO;IAClB,YAAY,KAAO;IACnB,MAAM;IACN,SAAS,KAAO;IAChB,SAAS;IACT,YAAY,KAAO;AACrB;AAEO,MAAM,uBAAuB,CAAC,EAAE,QAAQ,EAA2B;IACxE,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAc,EAAE;IAChE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAkC;IAC9E,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAS;IAE/C,MAAM,YAAY,CAAC,MAAiB;QAClC,gBAAgB,CAAC;YACf,IAAI,KAAK,QAAQ,CAAC,OAAO,OAAO;YAChC,OAAO;mBAAI;gBAAM;aAAK;QACxB;QACA,cAAc,CAAC,OAAS,CAAC;gBAAE,GAAI,QAAQ,CAAC,CAAC;gBAAG,CAAC,KAAK,EAAE;YAAM,CAAC;IAC7D;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI,OAAO,SAAS,UAAU;YAC5B,gBAAgB,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,IAAM,MAAM;YACnD,cAAc,CAAC;gBACb,IAAI,CAAC,MAAM,OAAO;gBAClB,MAAM,OAAO;oBAAE,GAAG,IAAI;gBAAC;gBACvB,OAAO,IAAI,CAAC,KAAK;gBACjB,OAAO,OAAO,IAAI,CAAC,MAAM,MAAM,GAAG,OAAO;YAC3C;QACF,OAAO;YACL,uBAAuB;YACvB,gBAAgB,EAAE;YAClB,cAAc;QAChB;IACF;IAEA,MAAM,SAAS,CAAC,OAAoB,aAAa,QAAQ,CAAC;IAE1D,2EAA2E;IAC3E,MAAM,OAAO,OAAO;IACpB,MAAM,UAAU,CAAC;QACf,IAAI,GAAG;YACL,UAAU;QACZ,OAAO;YACL,sCAAsC;YACtC,WAAW;QACb;IACF;IAEA,MAAM,cAAc,aAAa,MAAM,GAAG,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE,GAAG;IAElF,qBACE,8OAAC,oBAAoB,QAAQ;QAC3B,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,kBAAkB,IAAM,IAAA,mNAAU,EAAC,sBAChD,sBAAsB","debugId":null}}]
}