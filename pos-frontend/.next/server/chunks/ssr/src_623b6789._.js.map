{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/contexts/cart-context.tsx"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useMemo,\r\n  ReactNode,\r\n  RefObject,\r\n  useEffect,\r\n  useCallback,\r\n  useRef,\r\n} from \"react\";\r\nimport { productApi, Product } from \"@/hooks/products/useProductApi\";\r\nimport { useProductModal } from \"@/contexts/productRegister-context\";\r\n\r\ninterface CartItem {\r\n  product: Product;\r\n  quantity: number;\r\n  id: string;\r\n}\r\n\r\ninterface CartContextType {\r\n  cart: CartItem[];\r\n  cartTotal: number;\r\n  scanError: string | null;\r\n  isScanning: boolean;\r\n  lastAddedItemId: string | null;\r\n  scanAndAddToCart: (barcode: string, preValidatedProduct?: Product | null) => Promise<void>;\r\n  // returns the cartItem.id (existing or newly created) so callers can immediately select the row\r\n  addProductToCart: (product: Product) => string;\r\n  // unified signature: optional force flag\r\n  refocusScanner: (force?: boolean) => void;\r\n  setScannerRef: (ref: RefObject<HTMLInputElement>) => void;\r\n  updateCartItemQuantity: (id: string, quantity: number) => void;\r\n  updateCartItemPrice: (id: string, price: number) => void;\r\n  deleteCartItem: (id: string) => void;\r\n  clearCart: () => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nconst genId = () =>\r\n  typeof crypto !== \"undefined\" && typeof (crypto as any).randomUUID === \"function\"\r\n    ? (crypto as any).randomUUID()\r\n    : Date.now().toString();\r\n\r\nconst productEqual = (a: Product, b: Product) => {\r\n  if (a?.id && b?.id) return a.id === b.id;\r\n  return Boolean(a?.barcode && b?.barcode && a.barcode === b.barcode);\r\n};\r\n\r\nexport const CartProvider = ({ children }: { children: ReactNode }) => {\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n  const [scanError, setScanError] = useState<string | null>(null);\r\n  const [isScanning, setIsScanning] = useState<boolean>(false);\r\n  const [lastAddedItemId, setLastAddedItemId] = useState<string | null>(null);\r\n  const [scannerInputRef, setScannerInputRef] =\r\n    useState<RefObject<HTMLInputElement> | null>(null);\r\n  const [pendingScans, setPendingScans] = useState<Set<string>>(new Set());\r\n  // Use a ref for immediate reads/writes to prevent race conditions when two rapid add calls occur\r\n  const lastScanTimeRef = useRef<Map<string, number>>(new Map());\r\n\r\n  const { setBarcode: setContextBarcode, openModal, setOpen: setProductModalOpen } =\r\n    useProductModal();\r\n\r\n  const clearCart = useCallback(() => {\r\n    setCart([]);\r\n    setLastAddedItemId(null);\r\n    lastScanTimeRef.current = new Map();\r\n  }, []);\r\n\r\n  const setScannerRef = useCallback((ref: RefObject<HTMLInputElement>) => {\r\n    setScannerInputRef(ref);\r\n  }, []);\r\n\r\n  const refocusScanner = useCallback((force = false) => {\r\n    try {\r\n      const el = scannerInputRef?.current;\r\n      if (!el) return;\r\n      const active = document.activeElement as HTMLElement | null;\r\n\r\n      // If not forced, don't steal focus while user is actively typing in a visible input we care about\r\n      if (!force && active) {\r\n        const tag = active.tagName;\r\n        const isTyping =\r\n          tag === \"INPUT\" ||\r\n          tag === \"TEXTAREA\" ||\r\n          (active as HTMLElement).isContentEditable === true;\r\n\r\n        const isProductSearch =\r\n          active.getAttribute?.(\"data-product-search\") === \"true\" ||\r\n          String((active as HTMLInputElement).placeholder || \"\")\r\n            .toLowerCase()\r\n            .includes(\"search by product\");\r\n\r\n        const isCustomerSearch =\r\n          active.getAttribute?.(\"data-customer-search\") === \"true\" ||\r\n          String((active as HTMLInputElement).placeholder || \"\")\r\n            .toLowerCase()\r\n            .includes(\"search name\");\r\n\r\n        const isPriceInput = !!active.getAttribute?.(\"data-cart-price-input\");\r\n        const isQtyInput = !!active.getAttribute?.(\"data-cart-qty-input\");\r\n        const isCashInput =\r\n          active.getAttribute?.(\"data-pos-cash-input\") === \"true\" ||\r\n          (active.getAttribute && active.getAttribute(\"placeholder\") === \"0.00\");\r\n\r\n        // If user is actively typing in any of those, do not override unless forced\r\n        if (\r\n          isTyping &&\r\n          (isProductSearch || isCustomerSearch || isPriceInput || isQtyInput || isCashInput)\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Defer to next frame so DOM updates (removal/add) complete first\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          scannerInputRef?.current?.focus();\r\n          // If the scanner input supports select, select its content\r\n          (scannerInputRef?.current as HTMLInputElement | null)?.select?.();\r\n        } catch {\r\n          // swallow focus errors\r\n        }\r\n      });\r\n    } catch {\r\n      // ignore\r\n    }\r\n  }, [scannerInputRef]);\r\n\r\n  // Use refocusScanner inside deleteCartItem to ensure focus returns after deletion\r\n  const deleteCartItem = useCallback((id: string) => {\r\n    // compute next selected id (row above or new first) based on current cart\r\n    let nextSelectedId: string | null = null;\r\n    if (cart && cart.length > 0) {\r\n      const idx = cart.findIndex((item) => item.id === id);\r\n      if (cart.length > 1) {\r\n        if (idx > 0) {\r\n          nextSelectedId = cart[idx - 1].id;\r\n        } else {\r\n          // deleted first item -> select the new first (old index 1)\r\n          nextSelectedId = cart[1]?.id ?? null;\r\n        }\r\n      } else {\r\n        nextSelectedId = null;\r\n      }\r\n    }\r\n\r\n    setCart((prevCart) => prevCart.filter((item) => item.id !== id));\r\n    setLastAddedItemId((prev) => (prev === id ? null : prev));\r\n\r\n    // Notify listeners about deletion and desired next selection\r\n    try {\r\n      window.dispatchEvent(\r\n        new CustomEvent(\"cart:item-deleted\", {\r\n          detail: { deletedId: id, nextSelectedId },\r\n        })\r\n      );\r\n    } catch (err) { /* ignore */ }\r\n\r\n    // Ensure scanner regains focus after DOM update (force true)\r\n    refocusScanner(true);\r\n  }, [cart, refocusScanner]);\r\n\r\n  // Update quantity for an item\r\n  const updateCartItemQuantity = useCallback((id: string, quantity: number) => {\r\n    setCart((prev) =>\r\n      prev.map((item) => (item.id === id ? { ...item, quantity: Math.max(1, Number(quantity) || 1) } : item))\r\n    );\r\n    // NOTE: do NOT force refocus here — that steals focus while user types.\r\n  }, [/* no refocusScanner dependency intentionally */]);\r\n\r\n  // Update price for an item\r\n  const updateCartItemPrice = useCallback((id: string, price: number) => {\r\n    setCart((prev) =>\r\n      prev.map((item) =>\r\n        item.id === id ? { ...item, product: { ...item.product, price: Number(isFinite(Number(price)) ? price : 0) } } : item\r\n      )\r\n    );\r\n    // NOTE: do NOT force refocus here — CartTable will refocus on blur/Enter instead.\r\n  }, []);\r\n\r\n  // Use a ref for last-scan timestamps to make duplicate-checks immediate and race-free\r\n  const addOrIncrement = useCallback((product: Product): string => {\r\n     const now = Date.now();\r\n     const productKey = product.barcode || product.id?.toString() || product.name;\r\n \r\n     // Immediate check/update using the ref to avoid races between back-to-back calls\r\n     const lastTime = lastScanTimeRef.current.get(productKey);\r\n     if (lastTime && now - lastTime < 1000) {\r\n       // Duplicate within 1s, do not increment quantity, but still update lastAddedItemId\r\n       // so UI (CartTable) can highlight the last-added row even for search-added products.\r\n      let existingId = \"\";\r\n      setCart((prevCart) => {\r\n        const existing = prevCart.find((item) => productEqual(item.product, product));\r\n        if (existing) {\r\n          existingId = existing.id;\r\n          setLastAddedItemId(existing.id);\r\n        }\r\n        return prevCart;\r\n      });\r\n      // Refresh timestamp to keep duplicate protection consistent\r\n      lastScanTimeRef.current.set(productKey, now);\r\n      // ensure scanner focus after duplicate increment/marking\r\n      requestAnimationFrame(() => {\r\n        try { refocusScanner(true); } catch { /* ignore */ }\r\n      });\r\n      return existingId;\r\n     }\r\n     lastScanTimeRef.current.set(productKey, now);\r\n \r\n    let returnedId = \"\";\r\n    setCart((prevCart) => {\r\n      const existing = prevCart.find((item) => productEqual(item.product, product));\r\n      if (existing) {\r\n        returnedId = existing.id;\r\n        setLastAddedItemId(existing.id);\r\n        return prevCart.map((item) =>\r\n          productEqual(item.product, product) ? { ...item, quantity: item.quantity + 1 } : item\r\n        );\r\n      }\r\n      const cartItem: CartItem = {\r\n        product,\r\n        quantity: 1,\r\n        id: genId(),\r\n      };\r\n      returnedId = cartItem.id;\r\n      setLastAddedItemId(cartItem.id);\r\n      // PREPEND new item so latest products show first\r\n      return [cartItem, ...prevCart];\r\n    });\r\n\r\n    // Ensure scanner regains focus after cart update (defer so DOM updates finish)\r\n    requestAnimationFrame(() => {\r\n      try { refocusScanner(true); } catch { /* ignore */ }\r\n    });\r\n    return returnedId;\r\n   }, [refocusScanner]);\r\n\r\n  const addProductToCart = useCallback((product: Product): string => {\r\n    return addOrIncrement(product);\r\n  }, [addOrIncrement]);\r\n\r\n  const scanAndAddToCart = useCallback(\r\n    async (barcode: string, preValidatedProduct?: Product | null): Promise<void> => {\r\n      if (!barcode) return;\r\n\r\n      const cleanedBarcode = String(barcode).replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, \"\").trim();\r\n      if (!cleanedBarcode) {\r\n        setScanError(\"Invalid barcode\");\r\n        return;\r\n      }\r\n\r\n      if (pendingScans.has(cleanedBarcode)) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setIsScanning(true);\r\n        setScanError(null);\r\n        setPendingScans(prev => new Set([...prev, cleanedBarcode]));\r\n\r\n        let product: Product | null = null;\r\n\r\n        // Use pre-validated product if provided\r\n        if (preValidatedProduct) {\r\n          product = preValidatedProduct;\r\n        } else {\r\n          try {\r\n            product = await productApi.getByBarcode(cleanedBarcode);\r\n          } catch (apiError) {\r\n            product = null;\r\n          }\r\n        }\r\n\r\n        if (product) {\r\n          addOrIncrement(product);\r\n          setScanError(null);\r\n        } else {\r\n          // ⚡ Optimistic placeholder insert\r\n          const placeholder: Product = {\r\n            id: `pending-${cleanedBarcode}`,\r\n            name: \"Loading product...\",\r\n            barcode: cleanedBarcode,\r\n            price: 0,\r\n            quantity: 0,         // ✅ default\r\n            category_id: 0,      // ✅ default (use 0 or -1 for \"unassigned\")\r\n            __placeholder: true, // 👈 mark so you can detect it later\r\n          };\r\n          addOrIncrement(placeholder);\r\n\r\n          // Then trigger product register modal\r\n          try {\r\n            if (typeof setContextBarcode === \"function\") {\r\n              setContextBarcode(cleanedBarcode);\r\n            }\r\n            if (typeof openModal === \"function\") {\r\n              openModal(\"addProduct\");\r\n            } else if (typeof setProductModalOpen === \"function\") {\r\n              setProductModalOpen(true);\r\n            }\r\n          } catch { }\r\n          setScanError(`Product not found: ${cleanedBarcode}`);\r\n        }\r\n      } catch (error) {\r\n        const errorMessage = error instanceof Error ? error.message : \"Error scanning barcode\";\r\n        setScanError(errorMessage);\r\n        console.warn(\"[scanAndAddToCart] Error:\", error);\r\n      } finally {\r\n        setPendingScans(prev => {\r\n          const next = new Set(prev);\r\n          next.delete(cleanedBarcode);\r\n          return next;\r\n        });\r\n        setIsScanning(false);\r\n\r\n        // ⚡ Always refocus via rAF\r\n        requestAnimationFrame(() => refocusScanner(true));\r\n      }\r\n    },\r\n    [pendingScans, openModal, setProductModalOpen, setContextBarcode, refocusScanner, addOrIncrement]\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    const onProductAdded = (e: Event) => {\r\n      const detail = (e as CustomEvent)?.detail;\r\n      if (!detail) return;\r\n\r\n      const addedProduct: Product | undefined = detail.product;\r\n      const barcode: string | undefined = detail.barcode;\r\n\r\n      if (addedProduct) {\r\n        addOrIncrement(addedProduct);\r\n      } else if (barcode) {\r\n        (async () => {\r\n          try {\r\n            const product = await productApi.getByBarcode(barcode);\r\n            if (product) addOrIncrement(product);\r\n          } catch {\r\n            // ignore fetch errors here\r\n          }\r\n        })();\r\n      }\r\n\r\n      try {\r\n        const el = scannerInputRef?.current;\r\n        if (el) {\r\n          try { el.value = \"\"; } catch { }\r\n          el.dispatchEvent(new Event(\"input\", { bubbles: true }));\r\n          try { el.focus(); } catch { }\r\n        }\r\n        // also ensure our shared refocus helper runs (covers other environments)\r\n        requestAnimationFrame(() => {\r\n          try { refocusScanner(true); } catch { /* ignore */ }\r\n        });\r\n      } catch { }\r\n    };\r\n\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener(\"product:added\", onProductAdded as EventListener);\r\n      return () => window.removeEventListener(\"product:added\", onProductAdded as EventListener);\r\n    }\r\n  }, [scannerInputRef, addOrIncrement, refocusScanner]);\r\n\r\n  const cartTotal = useMemo(() => {\r\n    return cart.reduce((total, item) => total + Number(item.product.price || 0) * item.quantity, 0);\r\n  }, [cart]);\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      cart,\r\n      cartTotal,\r\n      scanError,\r\n      isScanning,\r\n      lastAddedItemId,\r\n      scanAndAddToCart,\r\n      addProductToCart,\r\n      refocusScanner,\r\n      setScannerRef,\r\n      updateCartItemQuantity,\r\n      updateCartItemPrice,\r\n      deleteCartItem,\r\n      clearCart,\r\n    }),\r\n    [\r\n      cart,\r\n      cartTotal,\r\n      scanError,\r\n      isScanning,\r\n      lastAddedItemId,\r\n      scanAndAddToCart,\r\n      addProductToCart,\r\n      refocusScanner,\r\n      setScannerRef,\r\n      updateCartItemQuantity,\r\n      updateCartItemPrice,\r\n      deleteCartItem,\r\n      clearCart,\r\n    ]\r\n  );\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useCartKeyboard = (selectedRowId: string | null) => {\r\n  const { cart, updateCartItemQuantity, refocusScanner, deleteCartItem } = useCart();\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      const target = e.target as HTMLElement;\r\n      const isInput = target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\r\n      const isScanner = target.getAttribute('data-barcode-scanner') === 'true' || (target.id === 'barcode-scanner');\r\n      const activeEl = document.activeElement as HTMLElement | null;\r\n\r\n      // detect product search input (matches placeholder used in ProductSearch)\r\n      const isProductSearch = activeEl && activeEl.tagName === 'INPUT' && (\r\n        (activeEl as HTMLInputElement).placeholder?.toLowerCase().includes('search by product') ||\r\n        activeEl.getAttribute('data-product-search') === 'true' ||\r\n        activeEl.closest('[data-product-search]') !== null\r\n      );\r\n\r\n      // More comprehensive customer search detection\r\n      const isCustomerSearch = target.tagName === 'INPUT' && (\r\n        target.getAttribute('data-customer-search') === 'true' ||\r\n        (target as HTMLInputElement).placeholder?.toLowerCase().includes('search name') ||\r\n        (target as HTMLInputElement).placeholder?.toLowerCase().includes('customer') ||\r\n        target.closest('[data-customer-search]') !== null\r\n      );\r\n\r\n      const currentStep = (window as any).posStep || 1;\r\n\r\n      // Quick add-customer shortcut: Ctrl+Shift+C -> open Add Customer modal\r\n      if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"c\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        try {\r\n          window.dispatchEvent(new CustomEvent(\"customer:add\"));\r\n        } catch { }\r\n        return;\r\n      }\r\n\r\n      // Quick add-customer shortcut: Ctrl+Shift+C (unchanged)\r\n      // if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"c\") {\r\n      //   e.preventDefault();\r\n      //   e.stopPropagation();\r\n      //   window.dispatchEvent(new CustomEvent(\"customer:add\"));\r\n      //   return;\r\n      // }\r\n\r\n      // STEP-2 ONLY SHORTCUTS (mirror pattern used for STEP-1)\r\n      if (currentStep === 2) {\r\n        // Ctrl+C -> focus customer input (select text). Do not interfere with Shift or other combos.\r\n        if (e.ctrlKey && !e.shiftKey && e.key.toLowerCase() === \"c\") {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          const customerInput = document.querySelector<HTMLInputElement>(\r\n            'input[data-customer-search=\"true\"], input[placeholder*=\"customer\"], input[placeholder*=\"search name\"]'\r\n          );\r\n          if (customerInput) {\r\n            try {\r\n              customerInput.focus();\r\n              customerInput.select();\r\n              // mark global flag so other handlers can detect customer typing\r\n              (window as any).customerSearchActive = true;\r\n              // clear the flag on blur to restore global shortcuts\r\n              const onBlur = () => {\r\n                try {\r\n                  (window as any).customerSearchActive = false;\r\n                } catch { }\r\n                customerInput.removeEventListener(\"blur\", onBlur);\r\n              };\r\n              customerInput.addEventListener(\"blur\", onBlur);\r\n            } catch { }\r\n          }\r\n          return;\r\n        }\r\n\r\n        // Ctrl+B -> go back to Step 1\r\n        if (e.ctrlKey && !e.shiftKey && e.key.toLowerCase() === \"b\") {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          window.dispatchEvent(new CustomEvent(\"pos:step-1-back\"));\r\n          return;\r\n        }\r\n\r\n        // Plain Enter in Step 2 -> advance to Step 3.\r\n        // Only block advancement when focused element is a TEXTAREA or contentEditable.\r\n        if (e.key === \"Enter\" && !e.ctrlKey) {\r\n          const activeEl = document.activeElement as HTMLElement | null;\r\n          // If focus is inside the AddCustomer modal, let the modal handle Enter (do not dispatch step event).\r\n          const isInAddCustomerModal = !!activeEl && typeof activeEl.closest === \"function\" && !!activeEl.closest('[data-add-customer-modal=\"true\"]');\r\n          if (isInAddCustomerModal) {\r\n            // allow modal inputs / buttons to receive the Enter key\r\n            return;\r\n          }\r\n          const isTextArea = !!activeEl && activeEl.tagName === \"TEXTAREA\";\r\n          const isContentEditable = !!activeEl && (activeEl as HTMLElement).isContentEditable === true;\r\n          if (!isTextArea && !isContentEditable) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            window.dispatchEvent(new CustomEvent(\"pos:step-2-complete\"));\r\n            return;\r\n          }\r\n          // otherwise let the focused element handle Enter (e.g. multiline inputs)\r\n          return;\r\n        }\r\n\r\n        // keep Step 2-specific shortcuts here if you want more (e.g. Ctrl+D delete in step2), then return\r\n      } // end STEP-2 block\r\n\r\n      // STEP-3: Enter -> complete/close transaction (unless typing in a textarea/contentEditable)\r\n      if (currentStep === 3 && e.key === \"Enter\" && !e.ctrlKey) {\r\n        const activeEl = document.activeElement as HTMLElement | null;\r\n        const isTextArea = !!activeEl && activeEl.tagName === \"TEXTAREA\";\r\n        const isContentEditable = !!activeEl && (activeEl as HTMLElement).isContentEditable === true;\r\n        // If focused element is multiline/contentEditable let it handle Enter\r\n        if (isTextArea || isContentEditable) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        try {\r\n          window.dispatchEvent(new CustomEvent(\"pos:step-3-complete\"));\r\n        } catch { }\r\n        return;\r\n      }\r\n\r\n      // STEP-1 ONLY SHORTCUTS\r\n      if (currentStep === 1) {\r\n        // F2 handled in leftColumn already (keeps responsibility there) - keep global no-op to avoid interference\r\n        if (e.key === 'F2') {\r\n          // do not prevent ProductSearch local handler; leftColumn handles focusing\r\n          return;\r\n        }\r\n\r\n        // Arrow navigation: move selection up/down in cart\r\n        // Allow when not typing in a regular input OR when the scanner input is focused\r\n        if ((!isInput || isScanner) && (e.key === \"ArrowDown\" || e.key === \"ArrowUp\")) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (e.key === \"ArrowDown\") {\r\n            window.dispatchEvent(new CustomEvent(\"cart:select-next\"));\r\n          } else {\r\n            window.dispatchEvent(new CustomEvent(\"cart:select-prev\"));\r\n          }\r\n          return;\r\n        }\r\n\r\n        // Ctrl+Shift+P -> focus selected row price input\r\n        if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === 'p') {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (selectedRowId) {\r\n            const priceInput = document.querySelector(`input[data-cart-price-input=\"${selectedRowId}\"]`) as HTMLInputElement | null;\r\n            if (priceInput) {\r\n              priceInput.focus();\r\n              priceInput.select();\r\n            }\r\n          }\r\n          return;\r\n        }\r\n\r\n        // Ctrl+D -> delete selected item, refocus scanner\r\n        if (e.ctrlKey && !e.shiftKey && e.key.toLowerCase() === 'd') {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (selectedRowId) {\r\n            deleteCartItem(selectedRowId);\r\n            refocusScanner(true);\r\n          }\r\n          return;\r\n        }\r\n\r\n        // +/- quantity adjustments while not typing in a different input (preserve previous behavior but limited to step 1)\r\n        const isPlusKey = e.key === \"+\" || e.code === \"NumpadAdd\" || (e.code === \"Equal\" && e.shiftKey);\r\n        const isMinusKey = e.key === \"-\" || e.code === \"NumpadSubtract\" || e.code === \"Minus\";\r\n        if ((isPlusKey || isMinusKey) && !isInput) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (!selectedRowId) {\r\n            refocusScanner();\r\n            return;\r\n          }\r\n          const item = cart.find((i) => i.id === selectedRowId);\r\n          if (!item) {\r\n            refocusScanner();\r\n            return;\r\n          }\r\n          if (isPlusKey) {\r\n            updateCartItemQuantity(item.id, item.quantity + 1);\r\n          } else if (item.quantity > 1) {\r\n            updateCartItemQuantity(item.id, item.quantity - 1);\r\n          }\r\n          // Always FORCE refocus scanner after quantity change\r\n          refocusScanner(true);\r\n          return;\r\n        }\r\n\r\n        // If Enter pressed while editing a price input: confirm (blur) and refocus scanner\r\n        if (e.key === 'Enter' && !e.ctrlKey) {\r\n          const activeIsPriceInput = !!activeEl && !!(activeEl.getAttribute && activeEl.getAttribute('data-cart-price-input'));\r\n          if (activeIsPriceInput) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            try { (activeEl as HTMLInputElement).blur(); } catch { }\r\n            refocusScanner();\r\n            return;\r\n          }\r\n\r\n          // Let ProductSearch (and other local inputs) handle Enter — do not advance step from here\r\n          const activeIsProductSearch = isProductSearch;\r\n          if (activeIsProductSearch) {\r\n            return;\r\n          }\r\n\r\n          // For other inputs in step 1, do nothing here\r\n          return;\r\n        }\r\n      } // end step 1-only block\r\n\r\n      // existing handlers for Ctrl+Enter / Ctrl+1 / scanner / plus/minus in other steps\r\n      const isBody = target.tagName === 'BODY';\r\n\r\n      // Handle Ctrl+Enter for POS navigation - preserve focus behavior and dispatch step-specific event\r\n      if (e.ctrlKey && e.key === 'Enter') {\r\n        const activeElement = document.activeElement as HTMLElement | null;\r\n        const isCashInput = activeElement && (activeElement.getAttribute('data-pos-cash-input') === 'true' || activeElement.getAttribute('placeholder') === '0.00');\r\n\r\n        // Only in Step 1: if not already on cash input, focus it instead of advancing\r\n        if (currentStep === 1 && !isCashInput) {\r\n          const cashInput = document.querySelector('input[placeholder=\"0.00\"], input[data-pos-cash-input=\"true\"]') as HTMLInputElement;\r\n          if (cashInput) {\r\n            cashInput.focus();\r\n            cashInput.select();\r\n          }\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          return;\r\n        }\r\n\r\n        // Otherwise dispatch the current step complete event\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (currentStep === 1) {\r\n          window.dispatchEvent(new CustomEvent('pos:step-1-complete'));\r\n        } else if (currentStep === 2) {\r\n          window.dispatchEvent(new CustomEvent('pos:step-2-complete'));\r\n        } else if (currentStep === 3) {\r\n          // New: allow Ctrl+Enter to complete Step 3 (finish/close transaction)\r\n          window.dispatchEvent(new CustomEvent('pos:step-3-complete'));\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Handle Ctrl+1 - behave like a \"go to next from step 1\" shortcut\r\n      if (e.ctrlKey && e.key === '1') {\r\n        const activeElement = document.activeElement as HTMLElement | null;\r\n        const isCashInput = activeElement && (activeElement.getAttribute('data-pos-cash-input') === 'true' || activeElement.getAttribute('placeholder') === '0.00');\r\n\r\n        if (currentStep === 1 && !isCashInput) {\r\n          const cashInput = document.querySelector('input[placeholder=\"0.00\"], input[data-pos-cash-input=\"true\"]') as HTMLInputElement;\r\n          if (cashInput) {\r\n            cashInput.focus();\r\n            cashInput.select();\r\n          }\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          return; // focus only, do not advance\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (currentStep === 1) {\r\n          window.dispatchEvent(new CustomEvent('pos:step-1-complete'));\r\n        } else if (currentStep === 2) {\r\n          window.dispatchEvent(new CustomEvent('pos:step-2-complete'));\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Handle numpad 0 / F5 for refocusing scanner (unchanged)\r\n      if ((e.key === \"0\" && e.code === \"Numpad0\") || e.key === \"F5\") {\r\n        if (!isInput || isScanner) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          refocusScanner(true);\r\n          window.dispatchEvent(new Event('focusBarcodeScanner'));\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!selectedRowId) {\r\n        if (!isInput && !isBody) {\r\n          refocusScanner(true);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // +/- quantity handling (only when appropriate) - unchanged\r\n      const shouldHandlePlusMinus = isBody || isScanner || (!isInput && !isCustomerSearch);\r\n      if (!shouldHandlePlusMinus) return;\r\n\r\n      const isPlusKey = e.key === \"+\" || e.code === \"NumpadAdd\" || (e.code === \"Equal\" && e.shiftKey);\r\n      const isMinusKey = e.key === \"-\" || e.code === \"NumpadSubtract\" || e.code === \"Minus\";\r\n\r\n      if (isPlusKey || isMinusKey) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const item = cart.find((i) => i.id === selectedRowId);\r\n        if (!item) return;\r\n\r\n        if (isPlusKey) {\r\n          updateCartItemQuantity(item.id, item.quantity + 1);\r\n        } else if (item.quantity > 1) {\r\n          updateCartItemQuantity(item.id, item.quantity - 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown, { capture: true, passive: false });\r\n    return () => document.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\r\n  }, [selectedRowId, cart, updateCartItemQuantity, refocusScanner, deleteCartItem]);\r\n};"],"names":[],"mappings":";;;;;;;;;AAAA;AAWA;AACA;;;;;AA0BA,MAAM,4BAAc,IAAA,sNAAa,EAA8B;AAE/D,MAAM,QAAQ,IACZ,OAAO,WAAW,eAAe,OAAO,AAAC,OAAe,UAAU,KAAK,aACnE,AAAC,OAAe,UAAU,KAC1B,KAAK,GAAG,GAAG,QAAQ;AAEzB,MAAM,eAAe,CAAC,GAAY;IAChC,IAAI,GAAG,MAAM,GAAG,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE,EAAE;IACxC,OAAO,QAAQ,GAAG,WAAW,GAAG,WAAW,EAAE,OAAO,KAAK,EAAE,OAAO;AACpE;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAa,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAgB;IAC1D,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAU;IACtD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAgB;IACtE,MAAM,CAAC,iBAAiB,mBAAmB,GACzC,IAAA,iNAAQ,EAAqC;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAc,IAAI;IAClE,iGAAiG;IACjG,MAAM,kBAAkB,IAAA,+MAAM,EAAsB,IAAI;IAExD,MAAM,EAAE,YAAY,iBAAiB,EAAE,SAAS,EAAE,SAAS,mBAAmB,EAAE,GAC9E,IAAA,iKAAe;IAEjB,MAAM,YAAY,IAAA,oNAAW,EAAC;QAC5B,QAAQ,EAAE;QACV,mBAAmB;QACnB,gBAAgB,OAAO,GAAG,IAAI;IAChC,GAAG,EAAE;IAEL,MAAM,gBAAgB,IAAA,oNAAW,EAAC,CAAC;QACjC,mBAAmB;IACrB,GAAG,EAAE;IAEL,MAAM,iBAAiB,IAAA,oNAAW,EAAC,CAAC,QAAQ,KAAK;QAC/C,IAAI;YACF,MAAM,KAAK,iBAAiB;YAC5B,IAAI,CAAC,IAAI;YACT,MAAM,SAAS,SAAS,aAAa;YAErC,kGAAkG;YAClG,IAAI,CAAC,SAAS,QAAQ;gBACpB,MAAM,MAAM,OAAO,OAAO;gBAC1B,MAAM,WACJ,QAAQ,WACR,QAAQ,cACR,AAAC,OAAuB,iBAAiB,KAAK;gBAEhD,MAAM,kBACJ,OAAO,YAAY,GAAG,2BAA2B,UACjD,OAAO,AAAC,OAA4B,WAAW,IAAI,IAChD,WAAW,GACX,QAAQ,CAAC;gBAEd,MAAM,mBACJ,OAAO,YAAY,GAAG,4BAA4B,UAClD,OAAO,AAAC,OAA4B,WAAW,IAAI,IAChD,WAAW,GACX,QAAQ,CAAC;gBAEd,MAAM,eAAe,CAAC,CAAC,OAAO,YAAY,GAAG;gBAC7C,MAAM,aAAa,CAAC,CAAC,OAAO,YAAY,GAAG;gBAC3C,MAAM,cACJ,OAAO,YAAY,GAAG,2BAA2B,UAChD,OAAO,YAAY,IAAI,OAAO,YAAY,CAAC,mBAAmB;gBAEjE,4EAA4E;gBAC5E,IACE,YACA,CAAC,mBAAmB,oBAAoB,gBAAgB,cAAc,WAAW,GACjF;oBACA;gBACF;YACF;YAEA,kEAAkE;YAClE,sBAAsB;gBACpB,IAAI;oBACF,iBAAiB,SAAS;oBAC1B,2DAA2D;oBAC1D,iBAAiB,SAAqC;gBACzD,EAAE,OAAM;gBACN,uBAAuB;gBACzB;YACF;QACF,EAAE,OAAM;QACN,SAAS;QACX;IACF,GAAG;QAAC;KAAgB;IAEpB,kFAAkF;IAClF,MAAM,iBAAiB,IAAA,oNAAW,EAAC,CAAC;QAClC,0EAA0E;QAC1E,IAAI,iBAAgC;QACpC,IAAI,QAAQ,KAAK,MAAM,GAAG,GAAG;YAC3B,MAAM,MAAM,KAAK,SAAS,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;YACjD,IAAI,KAAK,MAAM,GAAG,GAAG;gBACnB,IAAI,MAAM,GAAG;oBACX,iBAAiB,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gBACnC,OAAO;oBACL,2DAA2D;oBAC3D,iBAAiB,IAAI,CAAC,EAAE,EAAE,MAAM;gBAClC;YACF,OAAO;gBACL,iBAAiB;YACnB;QACF;QAEA,QAAQ,CAAC,WAAa,SAAS,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;QAC5D,mBAAmB,CAAC,OAAU,SAAS,KAAK,OAAO;QAEnD,6DAA6D;QAC7D,IAAI;YACF,OAAO,aAAa,CAClB,IAAI,YAAY,qBAAqB;gBACnC,QAAQ;oBAAE,WAAW;oBAAI;gBAAe;YAC1C;QAEJ,EAAE,OAAO,KAAK,CAAe;QAE7B,6DAA6D;QAC7D,eAAe;IACjB,GAAG;QAAC;QAAM;KAAe;IAEzB,8BAA8B;IAC9B,MAAM,yBAAyB,IAAA,oNAAW,EAAC,CAAC,IAAY;QACtD,QAAQ,CAAC,OACP,KAAK,GAAG,CAAC,CAAC,OAAU,KAAK,EAAE,KAAK,KAAK;oBAAE,GAAG,IAAI;oBAAE,UAAU,KAAK,GAAG,CAAC,GAAG,OAAO,aAAa;gBAAG,IAAI;IAEnG,wEAAwE;IAC1E,GAAG,EAAkD;IAErD,2BAA2B;IAC3B,MAAM,sBAAsB,IAAA,oNAAW,EAAC,CAAC,IAAY;QACnD,QAAQ,CAAC,OACP,KAAK,GAAG,CAAC,CAAC,OACR,KAAK,EAAE,KAAK,KAAK;oBAAE,GAAG,IAAI;oBAAE,SAAS;wBAAE,GAAG,KAAK,OAAO;wBAAE,OAAO,OAAO,SAAS,OAAO,UAAU,QAAQ;oBAAG;gBAAE,IAAI;IAGrH,kFAAkF;IACpF,GAAG,EAAE;IAEL,sFAAsF;IACtF,MAAM,iBAAiB,IAAA,oNAAW,EAAC,CAAC;QACjC,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,aAAa,QAAQ,OAAO,IAAI,QAAQ,EAAE,EAAE,cAAc,QAAQ,IAAI;QAE5E,iFAAiF;QACjF,MAAM,WAAW,gBAAgB,OAAO,CAAC,GAAG,CAAC;QAC7C,IAAI,YAAY,MAAM,WAAW,MAAM;YACrC,mFAAmF;YACnF,qFAAqF;YACtF,IAAI,aAAa;YACjB,QAAQ,CAAC;gBACP,MAAM,WAAW,SAAS,IAAI,CAAC,CAAC,OAAS,aAAa,KAAK,OAAO,EAAE;gBACpE,IAAI,UAAU;oBACZ,aAAa,SAAS,EAAE;oBACxB,mBAAmB,SAAS,EAAE;gBAChC;gBACA,OAAO;YACT;YACA,4DAA4D;YAC5D,gBAAgB,OAAO,CAAC,GAAG,CAAC,YAAY;YACxC,yDAAyD;YACzD,sBAAsB;gBACpB,IAAI;oBAAE,eAAe;gBAAO,EAAE,OAAM,CAAe;YACrD;YACA,OAAO;QACR;QACA,gBAAgB,OAAO,CAAC,GAAG,CAAC,YAAY;QAEzC,IAAI,aAAa;QACjB,QAAQ,CAAC;YACP,MAAM,WAAW,SAAS,IAAI,CAAC,CAAC,OAAS,aAAa,KAAK,OAAO,EAAE;YACpE,IAAI,UAAU;gBACZ,aAAa,SAAS,EAAE;gBACxB,mBAAmB,SAAS,EAAE;gBAC9B,OAAO,SAAS,GAAG,CAAC,CAAC,OACnB,aAAa,KAAK,OAAO,EAAE,WAAW;wBAAE,GAAG,IAAI;wBAAE,UAAU,KAAK,QAAQ,GAAG;oBAAE,IAAI;YAErF;YACA,MAAM,WAAqB;gBACzB;gBACA,UAAU;gBACV,IAAI;YACN;YACA,aAAa,SAAS,EAAE;YACxB,mBAAmB,SAAS,EAAE;YAC9B,iDAAiD;YACjD,OAAO;gBAAC;mBAAa;aAAS;QAChC;QAEA,+EAA+E;QAC/E,sBAAsB;YACpB,IAAI;gBAAE,eAAe;YAAO,EAAE,OAAM,CAAe;QACrD;QACA,OAAO;IACR,GAAG;QAAC;KAAe;IAEpB,MAAM,mBAAmB,IAAA,oNAAW,EAAC,CAAC;QACpC,OAAO,eAAe;IACxB,GAAG;QAAC;KAAe;IAEnB,MAAM,mBAAmB,IAAA,oNAAW,EAClC,OAAO,SAAiB;QACtB,IAAI,CAAC,SAAS;QAEd,MAAM,iBAAiB,OAAO,SAAS,OAAO,CAAC,iCAAiC,IAAI,IAAI;QACxF,IAAI,CAAC,gBAAgB;YACnB,aAAa;YACb;QACF;QAEA,IAAI,aAAa,GAAG,CAAC,iBAAiB;YACpC;QACF;QAEA,IAAI;YACF,cAAc;YACd,aAAa;YACb,gBAAgB,CAAA,OAAQ,IAAI,IAAI;uBAAI;oBAAM;iBAAe;YAEzD,IAAI,UAA0B;YAE9B,wCAAwC;YACxC,IAAI,qBAAqB;gBACvB,UAAU;YACZ,OAAO;gBACL,IAAI;oBACF,UAAU,MAAM,uJAAU,CAAC,YAAY,CAAC;gBAC1C,EAAE,OAAO,UAAU;oBACjB,UAAU;gBACZ;YACF;YAEA,IAAI,SAAS;gBACX,eAAe;gBACf,aAAa;YACf,OAAO;gBACL,kCAAkC;gBAClC,MAAM,cAAuB;oBAC3B,IAAI,CAAC,QAAQ,EAAE,gBAAgB;oBAC/B,MAAM;oBACN,SAAS;oBACT,OAAO;oBACP,UAAU;oBACV,aAAa;oBACb,eAAe;gBACjB;gBACA,eAAe;gBAEf,sCAAsC;gBACtC,IAAI;oBACF,IAAI,OAAO,sBAAsB,YAAY;wBAC3C,kBAAkB;oBACpB;oBACA,IAAI,OAAO,cAAc,YAAY;wBACnC,UAAU;oBACZ,OAAO,IAAI,OAAO,wBAAwB,YAAY;wBACpD,oBAAoB;oBACtB;gBACF,EAAE,OAAM,CAAE;gBACV,aAAa,CAAC,mBAAmB,EAAE,gBAAgB;YACrD;QACF,EAAE,OAAO,OAAO;YACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,aAAa;YACb,QAAQ,IAAI,CAAC,6BAA6B;QAC5C,SAAU;YACR,gBAAgB,CAAA;gBACd,MAAM,OAAO,IAAI,IAAI;gBACrB,KAAK,MAAM,CAAC;gBACZ,OAAO;YACT;YACA,cAAc;YAEd,2BAA2B;YAC3B,sBAAsB,IAAM,eAAe;QAC7C;IACF,GACA;QAAC;QAAc;QAAW;QAAqB;QAAmB;QAAgB;KAAe;IAInG,IAAA,kNAAS,EAAC;QACR,MAAM,iBAAiB,CAAC;YACtB,MAAM,SAAU,GAAmB;YACnC,IAAI,CAAC,QAAQ;YAEb,MAAM,eAAoC,OAAO,OAAO;YACxD,MAAM,UAA8B,OAAO,OAAO;YAElD,IAAI,cAAc;gBAChB,eAAe;YACjB,OAAO,IAAI,SAAS;gBAClB,CAAC;oBACC,IAAI;wBACF,MAAM,UAAU,MAAM,uJAAU,CAAC,YAAY,CAAC;wBAC9C,IAAI,SAAS,eAAe;oBAC9B,EAAE,OAAM;oBACN,2BAA2B;oBAC7B;gBACF,CAAC;YACH;YAEA,IAAI;gBACF,MAAM,KAAK,iBAAiB;gBAC5B,IAAI,IAAI;oBACN,IAAI;wBAAE,GAAG,KAAK,GAAG;oBAAI,EAAE,OAAM,CAAE;oBAC/B,GAAG,aAAa,CAAC,IAAI,MAAM,SAAS;wBAAE,SAAS;oBAAK;oBACpD,IAAI;wBAAE,GAAG,KAAK;oBAAI,EAAE,OAAM,CAAE;gBAC9B;gBACA,yEAAyE;gBACzE,sBAAsB;oBACpB,IAAI;wBAAE,eAAe;oBAAO,EAAE,OAAM,CAAe;gBACrD;YACF,EAAE,OAAM,CAAE;QACZ;QAEA;;IAIF,GAAG;QAAC;QAAiB;QAAgB;KAAe;IAEpD,MAAM,YAAY,IAAA,gNAAO,EAAC;QACxB,OAAO,KAAK,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,OAAO,KAAK,OAAO,CAAC,KAAK,IAAI,KAAK,KAAK,QAAQ,EAAE;IAC/F,GAAG;QAAC;KAAK;IAET,MAAM,QAAQ,IAAA,gNAAO,EACnB,IAAM,CAAC;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF,CAAC,GACD;QACE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAGH,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAEO,MAAM,kBAAkB,CAAC;IAC9B,MAAM,EAAE,IAAI,EAAE,sBAAsB,EAAE,cAAc,EAAE,cAAc,EAAE,GAAG;IAEzE,IAAA,kNAAS,EAAC;QACR,wCAAmC;;;QAEnC,MAAM;IA0TR,GAAG;QAAC;QAAe;QAAM;QAAwB;QAAgB;KAAe;AAClF","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/hooks/pos/leftCol/useCartSelection.ts"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useCartSelection<T = string>() {\r\n  const [selectedRowId, setSelectedRowId] = useState<T | null>(null);\r\n\r\n  const selectRow = (rowId: T) => {\r\n    setSelectedRowId(rowId);\r\n  };\r\n\r\n  const clearSelection = () => {\r\n    setSelectedRowId(null);\r\n  };\r\n\r\n  return {\r\n    selectedRowId,\r\n    selectRow,\r\n    clearSelection,\r\n  };\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS;IACd,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAW;IAE7D,MAAM,YAAY,CAAC;QACjB,iBAAiB;IACnB;IAEA,MAAM,iBAAiB;QACrB,iBAAiB;IACnB;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/hooks/pos/leftCol/useBarcodeScan.ts"],"sourcesContent":["import { useState, useRef, useCallback } from \"react\";\r\n\r\nexport function useBarcodeScan(onScan: (barcode: string) => void | Promise<void>) {\r\n  const [barcodeInput, setBarcodeInput] = useState(\"\");\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const processingRef = useRef(false);\r\n  const lastProcessedBarcode = useRef<string>(\"\");\r\n  const lastProcessedTime = useRef<number>(0);\r\n\r\n  // ⚡ Faster timings\r\n  const COOLDOWN_MS = 20;          // was 50\r\n  const SCAN_DEBOUNCE_MS = 80;     // was 150\r\n  const DUPLICATE_PREVENT_MS = 400; // was 500\r\n\r\n  const runScan = useCallback(\r\n    async (raw: string) => {\r\n      const now = Date.now();\r\n      const clean = String(raw).replace(/[\\n\\r\\t]/g, \"\").trim();\r\n\r\n      if (!clean || clean.length < 2) return;\r\n      if (processingRef.current) return;\r\n\r\n      if (\r\n        clean === lastProcessedBarcode.current &&\r\n        now - lastProcessedTime.current < DUPLICATE_PREVENT_MS\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      processingRef.current = true;\r\n      lastProcessedBarcode.current = clean;\r\n      lastProcessedTime.current = now;\r\n\r\n      try {\r\n        await Promise.resolve(onScan(clean));\r\n      } catch (err) {\r\n        console.warn(\"[useBarcodeScan] scan error:\", err);\r\n      } finally {\r\n        setBarcodeInput(\"\");\r\n        requestAnimationFrame(() => {\r\n          processingRef.current = false;\r\n          if (inputRef.current) {\r\n            inputRef.current.value = \"\";\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [onScan]\r\n  );\r\n\r\n  const handleBarcodeChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = e.target.value;\r\n      setBarcodeInput(value);\r\n\r\n      if (value.includes(\"\\n\") || value.includes(\"\\r\")) {\r\n        void runScan(value.replace(/[\\n\\r]/g, \"\").trim());\r\n        return;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        if (e.target.value === value && value.trim().length >= 3) {\r\n          void runScan(value);\r\n        }\r\n      }, SCAN_DEBOUNCE_MS);\r\n    },\r\n    [runScan]\r\n  );\r\n\r\n  const handleKeyPress = useCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        const val = barcodeInput.trim();\r\n        if (val) {\r\n          void runScan(val);\r\n        }\r\n      }\r\n    },\r\n    [barcodeInput, runScan]\r\n  );\r\n\r\n  return {\r\n    barcodeInput,\r\n    inputRef,\r\n    handleBarcodeChange,\r\n    handleKeyPress,\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,eAAe,MAAiD;IAC9E,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IACjD,MAAM,WAAW,IAAA,+MAAM,EAA0B;IAEjD,MAAM,gBAAgB,IAAA,+MAAM,EAAC;IAC7B,MAAM,uBAAuB,IAAA,+MAAM,EAAS;IAC5C,MAAM,oBAAoB,IAAA,+MAAM,EAAS;IAEzC,mBAAmB;IACnB,MAAM,cAAc,IAAa,SAAS;IAC1C,MAAM,mBAAmB,IAAQ,UAAU;IAC3C,MAAM,uBAAuB,KAAK,UAAU;IAE5C,MAAM,UAAU,IAAA,oNAAW,EACzB,OAAO;QACL,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,QAAQ,OAAO,KAAK,OAAO,CAAC,aAAa,IAAI,IAAI;QAEvD,IAAI,CAAC,SAAS,MAAM,MAAM,GAAG,GAAG;QAChC,IAAI,cAAc,OAAO,EAAE;QAE3B,IACE,UAAU,qBAAqB,OAAO,IACtC,MAAM,kBAAkB,OAAO,GAAG,sBAClC;YACA;QACF;QAEA,cAAc,OAAO,GAAG;QACxB,qBAAqB,OAAO,GAAG;QAC/B,kBAAkB,OAAO,GAAG;QAE5B,IAAI;YACF,MAAM,QAAQ,OAAO,CAAC,OAAO;QAC/B,EAAE,OAAO,KAAK;YACZ,QAAQ,IAAI,CAAC,gCAAgC;QAC/C,SAAU;YACR,gBAAgB;YAChB,sBAAsB;gBACpB,cAAc,OAAO,GAAG;gBACxB,IAAI,SAAS,OAAO,EAAE;oBACpB,SAAS,OAAO,CAAC,KAAK,GAAG;gBAC3B;YACF;QACF;IACF,GACA;QAAC;KAAO;IAGV,MAAM,sBAAsB,IAAA,oNAAW,EACrC,CAAC;QACC,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,gBAAgB;QAEhB,IAAI,MAAM,QAAQ,CAAC,SAAS,MAAM,QAAQ,CAAC,OAAO;YAChD,KAAK,QAAQ,MAAM,OAAO,CAAC,WAAW,IAAI,IAAI;YAC9C;QACF;QAEA,WAAW;YACT,IAAI,EAAE,MAAM,CAAC,KAAK,KAAK,SAAS,MAAM,IAAI,GAAG,MAAM,IAAI,GAAG;gBACxD,KAAK,QAAQ;YACf;QACF,GAAG;IACL,GACA;QAAC;KAAQ;IAGX,MAAM,iBAAiB,IAAA,oNAAW,EAChC,CAAC;QACC,IAAI,EAAE,GAAG,KAAK,SAAS;YACrB,EAAE,cAAc;YAChB,MAAM,MAAM,aAAa,IAAI;YAC7B,IAAI,KAAK;gBACP,KAAK,QAAQ;YACf;QACF;IACF,GACA;QAAC;QAAc;KAAQ;IAGzB,OAAO;QACL;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/hooks/pos/leftCol/useProductsSearch.ts"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport type { Product } from \"@/hooks/products/useProductApi\";\r\n\r\nexport function useProductSearch(products: Product[], onSelect: (p: Product) => void) {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState<Product[]>([]);\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const autoSelectTimer = useRef<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    const q = String(searchQuery || \"\").trim().toLowerCase();\r\n\r\n    // helper to compare result arrays (by id or barcode fallback)\r\n    const sameResults = (a: Product[], b: Product[]) => {\r\n      if (a === b) return true;\r\n      if (a.length !== b.length) return false;\r\n      for (let i = 0; i < a.length; i++) {\r\n        const aKey = String(a[i]?.id ?? a[i]?.barcode ?? \"\");\r\n        const bKey = String(b[i]?.id ?? b[i]?.barcode ?? \"\");\r\n        if (aKey !== bKey) return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    // clear any pending auto-select timer whenever query/results change\r\n    if (autoSelectTimer.current) {\r\n      clearTimeout(autoSelectTimer.current);\r\n      autoSelectTimer.current = null;\r\n    }\r\n\r\n    // If query empty -> only update state when it's actually different\r\n    if (!q) {\r\n      setSearchResults((prev) => (prev.length === 0 ? prev : []));\r\n      setShowSearchResults((prev) => (prev === false ? prev : false));\r\n      return;\r\n    }\r\n\r\n    // build results (case-insensitive partial match on name or barcode)\r\n    const results = products.filter((p) => {\r\n      const name = String(p?.name || \"\").toLowerCase();\r\n      const barcode = String(p?.barcode || \"\").toLowerCase();\r\n      return name.includes(q) || barcode.includes(q);\r\n    });\r\n\r\n    // update searchResults only when changed\r\n    setSearchResults((prev) => (sameResults(prev, results) ? prev : results));\r\n    setShowSearchResults((prev) => (prev === (results.length > 0) ? prev : results.length > 0));\r\n\r\n    // Immediate auto-select if query exactly matches a product barcode (fast path)\r\n    const exactBarcodeMatch = results.find((p) => String(p.barcode || \"\").toLowerCase() === q);\r\n    if (exactBarcodeMatch) {\r\n      // call onSelect synchronously for exact barcode\r\n      onSelect(exactBarcodeMatch);\r\n      return;\r\n    }\r\n\r\n    // If only one partial result, schedule a very short auto-select\r\n    if (results.length === 1 && q.length >= 2) {\r\n      autoSelectTimer.current = window.setTimeout(() => {\r\n        // Defensive: ensure the same single result still applies\r\n        const latestQ = String(searchQuery || \"\").trim().toLowerCase();\r\n        const latestResults = products.filter((p) => {\r\n          const name = String(p?.name || \"\").toLowerCase();\r\n          const barcode = String(p?.barcode || \"\").toLowerCase();\r\n          return name.includes(latestQ) || barcode.includes(latestQ);\r\n        });\r\n        if (latestResults.length === 1) {\r\n          onSelect(latestResults[0]);\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    return () => {\r\n      if (autoSelectTimer.current) {\r\n        clearTimeout(autoSelectTimer.current);\r\n        autoSelectTimer.current = null;\r\n      }\r\n    };\r\n  }, [searchQuery, products, onSelect]);\r\n\r\n  const handleSearchChange = (val: string) => {\r\n    setSearchQuery(val);\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchQuery(\"\");\r\n    setSearchResults([]);\r\n    setShowSearchResults(false);\r\n    if (autoSelectTimer.current) {\r\n      clearTimeout(autoSelectTimer.current);\r\n      autoSelectTimer.current = null;\r\n    }\r\n  };\r\n\r\n  return {\r\n    searchQuery,\r\n    searchResults,\r\n    showSearchResults,\r\n    handleSearchChange,\r\n    clearSearch,\r\n  };\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"table-container\"\r\n      className=\"relative w-full overflow-x-auto\"\r\n    >\r\n      <table\r\n        data-slot=\"table\"\r\n        className={cn(\"w-full caption-bottom text-sm\", className)}\r\n        {...props}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\r\n  return (\r\n    <thead\r\n      data-slot=\"table-header\"\r\n      className={cn(\"[&_tr]:border-b\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\r\n  return (\r\n    <tbody\r\n      data-slot=\"table-body\"\r\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\r\n  return (\r\n    <tfoot\r\n      data-slot=\"table-footer\"\r\n      className={cn(\r\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\r\n  return (\r\n    <tr\r\n      data-slot=\"table-row\"\r\n      className={cn(\r\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\r\n  return (\r\n    <th\r\n      data-slot=\"table-head\"\r\n      className={cn(\r\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\r\n  return (\r\n    <td\r\n      data-slot=\"table-cell\"\r\n      className={cn(\r\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCaption({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"caption\">) {\r\n  return (\r\n    <caption\r\n      data-slot=\"table-caption\"\r\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/POS/components/leftColumn/CartTable.tsx"],"sourcesContent":["import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ScanLine, CheckIcon, Loader2 } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Product } from \"@/hooks/products/useProductApi\";\r\nimport { useCart } from \"@/contexts/cart-context\";\r\n\r\ninterface CartItem {\r\n  id: string;\r\n  product: Product;\r\n  quantity: number;\r\n}\r\n\r\ninterface CartTableProps {\r\n  cart: CartItem[];\r\n  selectedRowId: string | null;\r\n  selectRow: (id: string) => void;\r\n  updateCartItemQuantity: (id: string, qty: number) => void;\r\n  updateCartItemPrice: (id: string, price: number) => void;\r\n  deleteCartItem: (id: string) => void;\r\n  refocusScanner: (force?: boolean) => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport default function CartTable({\r\n  cart,\r\n  selectedRowId,\r\n  selectRow,\r\n  updateCartItemQuantity,\r\n  updateCartItemPrice,\r\n  deleteCartItem,\r\n  refocusScanner,\r\n  disabled = false,\r\n}: CartTableProps) {\r\n  const [refocused, setRefocused] = useState<boolean>(false);\r\n  const { lastAddedItemId } = useCart();\r\n  const lastAutoSelectedId = useRef<string | null>(null);\r\n\r\n  // Robustly auto-select the last added cart row.\r\n  // Some add flows (search -> add) may set lastAddedItemId before the cart\r\n  // update has propagated here, so retry for a few frames until the row exists.\r\n  useEffect(() => {\r\n    if (!lastAddedItemId) return;\r\n    if (lastAutoSelectedId.current === lastAddedItemId) return;\r\n\r\n    let cancelled = false;\r\n    let attempts = 0;\r\n    const maxAttempts = 20;\r\n\r\n    const trySelect = () => {\r\n      if (cancelled) return;\r\n      const exists = cart.some((it) => it.id === lastAddedItemId);\r\n      if (exists) {\r\n        lastAutoSelectedId.current = lastAddedItemId;\r\n        try { selectRow(lastAddedItemId); } catch { /* ignore */ }\r\n\r\n        // Ensure scanner refocus after selection (defer so the row actually exists in the DOM)\r\n        requestAnimationFrame(() => {\r\n          try { refocusScanner(true); } catch { /* ignore */ }\r\n        });\r\n        return;\r\n      }\r\n      attempts++;\r\n      if (attempts < maxAttempts) {\r\n        requestAnimationFrame(trySelect);\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(trySelect);\r\n    return () => { cancelled = true; };\r\n  }, [lastAddedItemId, cart, selectRow, refocusScanner]);\r\n\r\n  // If the tracked lastAutoSelectedId is removed from the cart, reset tracking\r\n  useEffect(() => {\r\n    if (lastAutoSelectedId.current && !cart.find((it) => it.id === lastAutoSelectedId.current)) {\r\n      lastAutoSelectedId.current = null;\r\n    }\r\n  }, [cart]);\r\n\r\n  const handleRowClick = (itemId: string, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    selectRow(itemId);\r\n\r\n    // Always force scanner focus after selecting a row; defer to next frame\r\n    requestAnimationFrame(() => {\r\n      try { refocusScanner(true); } catch { /* ignore */ }\r\n    });\r\n  };\r\n\r\n  // Add click handler for table cells that should select the row\r\n  const handleCellClick = (itemId: string, e: React.MouseEvent) => {\r\n    const target = e.target as HTMLElement;\r\n    if (target.tagName !== \"INPUT\" && target.tagName !== \"BUTTON\" && !target.closest(\"button\")) {\r\n      handleRowClick(itemId, e);\r\n    }\r\n  };\r\n\r\n  // Local Price editor component: keeps editing text (allows \"1.\" and partial decimals)\r\n  const PriceCell: React.FC<{ item: CartItem }> = ({ item }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [value, setValue] = useState<string>(String(item.product.price ?? 0));\r\n    const ref = useRef<HTMLInputElement | null>(null);\r\n\r\n    // keep value in sync when external product price changes (but not while editing)\r\n    useEffect(() => {\r\n      if (!editing) setValue(String(item.product.price ?? 0));\r\n    }, [item.product.price, editing]);\r\n\r\n    const commit = useCallback(() => {\r\n      setEditing(false);\r\n      const parsed = Number(String(value).replace(/,/g, \"\"));\r\n      const price = Number.isFinite(parsed) ? parsed : 0;\r\n      updateCartItemPrice(item.id, price);\r\n      // refocus scanner after finishing edit\r\n      requestAnimationFrame(() => {\r\n        try { refocusScanner(true); } catch { /* ignore */ }\r\n      });\r\n    }, [value, item.id, updateCartItemPrice, refocusScanner]);\r\n\r\n    return (\r\n      <Input\r\n        ref={ref}\r\n        type=\"text\"\r\n        data-cart-price-input={item.id}\r\n        value={value}\r\n        className=\"w-20 h-8 text-sm\"\r\n        onFocus={() => { selectRow(item.id); setEditing(true); }}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        onBlur={() => commit()}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            (e.target as HTMLInputElement).blur();\r\n          } else if (e.key === \"Escape\") {\r\n            setEditing(false);\r\n            setValue(String(item.product.price ?? 0));\r\n            requestAnimationFrame(() => {\r\n              try { refocusScanner(true); } catch { /* ignore */ }\r\n            });\r\n          }\r\n        }}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  };\r\n\r\n  if (cart.length === 0) {\r\n    return (\r\n      <div className=\"flex-1 flex items-center justify-center w-full h-full\">\r\n        <div className=\"text-center space-y-4\">\r\n          <span className=\"text-gray-500\">\r\n            🛒 Scan items to add to cart\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Table>\r\n      <TableHeader>\r\n        <TableRow>\r\n          <TableHead className=\"text-lg font-semibold py-3\">Barcode</TableHead>\r\n          <TableHead className=\"text-lg font-semibold py-3\">Name</TableHead>\r\n          <TableHead className=\"text-lg font-semibold py-3\">Price</TableHead>\r\n          <TableHead className=\"text-lg font-semibold py-3\">Quantity</TableHead>\r\n          <TableHead className=\"text-lg font-semibold py-3\">Actions</TableHead>\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {cart.map((item) => {\r\n          const isSelected = selectedRowId === item.id;\r\n\r\n          return (\r\n            <TableRow\r\n              key={item.id}\r\n              className={cn(\r\n                \"hover:bg-gray-50 cursor-pointer transition-all duration-200\",\r\n                isSelected\r\n                  ? \"bg-gray-100 dark:bg-gray-800\"\r\n                  : \"\"\r\n              )}\r\n              onClick={(e) => handleRowClick(item.id, e)}\r\n              data-cart-selected={isSelected}\r\n            >\r\n              <TableCell\r\n                className=\"font-medium max-w-[140px] break-words whitespace-normal py-3 px-4\"\r\n                onClick={(e) => handleCellClick(item.id, e)}\r\n              >\r\n                {item.product.barcode || \"N/A\"}\r\n              </TableCell>\r\n\r\n              <TableCell\r\n                className=\"min-w-0 max-w-[320px] break-words whitespace-normal py-3 px-4\"\r\n                onClick={(e) => handleCellClick(item.id, e)}\r\n              >\r\n                {item.product.__placeholder ? (\r\n                  <div className=\"flex items-center gap-2 text-gray-500\">\r\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                    <span>Fetching product…</span>\r\n                  </div>\r\n                ) : (\r\n                  item.product.name\r\n                )}\r\n              </TableCell>\r\n\r\n              <TableCell className=\"py-3 px-4\">\r\n                <PriceCell item={item} />\r\n              </TableCell>\r\n\r\n              <TableCell className=\"py-3 px-4\">\r\n                <Input\r\n                  type=\"number\"\r\n                  min={1}\r\n                  data-cart-qty-input={item.id}\r\n                  value={item.quantity}\r\n                  className=\"w-16 h-8 text-sm\"\r\n                  onFocus={() => selectRow(item.id)}\r\n                  onChange={(e) => {\r\n                    const qty = Math.max(1, Number(e.target.value) || 1);\r\n                    updateCartItemQuantity(item.id, qty);\r\n                  }}\r\n                  onBlur={() => {\r\n                    try { refocusScanner(true); } catch { /* ignore */ }\r\n                  }}   // ✅ after editing qty\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      (e.target as HTMLInputElement).blur();\r\n                      try { refocusScanner(true); } catch { /* ignore */ } // ✅ confirm + refocus\r\n                    }\r\n                  }}\r\n                  disabled={disabled}\r\n                />\r\n              </TableCell>\r\n\r\n              <TableCell className=\"py-3 px-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"text-sm text-red-600 hover:underline disabled:opacity-50\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deleteCartItem(item.id);\r\n\r\n                    // Force scanner refocus after delete (defer to next frame)\r\n                    requestAnimationFrame(() => {\r\n                      try { refocusScanner(true); } catch { /* ignore */ }\r\n                    });\r\n                  }}\r\n                  disabled={disabled}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1202, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/POS/components/leftColumn/ProductSearch.tsx"],"sourcesContent":["import { Input } from \"@/components/ui/input\";\r\nimport { Search, CheckCircle } from \"lucide-react\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Product } from \"@/hooks/products/useProductApi\";\r\n\r\ninterface ProductSearchProps {\r\n  searchQuery: string;\r\n  searchResults: Product[];\r\n  showSearchResults: boolean;\r\n  handleSearchChange: (val: string) => void;\r\n  handleSearchSelect: (product: Product) => void;\r\n  clearSearch: () => void;\r\n  // Accept optional force flag so callers can call refocusScanner(true)\r\n  refocusScanner: (force?: boolean) => void;\r\n  disabled?: boolean;\r\n  inputRef?: React.RefObject<HTMLInputElement>;\r\n}\r\n\r\nexport default function ProductSearch({\r\n  searchQuery,\r\n  searchResults,\r\n  showSearchResults,\r\n  handleSearchChange,\r\n  handleSearchSelect,\r\n  refocusScanner,\r\n  disabled = false,\r\n  inputRef,\r\n}: ProductSearchProps) {\r\n  const isAutoSelecting = searchResults.length === 1 && searchQuery.trim().length >= 2;\r\n  const [highlightedIndex, setHighlightedIndex] = useState<number>(-1);\r\n  const resultsContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Reset highlight when results change\r\n  useEffect(() => {\r\n    setHighlightedIndex(searchResults.length > 0 ? 0 : -1);\r\n  }, [searchResults, showSearchResults]);\r\n\r\n  // Keyboard navigation\r\n  useEffect(() => {\r\n    const inputEl = inputRef?.current;\r\n    if (!inputEl) return;\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (!showSearchResults || searchResults.length === 0) return;\r\n\r\n      if (e.key === \"ArrowDown\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setHighlightedIndex((prev) => Math.min(prev + 1, searchResults.length - 1));\r\n        scrollToHighlighted();\r\n      } else if (e.key === \"ArrowUp\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setHighlightedIndex((prev) => Math.max(prev - 1, 0));\r\n        scrollToHighlighted();\r\n      } else if (e.key === \"Enter\" && highlightedIndex >= 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        handleSearchSelect(searchResults[highlightedIndex]);\r\n        setHighlightedIndex(-1);\r\n        // after selecting from keyboard, ensure scanner regains focus (force)\r\n        refocusScanner(true);\r\n      }\r\n    };\r\n\r\n    inputEl.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => inputEl.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [searchResults, showSearchResults, highlightedIndex, handleSearchSelect, inputRef, refocusScanner]);\r\n\r\n  // Scroll highlighted item into view\r\n  const scrollToHighlighted = () => {\r\n    setTimeout(() => {\r\n      if (resultsContainerRef.current) {\r\n        const item = resultsContainerRef.current.querySelector(`[data-highlighted=\"true\"]`);\r\n        if (item) {\r\n          (item as HTMLElement).scrollIntoView({ block: \"nearest\" });\r\n        }\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative mb-6\">\r\n      <div className=\"relative flex items-center\">\r\n        <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n        <Input\r\n          ref={inputRef}\r\n          className=\"pl-9 w-full\"\r\n          placeholder=\"Search by product name or barcode...\"\r\n          value={searchQuery}\r\n          onChange={(e) => handleSearchChange(e.target.value)}\r\n          onClick={(e) => e.stopPropagation()}\r\n          onBlur={() => {\r\n            // when search input loses focus, refocus scanner (do not steal if user is typing elsewhere)\r\n            refocusScanner(true);\r\n          }}\r\n          disabled={disabled}\r\n        />\r\n        {isAutoSelecting && (\r\n          <CheckCircle\r\n            className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-green-500 animate-pulse\"\r\n            size={20}\r\n          />\r\n        )}\r\n      </div>\r\n      {showSearchResults && searchResults.length > 0 && (\r\n        <div\r\n          ref={resultsContainerRef}\r\n          className=\"absolute top-full left-0 right-0 bg-white border rounded-md shadow-lg z-10 max-h-[32rem] overflow-y-auto\"\r\n        >\r\n          {searchResults.map((product, idx) => (\r\n            <div\r\n              key={product.id}\r\n              data-highlighted={highlightedIndex === idx}\r\n              className={`p-3 hover:bg-gray-50 cursor-pointer border-b last:border-b-0 ${\r\n                isAutoSelecting ? \"bg-green-50 border-green-200\" : \"\"\r\n              } ${highlightedIndex === idx ? \"bg-blue-100\" : \"\"}`}\r\n              onClick={() => handleSearchSelect(product)}\r\n            >\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"min-w-0\">\r\n                  <div className=\"font-medium break-words whitespace-normal flex items-center gap-2\">\r\n                    {product.name}\r\n                    {isAutoSelecting && (\r\n                      <span className=\"text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full\">\r\n                        Auto-selecting...\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-500\">Barcode: {product.barcode}</div>\r\n                </div>\r\n                <div className=\"text-right ml-4 flex-shrink-0\">\r\n                  <div className=\"font-medium\">₱ {product.price.toFixed(2)}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {showSearchResults && searchResults.length === 0 && searchQuery.length >= 2 && (\r\n        <div className=\"absolute top-full left-0 right-0 bg-white border rounded-md shadow-lg z-10 p-3 text-center text-gray-500\">\r\n          No products found matching \"{searchQuery}\"\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;;;;;AAgBe,SAAS,cAAc,EACpC,WAAW,EACX,aAAa,EACb,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,cAAc,EACd,WAAW,KAAK,EAChB,QAAQ,EACW;IACnB,MAAM,kBAAkB,cAAc,MAAM,KAAK,KAAK,YAAY,IAAI,GAAG,MAAM,IAAI;IACnF,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAS,CAAC;IAClE,MAAM,sBAAsB,IAAA,+MAAM,EAAiB;IAEnD,sCAAsC;IACtC,IAAA,kNAAS,EAAC;QACR,oBAAoB,cAAc,MAAM,GAAG,IAAI,IAAI,CAAC;IACtD,GAAG;QAAC;QAAe;KAAkB;IAErC,sBAAsB;IACtB,IAAA,kNAAS,EAAC;QACR,MAAM,UAAU,UAAU;QAC1B,IAAI,CAAC,SAAS;QAEd,MAAM,gBAAgB,CAAC;YACrB,IAAI,CAAC,qBAAqB,cAAc,MAAM,KAAK,GAAG;YAEtD,IAAI,EAAE,GAAG,KAAK,aAAa;gBACzB,EAAE,cAAc;gBAChB,EAAE,eAAe;gBACjB,oBAAoB,CAAC,OAAS,KAAK,GAAG,CAAC,OAAO,GAAG,cAAc,MAAM,GAAG;gBACxE;YACF,OAAO,IAAI,EAAE,GAAG,KAAK,WAAW;gBAC9B,EAAE,cAAc;gBAChB,EAAE,eAAe;gBACjB,oBAAoB,CAAC,OAAS,KAAK,GAAG,CAAC,OAAO,GAAG;gBACjD;YACF,OAAO,IAAI,EAAE,GAAG,KAAK,WAAW,oBAAoB,GAAG;gBACrD,EAAE,cAAc;gBAChB,EAAE,eAAe;gBACjB,mBAAmB,aAAa,CAAC,iBAAiB;gBAClD,oBAAoB,CAAC;gBACrB,sEAAsE;gBACtE,eAAe;YACjB;QACF;QAEA,QAAQ,gBAAgB,CAAC,WAAW;QACpC,OAAO,IAAM,QAAQ,mBAAmB,CAAC,WAAW;IACtD,GAAG;QAAC;QAAe;QAAmB;QAAkB;QAAoB;QAAU;KAAe;IAErG,oCAAoC;IACpC,MAAM,sBAAsB;QAC1B,WAAW;YACT,IAAI,oBAAoB,OAAO,EAAE;gBAC/B,MAAM,OAAO,oBAAoB,OAAO,CAAC,aAAa,CAAC,CAAC,yBAAyB,CAAC;gBAClF,IAAI,MAAM;oBACP,KAAqB,cAAc,CAAC;wBAAE,OAAO;oBAAU;gBAC1D;YACF;QACF,GAAG;IACL;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,gNAAM;wBAAC,WAAU;wBAAmE,MAAM;;;;;;kCAC3F,8OAAC,0IAAK;wBACJ,KAAK;wBACL,WAAU;wBACV,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;wBAClD,SAAS,CAAC,IAAM,EAAE,eAAe;wBACjC,QAAQ;4BACN,4FAA4F;4BAC5F,eAAe;wBACjB;wBACA,UAAU;;;;;;oBAEX,iCACC,8OAAC,0OAAW;wBACV,WAAU;wBACV,MAAM;;;;;;;;;;;;YAIX,qBAAqB,cAAc,MAAM,GAAG,mBAC3C,8OAAC;gBACC,KAAK;gBACL,WAAU;0BAET,cAAc,GAAG,CAAC,CAAC,SAAS,oBAC3B,8OAAC;wBAEC,oBAAkB,qBAAqB;wBACvC,WAAW,CAAC,6DAA6D,EACvE,kBAAkB,iCAAiC,GACpD,CAAC,EAAE,qBAAqB,MAAM,gBAAgB,IAAI;wBACnD,SAAS,IAAM,mBAAmB;kCAElC,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;gDACZ,QAAQ,IAAI;gDACZ,iCACC,8OAAC;oDAAK,WAAU;8DAA6D;;;;;;;;;;;;sDAKjF,8OAAC;4CAAI,WAAU;;gDAAwB;gDAAU,QAAQ,OAAO;;;;;;;;;;;;;8CAElE,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;4CAAc;4CAAG,QAAQ,KAAK,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;uBApBrD,QAAQ,EAAE;;;;;;;;;;YA2BtB,qBAAqB,cAAc,MAAM,KAAK,KAAK,YAAY,MAAM,IAAI,mBACxE,8OAAC;gBAAI,WAAU;;oBAA2G;oBAC3F;oBAAY;;;;;;;;;;;;;AAKnD","debugId":null}},
    {"offset": {"line": 1424, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/POS/components/leftColumn/BarcodeScannerInput.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface BarcodeScannerInputProps {\r\n  inputRef: React.RefObject<HTMLInputElement | null>;\r\n  barcodeInput: string;\r\n  handleBarcodeChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleKeyPress: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport default function BarcodeScannerInput({\r\n  inputRef,\r\n  barcodeInput,\r\n  handleBarcodeChange,\r\n  handleKeyPress,\r\n  disabled = false,\r\n}: BarcodeScannerInputProps) {\r\n  return (\r\n    <input\r\n      ref={inputRef}\r\n      id=\"barcode-scanner\"\r\n      type=\"text\"\r\n      value={barcodeInput}\r\n      onChange={handleBarcodeChange}\r\n      onKeyDown={handleKeyPress}\r\n      placeholder=\"Scan barcode...\"\r\n      data-barcode-scanner=\"true\"\r\n      disabled={disabled}\r\n      autoComplete=\"off\"\r\n      tabIndex={0} // ✅ allow natural focus\r\n      style={{\r\n        position: \"absolute\",\r\n        opacity: 0,\r\n        pointerEvents: \"none\",\r\n        height: 0,\r\n        width: 0,\r\n        outline: \"none\",\r\n        border: \"none\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAUe,SAAS,oBAAoB,EAC1C,QAAQ,EACR,YAAY,EACZ,mBAAmB,EACnB,cAAc,EACd,WAAW,KAAK,EACS;IACzB,qBACE,8OAAC;QACC,KAAK;QACL,IAAG;QACH,MAAK;QACL,OAAO;QACP,UAAU;QACV,WAAW;QACX,aAAY;QACZ,wBAAqB;QACrB,UAAU;QACV,cAAa;QACb,UAAU;QACV,OAAO;YACL,UAAU;YACV,SAAS;YACT,eAAe;YACf,QAAQ;YACR,OAAO;YACP,SAAS;YACT,QAAQ;QACV;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 1462, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nfunction AlertDialog({\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\r\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\r\n}\r\n\r\nfunction AlertDialogTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\r\n  return (\r\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\r\n  )\r\n}\r\n\r\nfunction AlertDialogPortal({\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\r\n  return (\r\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\r\n  )\r\n}\r\n\r\nfunction AlertDialogOverlay({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\r\n  return (\r\n    <AlertDialogPrimitive.Overlay\r\n      data-slot=\"alert-dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogContent({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\r\n  return (\r\n    <AlertDialogPortal>\r\n      <AlertDialogOverlay />\r\n      <AlertDialogPrimitive.Content\r\n        data-slot=\"alert-dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </AlertDialogPortal>\r\n  )\r\n}\r\n\r\nfunction AlertDialogHeader({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogFooter({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-dialog-footer\"\r\n      className={cn(\r\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\r\n  return (\r\n    <AlertDialogPrimitive.Title\r\n      data-slot=\"alert-dialog-title\"\r\n      className={cn(\"text-lg font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\r\n  return (\r\n    <AlertDialogPrimitive.Description\r\n      data-slot=\"alert-dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogAction({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\r\n  return (\r\n    <AlertDialogPrimitive.Action\r\n      className={cn(buttonVariants(), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogCancel({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\r\n  return (\r\n    <AlertDialogPrimitive.Cancel\r\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogPortal,\r\n  AlertDialogOverlay,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,8OAAC,mLAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,8OAAC,sLAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;AAEA,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC,sLAA4B;QAC3B,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,aAAU;gBACV,WAAW,IAAA,yHAAE,EACX,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,8OAAC,oLAA0B;QACzB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,0LAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAC1B,WAAW,IAAA,yHAAE,EAAC,IAAA,oJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAC1B,WAAW,IAAA,yHAAE,EAAC,IAAA,oJAAc,EAAC;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1631, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/POS/components/leftColumn/index.tsx"],"sourcesContent":["import { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ScanLine, CheckIcon } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { useCart } from \"@/contexts/cart-context\";\r\nimport { useCartSelection } from \"@/hooks/pos/leftCol/useCartSelection\";\r\nimport { useProducts } from \"@/hooks/global/fetching/useProducts\";\r\nimport { useBarcodeScan } from \"@/hooks/pos/leftCol/useBarcodeScan\";\r\nimport { useProductSearch } from \"@/hooks/pos/leftCol/useProductsSearch\";\r\nimport { useCartKeyboard } from \"@/contexts/cart-context\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport CartTable from \"./CartTable\";\r\nimport ProductSearch from \"./ProductSearch\";\r\nimport BarcodeScannerInput from \"./BarcodeScannerInput\";\r\nimport { useProductModal } from \"@/contexts/productRegister-context\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from '@/components/ui/alert-dialog'\r\nimport ProductRegisterModal from \"@/components/product/components/ProductRegisterModal\";\r\nimport { productApi } from \"@/hooks/products/useProductApi\";\r\n\r\ninterface POSLeftColProps {\r\n  step: 1 | 2 | 3;\r\n}\r\n\r\nexport default function POSLeftCol({ step }: POSLeftColProps) {\r\n  const [refocused, setRefocused] = useState<boolean>(false);\r\n  const { selectedRowId, selectRow, clearSelection } = useCartSelection<string>();\r\n  const { products } = useProducts();\r\n  const {\r\n    cart,\r\n    updateCartItemQuantity,\r\n    scanAndAddToCart,\r\n    addProductToCart,\r\n    setScannerRef,\r\n    refocusScanner,\r\n    updateCartItemPrice,\r\n    deleteCartItem,\r\n    lastAddedItemId,\r\n  } = useCart();\r\n\r\n  const {\r\n    barcodeInput,\r\n    inputRef,\r\n    handleBarcodeChange,\r\n    handleKeyPress,\r\n  } = useBarcodeScan(handleScanAndAddToCart);\r\n\r\n  const { setOpen, setBarcode } = useProductModal();\r\n  useCartKeyboard(selectedRowId);\r\n\r\n\r\n  const handleSearchSelect = (product: any) => {\r\n    try {\r\n      const addedId = addProductToCart(product);\r\n      clearSearch();\r\n      if (addedId) {\r\n        selectRow(addedId);\r\n      }\r\n      // guarantee scanner focus after adding via search\r\n      refocusScanner(true);\r\n    } catch (err) {\r\n      clearSearch();\r\n      refocusScanner(true);\r\n    }\r\n  };\r\n\r\n\r\n  const {\r\n    searchQuery,\r\n    searchResults,\r\n    showSearchResults,\r\n    handleSearchChange,\r\n    clearSearch,\r\n  } = useProductSearch(products, handleSearchSelect);\r\n\r\n  const [showRegisterDialog, setShowRegisterDialog] = useState(false);\r\n  const [unregisteredBarcode, setUnregisteredBarcode] = useState<string | null>(\r\n    null\r\n  );\r\n  const productSearchInputRef = useRef<HTMLInputElement>(null!);\r\n\r\n  useEffect(() => {\r\n    setScannerRef(inputRef as React.RefObject<HTMLInputElement>);\r\n  }, [setScannerRef, inputRef]);\r\n\r\n  useEffect(() => {\r\n    if (step === 2 || step === 3) {\r\n      if (inputRef?.current) inputRef.current.blur();\r\n    } else {\r\n      // Re-focus when returning to step 1\r\n      setTimeout(() => {\r\n        inputRef?.current?.focus();\r\n      }, 100);\r\n    }\r\n  }, [step]);\r\n\r\n  useEffect(() => {\r\n    const handleShortcut = (e: KeyboardEvent) => {\r\n      if (step === 1 && e.key === \"F2\") {\r\n        e.preventDefault();\r\n        if (productSearchInputRef.current) {\r\n          productSearchInputRef.current.focus();\r\n          productSearchInputRef.current.select();\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleShortcut);\r\n    return () => window.removeEventListener(\"keydown\", handleShortcut);\r\n  }, [step]);\r\n  // Listen for cart selection events triggered by global keyboard handler\r\n  useEffect(() => {\r\n    if (typeof window === \"undefined\") return;\r\n\r\n    const selectNext = () => {\r\n      if (!cart || cart.length === 0) return;\r\n      const idx = cart.findIndex((c) => c.id === selectedRowId);\r\n      const nextIdx = idx < 0 ? 0 : Math.min(cart.length - 1, idx + 1);\r\n      const id = cart[nextIdx]?.id;\r\n      if (id) {\r\n        selectRow(id);\r\n      }\r\n    };\r\n\r\n    const selectPrev = () => {\r\n      if (!cart || cart.length === 0) return;\r\n      const idx = cart.findIndex((c) => c.id === selectedRowId);\r\n      const prevIdx = idx <= 0 ? 0 : idx - 1;\r\n      const id = cart[prevIdx]?.id;\r\n      if (id) {\r\n        selectRow(id);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"cart:select-next\", selectNext);\r\n    window.addEventListener(\"cart:select-prev\", selectPrev);\r\n\r\n    // When an item is deleted, the cart-context will emit nextSelectedId.\r\n    const onItemDeleted = (e: Event) => {\r\n      const detail = (e as CustomEvent)?.detail || {};\r\n      const nextId: string | null = detail.nextSelectedId ?? null;\r\n\r\n      if (nextId) {\r\n        selectRow(nextId);\r\n        return;\r\n      }\r\n\r\n      // Fallback: if cart still has items, select the current first row; otherwise clear selection\r\n      if (cart && cart.length > 0) {\r\n        selectRow(cart[0].id);\r\n      } else {\r\n        clearSelection();\r\n      }\r\n    };\r\n    window.addEventListener(\"cart:item-deleted\", onItemDeleted);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"cart:select-next\", selectNext);\r\n      window.removeEventListener(\"cart:select-prev\", selectPrev);\r\n      window.removeEventListener(\"cart:item-deleted\", onItemDeleted);\r\n    };\r\n  }, [cart, selectedRowId, selectRow, inputRef]);\r\n\r\n  async function handleScanAndAddToCart(barcode: string) {\r\n    const clean = (v: string | null | undefined) => (v == null ? \"\" : String(v).replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, \"\").trim());\r\n    const cleaned = clean(barcode);\r\n\r\n    if (!cleaned || cleaned.length < 2) {\r\n      return;\r\n    }\r\n\r\n    const normalizeBarcode = (bc: string) => {\r\n      return bc.replace(/^0+/, '') || '0';\r\n    };\r\n\r\n    const cleanedNormalized = normalizeBarcode(cleaned);\r\n\r\n    // 1) Try local cache with multiple comparison strategies\r\n    const foundProduct = products.find((p) => {\r\n      const productBarcode = clean(p?.barcode);\r\n\r\n      if (!productBarcode) return false;\r\n\r\n      if (productBarcode === cleaned) {\r\n        return true;\r\n      }\r\n\r\n      if (normalizeBarcode(productBarcode) === cleanedNormalized) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    if (foundProduct) {\r\n      await scanAndAddToCart(cleaned, foundProduct);\r\n      return;\r\n    }\r\n\r\n    // 2) Fallback to server lookup\r\n    try {\r\n      const serverProduct = await productApi.getByBarcode(cleaned);\r\n      if (serverProduct) {\r\n        await scanAndAddToCart(cleaned, serverProduct);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      // Server lookup failed\r\n    }\r\n\r\n    // 3) Product not found -> prompt to register\r\n    setUnregisteredBarcode(cleaned);\r\n    setShowRegisterDialog(true);\r\n  }\r\n\r\n  function handleRegisterProduct(barcode: string) {\r\n    setShowRegisterDialog(false);\r\n    setBarcode(barcode);\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleRefocus = () => {\r\n    refocusScanner(true);\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      window.dispatchEvent(new Event(\"focusBarcodeScanner\"));\r\n    }\r\n\r\n    setRefocused(true);\r\n    setTimeout(() => setRefocused(false), 1000);\r\n  };\r\n\r\n  // Handle clicks on empty areas to refocus scanner\r\n  const handleEmptyAreaClick = (e: React.MouseEvent) => {\r\n    // Only refocus if clicking on the card content itself, not on child elements\r\n    if (e.target === e.currentTarget) {\r\n      handleRefocus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full h-full\">\r\n      <Card className=\"w-full h-full flex flex-col\">\r\n        <CardContent className=\"p-6 flex-1 flex flex-col min-h-0\" onClick={handleEmptyAreaClick}>\r\n          <BarcodeScannerInput\r\n            inputRef={inputRef}\r\n            barcodeInput={barcodeInput}\r\n            handleBarcodeChange={handleBarcodeChange}\r\n            handleKeyPress={handleKeyPress}\r\n            disabled={step === 2 || step === 3}\r\n          />\r\n          <ProductSearch\r\n            inputRef={productSearchInputRef} // <-- Pass the ref here\r\n            searchQuery={searchQuery}\r\n            searchResults={searchResults}\r\n            showSearchResults={showSearchResults}\r\n            handleSearchChange={handleSearchChange}\r\n            handleSearchSelect={handleSearchSelect}\r\n            clearSearch={clearSearch}\r\n            refocusScanner={refocusScanner}\r\n            disabled={step === 2 || step === 3}\r\n          />\r\n          {/* Simplified container - no nested divs */}\r\n          <div className=\"rounded-md border flex-1 overflow-auto\">\r\n            <CartTable\r\n              cart={cart}\r\n              selectedRowId={selectedRowId}\r\n              selectRow={selectRow}\r\n              updateCartItemQuantity={updateCartItemQuantity}\r\n              updateCartItemPrice={updateCartItemPrice}\r\n              deleteCartItem={deleteCartItem}\r\n              refocusScanner={refocusScanner}\r\n              disabled={step === 2 || step === 3}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <ProductRegisterModal />\r\n      <AlertDialog open={showRegisterDialog} onOpenChange={setShowRegisterDialog}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Product Not Registered</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              The scanned product (<span className=\"font-bold\">{unregisteredBarcode}</span>) is not registered. Would you like to register it?\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel onClick={() => setShowRegisterDialog(false)}>Cancel</AlertDialogCancel>\r\n            <AlertDialogAction onClick={() => unregisteredBarcode && handleRegisterProduct(unregisteredBarcode)}>\r\n              Register Product\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;;;;;;;;;;;;;;;;;AAMe,SAAS,WAAW,EAAE,IAAI,EAAmB;IAC1D,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAU;IACpD,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,IAAA,sKAAgB;IACrE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,gKAAW;IAChC,MAAM,EACJ,IAAI,EACJ,sBAAsB,EACtB,gBAAgB,EAChB,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,mBAAmB,EACnB,cAAc,EACd,eAAe,EAChB,GAAG,IAAA,8IAAO;IAEX,MAAM,EACJ,YAAY,EACZ,QAAQ,EACR,mBAAmB,EACnB,cAAc,EACf,GAAG,IAAA,kKAAc,EAAC;IAEnB,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAA,iKAAe;IAC/C,IAAA,sJAAe,EAAC;IAGhB,MAAM,qBAAqB,CAAC;QAC1B,IAAI;YACF,MAAM,UAAU,iBAAiB;YACjC;YACA,IAAI,SAAS;gBACX,UAAU;YACZ;YACA,kDAAkD;YAClD,eAAe;QACjB,EAAE,OAAO,KAAK;YACZ;YACA,eAAe;QACjB;IACF;IAGA,MAAM,EACJ,WAAW,EACX,aAAa,EACb,iBAAiB,EACjB,kBAAkB,EAClB,WAAW,EACZ,GAAG,IAAA,uKAAgB,EAAC,UAAU;IAE/B,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,IAAA,iNAAQ,EAAC;IAC7D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,IAAA,iNAAQ,EAC5D;IAEF,MAAM,wBAAwB,IAAA,+MAAM,EAAmB;IAEvD,IAAA,kNAAS,EAAC;QACR,cAAc;IAChB,GAAG;QAAC;QAAe;KAAS;IAE5B,IAAA,kNAAS,EAAC;QACR,IAAI,SAAS,KAAK,SAAS,GAAG;YAC5B,IAAI,UAAU,SAAS,SAAS,OAAO,CAAC,IAAI;QAC9C,OAAO;YACL,oCAAoC;YACpC,WAAW;gBACT,UAAU,SAAS;YACrB,GAAG;QACL;IACF,GAAG;QAAC;KAAK;IAET,IAAA,kNAAS,EAAC;QACR,MAAM,iBAAiB,CAAC;YACtB,IAAI,SAAS,KAAK,EAAE,GAAG,KAAK,MAAM;gBAChC,EAAE,cAAc;gBAChB,IAAI,sBAAsB,OAAO,EAAE;oBACjC,sBAAsB,OAAO,CAAC,KAAK;oBACnC,sBAAsB,OAAO,CAAC,MAAM;gBACtC;YACF;QACF;QACA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;IACrD,GAAG;QAAC;KAAK;IACT,wEAAwE;IACxE,IAAA,kNAAS,EAAC;QACR,wCAAmC;;;QAEnC,MAAM;QAUN,MAAM;QAaN,sEAAsE;QACtE,MAAM;IAuBR,GAAG;QAAC;QAAM;QAAe;QAAW;KAAS;IAE7C,eAAe,uBAAuB,OAAe;QACnD,MAAM,QAAQ,CAAC,IAAkC,KAAK,OAAO,KAAK,OAAO,GAAG,OAAO,CAAC,iCAAiC,IAAI,IAAI;QAC7H,MAAM,UAAU,MAAM;QAEtB,IAAI,CAAC,WAAW,QAAQ,MAAM,GAAG,GAAG;YAClC;QACF;QAEA,MAAM,mBAAmB,CAAC;YACxB,OAAO,GAAG,OAAO,CAAC,OAAO,OAAO;QAClC;QAEA,MAAM,oBAAoB,iBAAiB;QAE3C,yDAAyD;QACzD,MAAM,eAAe,SAAS,IAAI,CAAC,CAAC;YAClC,MAAM,iBAAiB,MAAM,GAAG;YAEhC,IAAI,CAAC,gBAAgB,OAAO;YAE5B,IAAI,mBAAmB,SAAS;gBAC9B,OAAO;YACT;YAEA,IAAI,iBAAiB,oBAAoB,mBAAmB;gBAC1D,OAAO;YACT;YAEA,OAAO;QACT;QAEA,IAAI,cAAc;YAChB,MAAM,iBAAiB,SAAS;YAChC;QACF;QAEA,+BAA+B;QAC/B,IAAI;YACF,MAAM,gBAAgB,MAAM,uJAAU,CAAC,YAAY,CAAC;YACpD,IAAI,eAAe;gBACjB,MAAM,iBAAiB,SAAS;gBAChC;YACF;QACF,EAAE,OAAO,OAAO;QACd,uBAAuB;QACzB;QAEA,6CAA6C;QAC7C,uBAAuB;QACvB,sBAAsB;IACxB;IAEA,SAAS,sBAAsB,OAAe;QAC5C,sBAAsB;QACtB,WAAW;QACX,QAAQ;IACV;IAEA,MAAM,gBAAgB;QACpB,eAAe;QAEf;;QAIA,aAAa;QACb,WAAW,IAAM,aAAa,QAAQ;IACxC;IAEA,kDAAkD;IAClD,MAAM,uBAAuB,CAAC;QAC5B,6EAA6E;QAC7E,IAAI,EAAE,MAAM,KAAK,EAAE,aAAa,EAAE;YAChC;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,wIAAI;gBAAC,WAAU;0BACd,cAAA,8OAAC,+IAAW;oBAAC,WAAU;oBAAmC,SAAS;;sCACjE,8OAAC,uMAAmB;4BAClB,UAAU;4BACV,cAAc;4BACd,qBAAqB;4BACrB,gBAAgB;4BAChB,UAAU,SAAS,KAAK,SAAS;;;;;;sCAEnC,8OAAC,iMAAa;4BACZ,UAAU;4BACV,aAAa;4BACb,eAAe;4BACf,mBAAmB;4BACnB,oBAAoB;4BACpB,oBAAoB;4BACpB,aAAa;4BACb,gBAAgB;4BAChB,UAAU,SAAS,KAAK,SAAS;;;;;;sCAGnC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,6LAAS;gCACR,MAAM;gCACN,eAAe;gCACf,WAAW;gCACX,wBAAwB;gCACxB,qBAAqB;gCACrB,gBAAgB;gCAChB,gBAAgB;gCAChB,UAAU,SAAS,KAAK,SAAS;;;;;;;;;;;;;;;;;;;;;;0BAKzC,8OAAC,8KAAoB;;;;;0BACrB,8OAAC,0JAAW;gBAAC,MAAM;gBAAoB,cAAc;0BACnD,cAAA,8OAAC,iKAAkB;;sCACjB,8OAAC,gKAAiB;;8CAChB,8OAAC,+JAAgB;8CAAC;;;;;;8CAClB,8OAAC,qKAAsB;;wCAAC;sDACD,8OAAC;4CAAK,WAAU;sDAAa;;;;;;wCAA2B;;;;;;;;;;;;;sCAGjF,8OAAC,gKAAiB;;8CAChB,8OAAC,gKAAiB;oCAAC,SAAS,IAAM,sBAAsB;8CAAQ;;;;;;8CAChE,8OAAC,gKAAiB;oCAAC,SAAS,IAAM,uBAAuB,sBAAsB;8CAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjH","debugId":null}},
    {"offset": {"line": 1955, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/POS/pos-screen.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { CartProvider } from \"@/contexts/cart-context\";\r\n\r\nimport POSright from \"./components/rightColumn/index\";\r\nimport POSleft from \"./components/leftColumn/index\";\r\n\r\nexport default function MainDashboard() {\r\n  const [step, setStep] = useState<1 | 2 | 3>(1);\r\n\r\n  // Sync React step into a global so the existing document-level keyboard handler\r\n  // (useCartKeyboard) can detect the current POS step. Cleared on unmount.\r\n  useEffect(() => {\r\n    try {\r\n      (window as any).posStep = step;\r\n    } catch { }\r\n    return () => {\r\n      try {\r\n        delete (window as any).posStep;\r\n      } catch { }\r\n    };\r\n  }, [step]);\r\n\r\n  // ensure scanner input in POS immediately receives focus when this page mounts\r\n  useEffect(() => {\r\n    if (typeof window === \"undefined\") return;\r\n\r\n    const focusScanner = () => {\r\n      try {\r\n        window.dispatchEvent(new Event(\"focusBarcodeScanner\"));\r\n      } catch { }\r\n    };\r\n\r\n    // immediate + a short delayed dispatch to cover timing differences\r\n    focusScanner();\r\n    const t = setTimeout(focusScanner, 120);\r\n\r\n    // also focus when the browser window regains focus (user alt-tabs back)\r\n    window.addEventListener(\"focus\", focusScanner);\r\n\r\n    return () => {\r\n      clearTimeout(t);\r\n      window.removeEventListener(\"focus\", focusScanner);\r\n    };\r\n  }, []);\r\n\r\n  // NEW: listen for Ctrl+Enter and dispatch a focus event for the cash input\r\n  useEffect(() => {\r\n    if (typeof window === \"undefined\") return;\r\n\r\n    const handleCtrlEnter = (e: KeyboardEvent) => {\r\n      if (e.ctrlKey && e.key === \"Enter\") {\r\n        // Only act while on the POS page (this component is only mounted on the POS page)\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        window.dispatchEvent(new Event(\"focusCashInput\"));\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleCtrlEnter);\r\n    return () => window.removeEventListener(\"keydown\", handleCtrlEnter);\r\n  }, []);\r\n\r\n  return (\r\n    <CartProvider>\r\n      <div className=\"flex flex-row w-full h-full py-4 px-4 gap-2\">\r\n        <div className=\"basis-[70%]\">\r\n          <POSleft step={step} />\r\n        </div>\r\n       \r\n      </div>\r\n    </CartProvider>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AAGA;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAY;IAE5C,gFAAgF;IAChF,yEAAyE;IACzE,IAAA,kNAAS,EAAC;QACR,IAAI;YACD,OAAe,OAAO,GAAG;QAC5B,EAAE,OAAM,CAAE;QACV,OAAO;YACL,IAAI;gBACF,OAAO,AAAC,OAAe,OAAO;YAChC,EAAE,OAAM,CAAE;QACZ;IACF,GAAG;QAAC;KAAK;IAET,+EAA+E;IAC/E,IAAA,kNAAS,EAAC;QACR,wCAAmC;;;QAEnC,MAAM;QAQN,MAAM;IASR,GAAG,EAAE;IAEL,2EAA2E;IAC3E,IAAA,kNAAS,EAAC;QACR,wCAAmC;;;QAEnC,MAAM;IAWR,GAAG,EAAE;IAEL,qBACE,8OAAC,mJAAY;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,yLAAO;oBAAC,MAAM;;;;;;;;;;;;;;;;;;;;;AAMzB","debugId":null}},
    {"offset": {"line": 2030, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/head.tsx"],"sourcesContent":["import React, { useCallback, memo } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Plus } from \"lucide-react\";\r\nimport { useProductModal } from \"@/contexts/productRegister-context\";\r\n\r\nfunction HeadComponent() {\r\n  const { openModal } = useProductModal();\r\n\r\n  const openAddCategory = useCallback(() => openModal(\"addCategory\"), [openModal]);\r\n  const openAddProduct = useCallback(() => openModal(\"addProduct\"), [openModal]);\r\n\r\n  const btnClass = \"flex items-center justify-center gap-2 p-3\";\r\n\r\n  return (\r\n    <div className=\"flex justify-between items-center\">\r\n      <h1 className=\"text-4xl font-bold\">Products</h1>\r\n\r\n      <div className=\"flex gap-3\">\r\n        <Button className={btnClass} onClick={openAddCategory} aria-label=\"Add category\">\r\n          <Plus size={16} />\r\n          Add Category\r\n        </Button>\r\n\r\n        <Button className={btnClass} onClick={openAddProduct} aria-label=\"Add product\">\r\n          <Plus size={16} />\r\n          Add Product\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(HeadComponent);\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,SAAS;IACP,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,iKAAe;IAErC,MAAM,kBAAkB,IAAA,oNAAW,EAAC,IAAM,UAAU,gBAAgB;QAAC;KAAU;IAC/E,MAAM,iBAAiB,IAAA,oNAAW,EAAC,IAAM,UAAU,eAAe;QAAC;KAAU;IAE7E,MAAM,WAAW;IAEjB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BAEnC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4IAAM;wBAAC,WAAW;wBAAU,SAAS;wBAAiB,cAAW;;0CAChE,8OAAC,0MAAI;gCAAC,MAAM;;;;;;4BAAM;;;;;;;kCAIpB,8OAAC,4IAAM;wBAAC,WAAW;wBAAU,SAAS;wBAAgB,cAAW;;0CAC/D,8OAAC,0MAAI;gCAAC,MAAM;;;;;;4BAAM;;;;;;;;;;;;;;;;;;;AAM5B;qDAEe,IAAA,6MAAI,EAAC","debugId":null}},
    {"offset": {"line": 2123, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/ProductStats.tsx"],"sourcesContent":["import { Card, CardContent } from \"@/components/ui/card\";\r\nimport useSWR from \"swr\";\r\nimport { productApi } from \"@/hooks/products/useProductApi\";\r\nimport type { Product } from \"@/hooks/products/useProductApi\";\r\nimport { useMemo } from \"react\";\r\n\r\n// Use consistent key\r\nconst PRODUCTS_KEY = \"products:list\";\r\nconst fetcher = () => productApi.getAll();\r\n\r\nexport default function ProductStats() {\r\n  const { data: products = [], isLoading } = useSWR(PRODUCTS_KEY, fetcher, {\r\n    revalidateOnFocus: false,\r\n    dedupingInterval: 30_000,\r\n  });\r\n\r\n  const stats = useMemo(() => {\r\n    let totalProducts = 0;\r\n    let lowStockItems = 0;\r\n    let outOfStockItems = 0;\r\n    let totalValue = 0;\r\n\r\n    for (const p of products as Product[]) {\r\n      if (!p || typeof p.quantity !== \"number\" || typeof p.price !== \"number\") continue;\r\n      totalProducts++;\r\n      if (p.quantity === 0) outOfStockItems++;\r\n      else if (p.quantity < 5) lowStockItems++;\r\n      totalValue += p.price * p.quantity;\r\n    }\r\n\r\n    return {\r\n      totalProducts,\r\n      lowStockItems,\r\n      outOfStockItems,\r\n      totalValueFormatted: `₱ ${totalValue.toLocaleString(undefined, {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      })}`,\r\n    };\r\n  }, [products]);\r\n\r\n  const statsData = [\r\n    { title: \"Total Products\", content: isLoading ? \"...\" : stats.totalProducts },\r\n    { title: \"Low Stock Items\", content: isLoading ? \"...\" : stats.lowStockItems },\r\n    { title: \"Out of Stock\", content: isLoading ? \"...\" : stats.outOfStockItems },\r\n    { title: \"Total Value\", content: isLoading ? \"...\" : stats.totalValueFormatted },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-4 gap-4 w-full h-full\">\r\n      {statsData.map((stat, idx) => (\r\n        <Card key={idx}>\r\n          <CardContent className=\"flex flex-col justify-center items-start h-full\">\r\n            <h1 className=\"text-xl font-semibold pb-4\">{stat.title}</h1>\r\n            <p className=\"text-2xl font-bold\">{stat.content}</p>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,qBAAqB;AACrB,MAAM,eAAe;AACrB,MAAM,UAAU,IAAM,uJAAU,CAAC,MAAM;AAExB,SAAS;IACtB,MAAM,EAAE,MAAM,WAAW,EAAE,EAAE,SAAS,EAAE,GAAG,IAAA,yKAAM,EAAC,cAAc,SAAS;QACvE,mBAAmB;QACnB,kBAAkB;IACpB;IAEA,MAAM,QAAQ,IAAA,gNAAO,EAAC;QACpB,IAAI,gBAAgB;QACpB,IAAI,gBAAgB;QACpB,IAAI,kBAAkB;QACtB,IAAI,aAAa;QAEjB,KAAK,MAAM,KAAK,SAAuB;YACrC,IAAI,CAAC,KAAK,OAAO,EAAE,QAAQ,KAAK,YAAY,OAAO,EAAE,KAAK,KAAK,UAAU;YACzE;YACA,IAAI,EAAE,QAAQ,KAAK,GAAG;iBACjB,IAAI,EAAE,QAAQ,GAAG,GAAG;YACzB,cAAc,EAAE,KAAK,GAAG,EAAE,QAAQ;QACpC;QAEA,OAAO;YACL;YACA;YACA;YACA,qBAAqB,CAAC,EAAE,EAAE,WAAW,cAAc,CAAC,WAAW;gBAC7D,uBAAuB;gBACvB,uBAAuB;YACzB,IAAI;QACN;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,YAAY;QAChB;YAAE,OAAO;YAAkB,SAAS,YAAY,QAAQ,MAAM,aAAa;QAAC;QAC5E;YAAE,OAAO;YAAmB,SAAS,YAAY,QAAQ,MAAM,aAAa;QAAC;QAC7E;YAAE,OAAO;YAAgB,SAAS,YAAY,QAAQ,MAAM,eAAe;QAAC;QAC5E;YAAE,OAAO;YAAe,SAAS,YAAY,QAAQ,MAAM,mBAAmB;QAAC;KAChF;IAED,qBACE,8OAAC;QAAI,WAAU;kBACZ,UAAU,GAAG,CAAC,CAAC,MAAM,oBACpB,8OAAC,wIAAI;0BACH,cAAA,8OAAC,+IAAW;oBAAC,WAAU;;sCACrB,8OAAC;4BAAG,WAAU;sCAA8B,KAAK,KAAK;;;;;;sCACtD,8OAAC;4BAAE,WAAU;sCAAsB,KAAK,OAAO;;;;;;;;;;;;eAHxC;;;;;;;;;;AASnB","debugId":null}},
    {"offset": {"line": 2230, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Select({\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\r\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\r\n}\r\n\r\nfunction SelectGroup({\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\r\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\r\n}\r\n\r\nfunction SelectValue({\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\r\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\r\n}\r\n\r\nfunction SelectTrigger({\r\n  className,\r\n  size = \"default\",\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\r\n  size?: \"sm\" | \"default\"\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Trigger\r\n      data-slot=\"select-trigger\"\r\n      data-size={size}\r\n      className={cn(\r\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <SelectPrimitive.Icon asChild>\r\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\r\n      </SelectPrimitive.Icon>\r\n    </SelectPrimitive.Trigger>\r\n  )\r\n}\r\n\r\nfunction SelectContent({\r\n  className,\r\n  children,\r\n  position = \"popper\",\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\r\n  return (\r\n    <SelectPrimitive.Portal>\r\n      <SelectPrimitive.Content\r\n        data-slot=\"select-content\"\r\n        className={cn(\r\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\r\n          position === \"popper\" &&\r\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n          className\r\n        )}\r\n        position={position}\r\n        {...props}\r\n      >\r\n        <SelectScrollUpButton />\r\n        <SelectPrimitive.Viewport\r\n          className={cn(\r\n            \"p-1\",\r\n            position === \"popper\" &&\r\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\r\n          )}\r\n        >\r\n          {children}\r\n        </SelectPrimitive.Viewport>\r\n        <SelectScrollDownButton />\r\n      </SelectPrimitive.Content>\r\n    </SelectPrimitive.Portal>\r\n  )\r\n}\r\n\r\nfunction SelectLabel({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\r\n  return (\r\n    <SelectPrimitive.Label\r\n      data-slot=\"select-label\"\r\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction SelectItem({\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\r\n  return (\r\n    <SelectPrimitive.Item\r\n      data-slot=\"select-item\"\r\n      className={cn(\r\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n        <SelectPrimitive.ItemIndicator>\r\n          <CheckIcon className=\"size-4\" />\r\n        </SelectPrimitive.ItemIndicator>\r\n      </span>\r\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n    </SelectPrimitive.Item>\r\n  )\r\n}\r\n\r\nfunction SelectSeparator({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\r\n  return (\r\n    <SelectPrimitive.Separator\r\n      data-slot=\"select-separator\"\r\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\r\n  return (\r\n    <SelectPrimitive.ScrollUpButton\r\n      data-slot=\"select-scroll-up-button\"\r\n      className={cn(\r\n        \"flex cursor-default items-center justify-center py-1\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <ChevronUpIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollUpButton>\r\n  )\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\r\n  return (\r\n    <SelectPrimitive.ScrollDownButton\r\n      data-slot=\"select-scroll-down-button\"\r\n      className={cn(\r\n        \"flex cursor-default items-center justify-center py-1\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <ChevronDownIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollDownButton>\r\n  )\r\n}\r\n\r\nexport {\r\n  Select,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectItem,\r\n  SelectLabel,\r\n  SelectScrollDownButton,\r\n  SelectScrollUpButton,\r\n  SelectSeparator,\r\n  SelectTrigger,\r\n  SelectValue,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,0KAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,yHAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,0KAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,2OAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,8OAAC,4KAAsB;kBACrB,cAAA,8OAAC,6KAAuB;YACtB,aAAU;YACV,WAAW,IAAA,yHAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,8KAAwB;oBACvB,WAAW,IAAA,yHAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,8OAAC,0KAAoB;QACnB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,mLAA6B;8BAC5B,cAAA,8OAAC,qNAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,8OAAC,8KAAwB;0BAAE;;;;;;;;;;;;AAGjC;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,8OAAC,+KAAyB;QACxB,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,8OAAC,oLAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qOAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,sLAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,2OAAe;YAAC,WAAU;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 2463, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/productCatalog/ProductCatalogToolbar.tsx"],"sourcesContent":["import { Input } from \"@/components/ui/input\";\r\nimport { Search } from \"lucide-react\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Funnel } from \"lucide-react\";\r\nimport { useCategories } from \"@/hooks/global/fetching/useCategories\";\r\nimport { useState, useMemo, useCallback } from \"react\";\r\n\r\ninterface ProductCatalogToolbarProps {\r\n  selectedCategory: string;\r\n  setSelectedCategory: (category: string) => void;\r\n  selectedProducts: string;\r\n  setSelectedProducts: (products: string) => void;\r\n  search: string;\r\n  setSearch: (s: string) => void;\r\n}\r\n\r\nexport default function ProductCatalogToolbar({\r\n  selectedCategory,\r\n  setSelectedCategory,\r\n  selectedProducts,\r\n  setSelectedProducts,\r\n  search,\r\n  setSearch,\r\n}: ProductCatalogToolbarProps) {\r\n  const { categories, loading: categoriesLoading, error: categoriesError } = useCategories();\r\n  const [categorySearch, setCategorySearch] = useState(\"\");\r\n\r\n  const handleReset = useCallback(() => {\r\n    setSelectedCategory(\"all\");\r\n    setSelectedProducts(\"all\");\r\n    setCategorySearch(\"\");\r\n    setSearch(\"\");\r\n  }, [setSelectedCategory, setSelectedProducts, setSearch]);\r\n\r\n  const onSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearch(e.target.value);\r\n  }, [setSearch]);\r\n\r\n  const onCategorySearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCategorySearch(e.target.value);\r\n  }, []);\r\n\r\n  const filteredCategories = useMemo(() => {\r\n    const list = categories ?? [];\r\n    const q = categorySearch.trim().toLowerCase();\r\n    return q ? list.filter((c) => c.name.toLowerCase().includes(q)) : list;\r\n  }, [categories, categorySearch]);\r\n\r\n  const onCategoryChange = useCallback(\r\n    (val: string) => {\r\n      setSelectedCategory(val);\r\n    },\r\n    [setSelectedCategory]\r\n  );\r\n\r\n  const onProductsChange = useCallback(\r\n    (val: string) => {\r\n      setSelectedProducts(val);\r\n    },\r\n    [setSelectedProducts]\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between gap-4\">\r\n      <div className=\"relative flex items-center flex-1 max-w-[700px]\">\r\n        <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n        <Input\r\n          className=\"pl-9 w-full\"\r\n          placeholder=\"Search by product name or barcode...\"\r\n          value={search}\r\n          onChange={onSearchChange}\r\n          onClick={(e) => e.stopPropagation()}\r\n        />\r\n      </div>\r\n\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"outline\" className=\"flex items-center gap-2\">\r\n            <Funnel />\r\n            Filter\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n\r\n        <DropdownMenuContent className=\"w-[320px]\">\r\n          <div className=\"p-3\">\r\n            <h3 className=\"text-sm font-medium\">Filter</h3>\r\n          </div>\r\n          <DropdownMenuSeparator />\r\n\r\n          <div className=\"p-3\">\r\n            <h4 className=\"text-sm font-medium\">Category</h4>\r\n            <Select value={selectedCategory} onValueChange={onCategoryChange}>\r\n              <SelectTrigger className=\"w-full mt-2\">\r\n                <SelectValue placeholder=\"Category\" />\r\n              </SelectTrigger>\r\n\r\n              <SelectContent>\r\n                <div className=\"p-2\">\r\n                  <Input\r\n                    placeholder=\"Search category...\"\r\n                    value={categorySearch}\r\n                    onChange={onCategorySearchChange}\r\n                    className=\"mb-2\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"max-h-40 overflow-auto\">\r\n                  <SelectItem value=\"all\">All Categories</SelectItem>\r\n\r\n                  {categoriesLoading && <SelectItem value=\"loading\" disabled>Loading categories...</SelectItem>}\r\n                  {categoriesError && <SelectItem value=\"error\" disabled>{String(categoriesError)}</SelectItem>}\r\n\r\n                  {!categoriesLoading && !categoriesError && filteredCategories.length === 0 && (\r\n                    <SelectItem value=\"none\" disabled>No categories found</SelectItem>\r\n                  )}\r\n\r\n                  {!categoriesLoading && !categoriesError &&\r\n                    filteredCategories.map((cat) => (\r\n                      <SelectItem key={cat.id} value={String(cat.id)}>\r\n                        {cat.name}\r\n                      </SelectItem>\r\n                    ))}\r\n                </div>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <DropdownMenuSeparator />\r\n\r\n          <div className=\"p-3\">\r\n            <h4 className=\"text-sm font-medium\">Status</h4>\r\n            <Select value={selectedProducts} onValueChange={onProductsChange}>\r\n              <SelectTrigger className=\"w-full mt-2\">\r\n                <SelectValue placeholder=\"Status\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Stock</SelectItem>\r\n                <SelectItem value=\"in stock\">In Stock</SelectItem>\r\n                <SelectItem value=\"low stock\">Low Stock</SelectItem>\r\n                <SelectItem value=\"out of stock\">Out of Stock</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <DropdownMenuSeparator />\r\n\r\n          <div className=\"flex justify-end p-3\">\r\n            <Button variant=\"ghost\" className=\"font-normal\" onClick={handleReset}>\r\n              Reset All\r\n            </Button>\r\n          </div>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2852, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/table/dataTable.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {\r\n  ColumnDef,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n  SortingState,\r\n} from \"@tanstack/react-table\"\r\nimport { useState, useEffect, useRef, useMemo } from \"react\"\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\"\r\n\r\ninterface DataTableProps<TData, TValue> {\r\n  columns: ColumnDef<TData, TValue>[]\r\n  data: TData[]\r\n  page: number\r\n  pageSize: number\r\n  onFilteredCountChange?: (count: number) => void\r\n}\r\n\r\nexport function DataTable<TData, TValue>({\r\n  columns,\r\n  data,\r\n  page,\r\n  pageSize,\r\n  onFilteredCountChange,\r\n}: DataTableProps<TData, TValue>) {\r\n  const [sorting, setSorting] = useState<SortingState>([])\r\n\r\n  // create the table instance (react-table hook internally memoizes heavy parts)\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    state: { sorting, pagination: { pageIndex: page } as any },\r\n    onSortingChange: setSorting,\r\n    // keep pagination control outside of react-table to avoid internal pageIndex churn\r\n    onPaginationChange: (() => { }) as any,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n  })\r\n\r\n  // derived rows and paginated rows (memoized to avoid extra work on unrelated renders)\r\n  const rows = table.getRowModel().rows\r\n  const paginatedRows = useMemo(\r\n    () => rows.slice(page * pageSize, (page + 1) * pageSize),\r\n    [rows, page, pageSize]\r\n  )\r\n\r\n  // notify parent of filtered/sorted count with a deferred callback to avoid sync updates\r\n  const prevCountRef = useRef<number | null>(null)\r\n  const notifyTimerRef = useRef<ReturnType<typeof setTimeout> | null>(null)\r\n  const rowCount = rows.length\r\n\r\n  useEffect(() => {\r\n    if (!onFilteredCountChange) return\r\n\r\n    if (prevCountRef.current !== rowCount) {\r\n      prevCountRef.current = rowCount\r\n\r\n      if (notifyTimerRef.current) {\r\n        clearTimeout(notifyTimerRef.current)\r\n        notifyTimerRef.current = null\r\n      }\r\n\r\n      // defer notification so parent state updates don't run synchronously here\r\n      notifyTimerRef.current = setTimeout(() => {\r\n        onFilteredCountChange(rowCount)\r\n        notifyTimerRef.current = null\r\n      }, 0)\r\n    }\r\n\r\n    return () => {\r\n      if (notifyTimerRef.current) {\r\n        clearTimeout(notifyTimerRef.current)\r\n        notifyTimerRef.current = null\r\n      }\r\n    }\r\n  }, [rowCount, onFilteredCountChange])\r\n\r\n  return (\r\n    <div className=\"rounded-md border\">\r\n      <Table>\r\n        <TableHeader>\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <TableRow key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <TableHead key={header.id}>\r\n                  {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\r\n                </TableHead>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableHeader>\r\n\r\n        <TableBody>\r\n          {paginatedRows.length > 0 ? (\r\n            paginatedRows.map((row) => (\r\n              <TableRow key={row.id} data-state={row.getIsSelected() ? \"selected\" : undefined}>\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <TableCell key={cell.id} className=\"align-top break-words whitespace-normal\">\r\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n                No results.\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAQA;AAEA;AAZA;;;;;AA6BO,SAAS,UAAyB,EACvC,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,qBAAqB,EACS;IAC9B,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAe,EAAE;IAEvD,+EAA+E;IAC/E,MAAM,QAAQ,IAAA,uMAAa,EAAC;QAC1B;QACA;QACA,OAAO;YAAE;YAAS,YAAY;gBAAE,WAAW;YAAK;QAAS;QACzD,iBAAiB;QACjB,mFAAmF;QACnF,oBAAqB,KAAQ;QAC7B,iBAAiB,IAAA,wLAAe;QAChC,mBAAmB,IAAA,0LAAiB;IACtC;IAEA,sFAAsF;IACtF,MAAM,OAAO,MAAM,WAAW,GAAG,IAAI;IACrC,MAAM,gBAAgB,IAAA,gNAAO,EAC3B,IAAM,KAAK,KAAK,CAAC,OAAO,UAAU,CAAC,OAAO,CAAC,IAAI,WAC/C;QAAC;QAAM;QAAM;KAAS;IAGxB,wFAAwF;IACxF,MAAM,eAAe,IAAA,+MAAM,EAAgB;IAC3C,MAAM,iBAAiB,IAAA,+MAAM,EAAuC;IACpE,MAAM,WAAW,KAAK,MAAM;IAE5B,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,uBAAuB;QAE5B,IAAI,aAAa,OAAO,KAAK,UAAU;YACrC,aAAa,OAAO,GAAG;YAEvB,IAAI,eAAe,OAAO,EAAE;gBAC1B,aAAa,eAAe,OAAO;gBACnC,eAAe,OAAO,GAAG;YAC3B;YAEA,0EAA0E;YAC1E,eAAe,OAAO,GAAG,WAAW;gBAClC,sBAAsB;gBACtB,eAAe,OAAO,GAAG;YAC3B,GAAG;QACL;QAEA,OAAO;YACL,IAAI,eAAe,OAAO,EAAE;gBAC1B,aAAa,eAAe,OAAO;gBACnC,eAAe,OAAO,GAAG;YAC3B;QACF;IACF,GAAG;QAAC;QAAU;KAAsB;IAEpC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,0IAAK;;8BACJ,8OAAC,gJAAW;8BACT,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC5B,8OAAC,6IAAQ;sCACN,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC,uBACxB,8OAAC,8IAAS;8CACP,OAAO,aAAa,GAAG,OAAO,IAAA,oMAAU,EAAC,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,UAAU;mCAD7E,OAAO,EAAE;;;;;2BAFd,YAAY,EAAE;;;;;;;;;;8BAUjC,8OAAC,8IAAS;8BACP,cAAc,MAAM,GAAG,IACtB,cAAc,GAAG,CAAC,CAAC,oBACjB,8OAAC,6IAAQ;4BAAc,cAAY,IAAI,aAAa,KAAK,aAAa;sCACnE,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBAC1B,8OAAC,8IAAS;oCAAe,WAAU;8CAChC,IAAA,oMAAU,EAAC,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,UAAU;mCADzC,KAAK,EAAE;;;;;2BAFZ,IAAI,EAAE;;;;kDASvB,8OAAC,6IAAQ;kCACP,cAAA,8OAAC,8IAAS;4BAAC,SAAS,QAAQ,MAAM;4BAAE,WAAU;sCAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS/E","debugId":null}},
    {"offset": {"line": 2993, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"span\"> &\r\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 3039, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/table/columns.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { ColumnDef } from \"@tanstack/react-table\";\r\nimport { ArrowUpDown } from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\n\r\nexport type Products = {\r\n  id: string;\r\n  productName: string;\r\n  barcode: string;\r\n  category: string;\r\n  currentStock: number;\r\n  productPrice: number;\r\n  status: \"out of stock\" | \"low stock\" | \"in stock\";\r\n  original?: any;\r\n};\r\n\r\nconst statusConfig: Record<\r\n  Products[\"status\"],\r\n  { variant: \"default\" | \"outline\" | \"secondary\" | \"destructive\"; className: string }\r\n> = {\r\n  \"in stock\": { variant: \"default\", className: \"bg-green-300 text-black\" },\r\n  \"low stock\": { variant: \"secondary\", className: \"bg-yellow-500 text-black\" },\r\n  \"out of stock\": { variant: \"destructive\", className: \"bg-red-500 text-white\" },\r\n};\r\n\r\nexport const columns: ColumnDef<Products>[] = [\r\n  {\r\n    accessorKey: \"productName\",\r\n    header: ({ column }) => (\r\n      <button\r\n        className=\"flex items-center gap-2 font-medium focus:outline-none\"\r\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n      >\r\n        Product\r\n        <ArrowUpDown className=\"ml-1 h-4 w-4\" />\r\n      </button>\r\n    ),\r\n    cell: ({ row }) => (\r\n      <div className=\"flex w-full\">\r\n        <div\r\n          className=\"flex-1 flex flex-col items-start font-medium break-words whitespace-normal leading-tight\"\r\n          title={String(row.getValue(\"productName\"))}\r\n          style={{ wordBreak: \"break-word\", whiteSpace: \"normal\" }}\r\n        >\r\n          {row.getValue(\"productName\")}\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"barcode\",\r\n    header: \"Barcode\",\r\n  },\r\n  {\r\n    accessorKey: \"category\",\r\n    header: \"Category\",\r\n  },\r\n  {\r\n    accessorKey: \"currentStock\",\r\n    header: ({ column }) => (\r\n      <button\r\n        className=\"flex items-center gap-2 font-medium focus:outline-none\"\r\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n      >\r\n        Current Stock\r\n        <ArrowUpDown className=\"ml-1 h-4 w-4\" />\r\n      </button>\r\n    ),\r\n    cell: ({ row }) => <div className=\"flex items-center font-medium\">{row.getValue(\"currentStock\")}</div>,\r\n  },\r\n  {\r\n    accessorKey: \"productPrice\",\r\n    header: \"Price\",\r\n  },\r\n  {\r\n    accessorKey: \"status\",\r\n    header: \"Status\",\r\n    cell: ({ row }) => {\r\n      const status = row.original.status;\r\n      const cfg = statusConfig[status];\r\n      const label = status.charAt(0).toUpperCase() + status.slice(1);\r\n      return (\r\n        <Badge variant={cfg.variant} className={cfg.className}>\r\n          {label}\r\n        </Badge>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    header: () => <div className=\"text-center font-medium\">Actions</div>,\r\n    // leave actions cell empty here — table parent can provide the real handlers to avoid duplicate button code and reduce bundle\r\n    cell: () => <div className=\"flex gap-5 justify-center\" aria-hidden />,\r\n    enableSorting: false,\r\n    enableHiding: false,\r\n  },\r\n];\r\n//"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;;;;AAiBA,MAAM,eAGF;IACF,YAAY;QAAE,SAAS;QAAW,WAAW;IAA0B;IACvE,aAAa;QAAE,SAAS;QAAa,WAAW;IAA2B;IAC3E,gBAAgB;QAAE,SAAS;QAAe,WAAW;IAAwB;AAC/E;AAEO,MAAM,UAAiC;IAC5C;QACE,aAAa;QACb,QAAQ,CAAC,EAAE,MAAM,EAAE,iBACjB,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,OAAO,aAAa,CAAC,OAAO,WAAW,OAAO;;oBAC9D;kCAEC,8OAAC,uOAAW;wBAAC,WAAU;;;;;;;;;;;;QAG3B,MAAM,CAAC,EAAE,GAAG,EAAE,iBACZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO,OAAO,IAAI,QAAQ,CAAC;oBAC3B,OAAO;wBAAE,WAAW;wBAAc,YAAY;oBAAS;8BAEtD,IAAI,QAAQ,CAAC;;;;;;;;;;;IAItB;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ,CAAC,EAAE,MAAM,EAAE,iBACjB,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,OAAO,aAAa,CAAC,OAAO,WAAW,OAAO;;oBAC9D;kCAEC,8OAAC,uOAAW;wBAAC,WAAU;;;;;;;;;;;;QAG3B,MAAM,CAAC,EAAE,GAAG,EAAE,iBAAK,8OAAC;gBAAI,WAAU;0BAAiC,IAAI,QAAQ,CAAC;;;;;;IAClF;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,GAAG,EAAE;YACZ,MAAM,SAAS,IAAI,QAAQ,CAAC,MAAM;YAClC,MAAM,MAAM,YAAY,CAAC,OAAO;YAChC,MAAM,QAAQ,OAAO,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,KAAK,CAAC;YAC5D,qBACE,8OAAC,0IAAK;gBAAC,SAAS,IAAI,OAAO;gBAAE,WAAW,IAAI,SAAS;0BAClD;;;;;;QAGP;IACF;IACA;QACE,IAAI;QACJ,QAAQ,kBAAM,8OAAC;gBAAI,WAAU;0BAA0B;;;;;;QACvD,8HAA8H;QAC9H,MAAM,kBAAM,8OAAC;gBAAI,WAAU;gBAA4B,aAAW;;;;;;QAClE,eAAe;QACf,cAAc;IAChB;CACD,EACD,EAAE","debugId":null}},
    {"offset": {"line": 3192, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/pagination.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  MoreHorizontalIcon,\r\n} from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button, buttonVariants } from \"@/components/ui/button\"\r\n\r\nfunction Pagination({ className, ...props }: React.ComponentProps<\"nav\">) {\r\n  return (\r\n    <nav\r\n      role=\"navigation\"\r\n      aria-label=\"pagination\"\r\n      data-slot=\"pagination\"\r\n      className={cn(\"mx-auto flex w-full justify-center\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction PaginationContent({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"ul\">) {\r\n  return (\r\n    <ul\r\n      data-slot=\"pagination-content\"\r\n      className={cn(\"flex flex-row items-center gap-1\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction PaginationItem({ ...props }: React.ComponentProps<\"li\">) {\r\n  return <li data-slot=\"pagination-item\" {...props} />\r\n}\r\n\r\ntype PaginationLinkProps = {\r\n  isActive?: boolean\r\n} & Pick<React.ComponentProps<typeof Button>, \"size\"> &\r\n  React.ComponentProps<\"a\">\r\n\r\nfunction PaginationLink({\r\n  className,\r\n  isActive,\r\n  size = \"icon\",\r\n  ...props\r\n}: PaginationLinkProps) {\r\n  return (\r\n    <a\r\n      aria-current={isActive ? \"page\" : undefined}\r\n      data-slot=\"pagination-link\"\r\n      data-active={isActive}\r\n      className={cn(\r\n        buttonVariants({\r\n          variant: isActive ? \"outline\" : \"ghost\",\r\n          size,\r\n        }),\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction PaginationPrevious({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) {\r\n  return (\r\n    <PaginationLink\r\n      aria-label=\"Go to previous page\"\r\n      size=\"default\"\r\n      className={cn(\"gap-1 px-2.5 sm:pl-2.5\", className)}\r\n      {...props}\r\n    >\r\n      <ChevronLeftIcon />\r\n      <span className=\"hidden sm:block\">Previous</span>\r\n    </PaginationLink>\r\n  )\r\n}\r\n\r\nfunction PaginationNext({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) {\r\n  return (\r\n    <PaginationLink\r\n      aria-label=\"Go to next page\"\r\n      size=\"default\"\r\n      className={cn(\"gap-1 px-2.5 sm:pr-2.5\", className)}\r\n      {...props}\r\n    >\r\n      <span className=\"hidden sm:block\">Next</span>\r\n      <ChevronRightIcon />\r\n    </PaginationLink>\r\n  )\r\n}\r\n\r\nfunction PaginationEllipsis({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"span\">) {\r\n  return (\r\n    <span\r\n      aria-hidden\r\n      data-slot=\"pagination-ellipsis\"\r\n      className={cn(\"flex size-9 items-center justify-center\", className)}\r\n      {...props}\r\n    >\r\n      <MoreHorizontalIcon className=\"size-4\" />\r\n      <span className=\"sr-only\">More pages</span>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport {\r\n  Pagination,\r\n  PaginationContent,\r\n  PaginationLink,\r\n  PaginationItem,\r\n  PaginationPrevious,\r\n  PaginationNext,\r\n  PaginationEllipsis,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAMA;AACA;;;;;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,MAAK;QACL,cAAW;QACX,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACwB;IAC3B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,oCAAoC;QACjD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,eAAe,EAAE,GAAG,OAAmC;IAC9D,qBAAO,8OAAC;QAAG,aAAU;QAAmB,GAAG,KAAK;;;;;;AAClD;AAOA,SAAS,eAAe,EACtB,SAAS,EACT,QAAQ,EACR,OAAO,MAAM,EACb,GAAG,OACiB;IACpB,qBACE,8OAAC;QACC,gBAAc,WAAW,SAAS;QAClC,aAAU;QACV,eAAa;QACb,WAAW,IAAA,yHAAE,EACX,IAAA,oJAAc,EAAC;YACb,SAAS,WAAW,YAAY;YAChC;QACF,IACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACyC;IAC5C,qBACE,8OAAC;QACC,cAAW;QACX,MAAK;QACL,WAAW,IAAA,yHAAE,EAAC,0BAA0B;QACvC,GAAG,KAAK;;0BAET,8OAAC,2OAAe;;;;;0BAChB,8OAAC;gBAAK,WAAU;0BAAkB;;;;;;;;;;;;AAGxC;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACyC;IAC5C,qBACE,8OAAC;QACC,cAAW;QACX,MAAK;QACL,WAAW,IAAA,yHAAE,EAAC,0BAA0B;QACvC,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BAAkB;;;;;;0BAClC,8OAAC,8OAAgB;;;;;;;;;;;AAGvB;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OAC0B;IAC7B,qBACE,8OAAC;QACC,aAAW;QACX,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;0BAET,8OAAC,0OAAkB;gBAAC,WAAU;;;;;;0BAC9B,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAGhC","debugId":null}},
    {"offset": {"line": 3356, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/productCatalog/Pagination.tsx"],"sourcesContent":["import {\r\n    Pagination as PaginationRoot,\r\n    PaginationContent,\r\n    PaginationItem,\r\n    PaginationPrevious,\r\n    PaginationNext,\r\n    PaginationEllipsis,\r\n    PaginationLink\r\n} from \"@/components/ui/pagination\";\r\n\r\ntype PaginationProps = {\r\n    page: number;\r\n    pageCount: number;\r\n    setPage: (page: number) => void;\r\n    pageSize: number;\r\n    onPageSizeChange: (size: number) => void;\r\n};\r\n\r\nexport default function Pagination({ page, pageCount, setPage, pageSize, onPageSizeChange }: PaginationProps) {\r\n    if (pageCount <= 1) {\r\n        // nothing to paginate\r\n        return null;\r\n    }\r\n\r\n    const go = (p: number) => (e?: React.MouseEvent) => {\r\n        e?.preventDefault();\r\n        if (p < 0) p = 0;\r\n        if (p > pageCount - 1) p = pageCount - 1;\r\n        if (p !== page) setPage(p);\r\n    };\r\n\r\n    // build a compact page list: always show first and last, and a window around current page\r\n    const buildPages = () => {\r\n        const pages: (number | \"ellipsis\")[] = [];\r\n        const left = Math.max(1, page - 1);\r\n        const right = Math.min(pageCount - 2, page + 1);\r\n\r\n        pages.push(0); // first page\r\n\r\n        if (left > 1) pages.push(\"ellipsis\");\r\n\r\n        for (let i = left; i <= right; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        if (right < pageCount - 2) pages.push(\"ellipsis\");\r\n\r\n        if (pageCount > 1) pages.push(pageCount - 1); // last page\r\n\r\n        return pages;\r\n    };\r\n\r\n    const pages = buildPages();\r\n\r\n    return (\r\n        <PaginationRoot className=\"mt-2 flex items-center gap-4\">\r\n            <PaginationContent>\r\n                <PaginationItem>\r\n                    <PaginationPrevious\r\n                        href=\"#\"\r\n                        onClick={go(Math.max(page - 1, 0))}\r\n                        aria-disabled={page === 0}\r\n                    />\r\n                </PaginationItem>\r\n\r\n                {pages.map((p, idx) =>\r\n                    p === \"ellipsis\" ? (\r\n                        <PaginationItem key={`e-${idx}`}>\r\n                            <PaginationEllipsis />\r\n                        </PaginationItem>\r\n                    ) : (\r\n                        <PaginationItem key={p}>\r\n                            <PaginationLink\r\n                                href=\"#\"\r\n                                isActive={p === page}\r\n                                onClick={go(p)}\r\n                            >\r\n                                {p + 1}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )\r\n                )}\r\n\r\n                <PaginationItem>\r\n                    <PaginationNext\r\n                        href=\"#\"\r\n                        onClick={go(Math.min(page + 1, pageCount - 1))}\r\n                        aria-disabled={page === pageCount - 1}\r\n                    />\r\n                </PaginationItem>\r\n            </PaginationContent>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n                <label htmlFor=\"page-size\" className=\"text-sm\">Rows per page:</label>\r\n                <input\r\n                    id=\"page-size\"\r\n                    type=\"number\"\r\n                    min={1}\r\n                    max={100}\r\n                    value={pageSize}\r\n                    onChange={e => onPageSizeChange(Number(e.target.value) || 1)}\r\n                    className=\"border rounded px-2 py-1 w-16 text-sm\"\r\n                />\r\n            </div>\r\n        </PaginationRoot>\r\n    );\r\n}"],"names":[],"mappings":";;;;;AAAA;;;AAkBe,SAAS,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAmB;IACxG,IAAI,aAAa,GAAG;QAChB,sBAAsB;QACtB,OAAO;IACX;IAEA,MAAM,KAAK,CAAC,IAAc,CAAC;YACvB,GAAG;YACH,IAAI,IAAI,GAAG,IAAI;YACf,IAAI,IAAI,YAAY,GAAG,IAAI,YAAY;YACvC,IAAI,MAAM,MAAM,QAAQ;QAC5B;IAEA,0FAA0F;IAC1F,MAAM,aAAa;QACf,MAAM,QAAiC,EAAE;QACzC,MAAM,OAAO,KAAK,GAAG,CAAC,GAAG,OAAO;QAChC,MAAM,QAAQ,KAAK,GAAG,CAAC,YAAY,GAAG,OAAO;QAE7C,MAAM,IAAI,CAAC,IAAI,aAAa;QAE5B,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC;QAEzB,IAAK,IAAI,IAAI,MAAM,KAAK,OAAO,IAAK;YAChC,MAAM,IAAI,CAAC;QACf;QAEA,IAAI,QAAQ,YAAY,GAAG,MAAM,IAAI,CAAC;QAEtC,IAAI,YAAY,GAAG,MAAM,IAAI,CAAC,YAAY,IAAI,YAAY;QAE1D,OAAO;IACX;IAEA,MAAM,QAAQ;IAEd,qBACI,8OAAC,oJAAc;QAAC,WAAU;;0BACtB,8OAAC,2JAAiB;;kCACd,8OAAC,wJAAc;kCACX,cAAA,8OAAC,4JAAkB;4BACf,MAAK;4BACL,SAAS,GAAG,KAAK,GAAG,CAAC,OAAO,GAAG;4BAC/B,iBAAe,SAAS;;;;;;;;;;;oBAI/B,MAAM,GAAG,CAAC,CAAC,GAAG,MACX,MAAM,2BACF,8OAAC,wJAAc;sCACX,cAAA,8OAAC,4JAAkB;;;;;2BADF,CAAC,EAAE,EAAE,KAAK;;;;iDAI/B,8OAAC,wJAAc;sCACX,cAAA,8OAAC,wJAAc;gCACX,MAAK;gCACL,UAAU,MAAM;gCAChB,SAAS,GAAG;0CAEX,IAAI;;;;;;2BANQ;;;;;kCAY7B,8OAAC,wJAAc;kCACX,cAAA,8OAAC,wJAAc;4BACX,MAAK;4BACL,SAAS,GAAG,KAAK,GAAG,CAAC,OAAO,GAAG,YAAY;4BAC3C,iBAAe,SAAS,YAAY;;;;;;;;;;;;;;;;;0BAKhD,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAM,SAAQ;wBAAY,WAAU;kCAAU;;;;;;kCAC/C,8OAAC;wBACG,IAAG;wBACH,MAAK;wBACL,KAAK;wBACL,KAAK;wBACL,OAAO;wBACP,UAAU,CAAA,IAAK,iBAAiB,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK;wBAC1D,WAAU;;;;;;;;;;;;;;;;;;AAK9B","debugId":null}},
    {"offset": {"line": 3499, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/productCatalog/ProductTable.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useMemo, useCallback, useEffect } from \"react\";\r\nimport useSWR, { mutate } from \"swr\";\r\nimport { DataTable } from \"../../table/dataTable\";\r\nimport { columns, Products } from \"../../table/columns\";\r\nimport Pagination from \"./Pagination\";\r\nimport { productApi, Product } from \"@/hooks/products/useProductApi\";\r\nimport { useCategories } from \"@/hooks/global/fetching/useCategories\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Pencil, Trash2 } from \"lucide-react\";\r\nimport { showSuccessToast, showErrorToast } from \"@/utils/toast\";\r\n\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogHeader,\r\n    DialogTitle,\r\n    DialogDescription,\r\n    DialogFooter,\r\n    DialogClose,\r\n} from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n    DropdownMenu,\r\n    DropdownMenuContent,\r\n    DropdownMenuItem,\r\n    DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\n\r\n// Use consistent key\r\nconst PRODUCTS_KEY = \"products:list\";\r\nconst fetcher = () => productApi.getAll();\r\nconst PAGE_SIZE = 6;\r\n\r\n// Memoize row mapping function\r\nconst mapProductToRow = (product: Product, categoryMap: Map<string, string>): Products => {\r\n    const status = product.quantity === 0 ? \"out of stock\" : product.quantity < 5 ? \"low stock\" : \"in stock\";\r\n    const categoryName = categoryMap.get(String(product.category_id)) || `Category ${product.category_id}`;\r\n\r\n    return {\r\n        id: String(product.id),\r\n        productName: product.name,\r\n        barcode: product.barcode ?? \"\",\r\n        category: categoryName,\r\n        currentStock: product.quantity,\r\n        productPrice: product.price,\r\n        status,\r\n    };\r\n};\r\n\r\ntype ProductTableProps = {\r\n    selectedCategory: string;\r\n    selectedStatus: string;\r\n    onProductDeleted?: (id: number) => void;\r\n    search?: string;\r\n};\r\n\r\nexport default function ProductTable({\r\n    selectedCategory,\r\n    selectedStatus,\r\n    onProductDeleted,\r\n    search = \"\",\r\n}: ProductTableProps) {\r\n    const { data: products = [], isLoading, mutate: refetchProducts } = useSWR(PRODUCTS_KEY, fetcher, {\r\n        revalidateOnFocus: false,\r\n        revalidateOnReconnect: true,\r\n        dedupingInterval: 10_000,\r\n        errorRetryCount: 2,\r\n    });\r\n\r\n    const { categories = [] } = useCategories();\r\n\r\n    // Create category map for faster lookups\r\n    const categoryMap = useMemo(() => {\r\n        const map = new Map<string, string>();\r\n        categories.forEach(cat => map.set(String(cat.id), cat.name));\r\n        return map;\r\n    }, [categories]);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [pageSize, setPageSize] = useState(PAGE_SIZE);\r\n    const [editProductId, setEditProductId] = useState<number | null>(null);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showUpdateConfirm, setShowUpdateConfirm] = useState(false);\r\n    const [deleteProduct, setDeleteProduct] = useState<Products | null>(null);\r\n    const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n    const [categorySearch, setCategorySearch] = useState(\"\");\r\n\r\n    const [editForm, setEditForm] = useState({\r\n        name: \"\",\r\n        barcode: \"\",\r\n        category_id: \"\",\r\n        price: 0,\r\n        quantity: 0,\r\n    });\r\n\r\n    // Optimized filtering with useMemo\r\n    const filteredProducts = useMemo(() => {\r\n        let list: Product[] = products;\r\n\r\n        // Early return if no filters\r\n        if (selectedCategory === \"all\" && selectedStatus === \"all\" && !search.trim()) {\r\n            return list;\r\n        }\r\n\r\n        if (selectedCategory !== \"all\") {\r\n            list = list.filter((p) => String(p.category_id) === selectedCategory);\r\n        }\r\n\r\n        if (selectedStatus !== \"all\") {\r\n            list = list.filter((p) => {\r\n                const status = p.quantity === 0 ? \"out of stock\" : p.quantity < 5 ? \"low stock\" : \"in stock\";\r\n                return status === selectedStatus;\r\n            });\r\n        }\r\n\r\n        const searchTerm = search.trim().toLowerCase();\r\n        if (searchTerm) {\r\n            list = list.filter((p) => {\r\n                const name = p.name?.toLowerCase() || \"\";\r\n                const barcode = p.barcode?.toLowerCase() || \"\";\r\n                return name.includes(searchTerm) || barcode.includes(searchTerm);\r\n            });\r\n        }\r\n\r\n        return list;\r\n    }, [products, selectedCategory, selectedStatus, search]);\r\n\r\n    // Memoize mapped products\r\n    const mappedProducts = useMemo(\r\n        () => filteredProducts.map((p) => mapProductToRow(p, categoryMap)),\r\n        [filteredProducts, categoryMap]\r\n    );\r\n\r\n    // Reset page when filters change\r\n    useEffect(() => setPage(0), [selectedCategory, selectedStatus, search]);\r\n\r\n    const pageCount = Math.max(1, Math.ceil(mappedProducts.length / pageSize));\r\n\r\n    const editProduct = useMemo(\r\n        () => products.find((p) => p.id === editProductId),\r\n        [products, editProductId]\r\n    );\r\n\r\n    // Sync edit form\r\n    useEffect(() => {\r\n        if (showEditDialog && editProduct) {\r\n            setEditForm({\r\n                name: editProduct.name || \"\",\r\n                barcode: editProduct.barcode || \"\",\r\n                category_id: String(editProduct.category_id || \"\"),\r\n                price: editProduct.price || 0,\r\n                quantity: editProduct.quantity || 0,\r\n            });\r\n        }\r\n    }, [showEditDialog, editProduct]);\r\n\r\n    const handleEdit = useCallback((row: Products) => {\r\n        setEditProductId(Number(row.id));\r\n        setShowEditDialog(true);\r\n        setShowUpdateConfirm(false);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((row: Products) => {\r\n        setDeleteProduct(row);\r\n        setShowDeleteDialog(true);\r\n    }, []);\r\n\r\n    const handleUpdateProduct = useCallback(async () => {\r\n        if (!editProduct) return;\r\n\r\n        const updatedData = {\r\n            name: editForm.name,\r\n            barcode: editForm.barcode,\r\n            category_id: Number(editForm.category_id),\r\n            price: Number(editForm.price),\r\n            quantity: Number(editForm.quantity),\r\n        };\r\n\r\n        try {\r\n            // Optimistic update\r\n            const optimisticProduct = { ...editProduct, ...updatedData };\r\n\r\n            mutate(\r\n                PRODUCTS_KEY,\r\n                (current: Product[] = []) =>\r\n                    current.map(p => p.id === editProduct.id ? optimisticProduct : p),\r\n                false\r\n            );\r\n\r\n            await productApi.update(Number(editProduct.id), updatedData);\r\n\r\n            showSuccessToast(\"Product updated\", `${editForm.name} has been updated.`);\r\n\r\n            setShowEditDialog(false);\r\n            setShowUpdateConfirm(false);\r\n\r\n            // Final revalidation\r\n            mutate(PRODUCTS_KEY);\r\n\r\n        } catch (err: any) {\r\n            // Revert on error\r\n            mutate(PRODUCTS_KEY);\r\n            showErrorToast(\"Failed to update product\", err?.message || \"An error occurred.\");\r\n        }\r\n    }, [editProduct, editForm]);\r\n\r\n    const handleDeleteProduct = useCallback(async () => {\r\n        if (!deleteProduct) return;\r\n\r\n        const productId = Number(deleteProduct.id);\r\n\r\n        try {\r\n            // Optimistic update\r\n            mutate(\r\n                PRODUCTS_KEY,\r\n                (current: Product[] = []) => current.filter(p => p.id !== productId),\r\n                false\r\n            );\r\n\r\n            await productApi.delete(productId);\r\n\r\n            showSuccessToast(\"Product deleted\", `${deleteProduct.productName} has been deleted.`);\r\n\r\n            setShowDeleteDialog(false);\r\n            setDeleteProduct(null);\r\n            onProductDeleted?.(productId);\r\n\r\n            // Final revalidation\r\n            mutate(PRODUCTS_KEY);\r\n\r\n        } catch (err: any) {\r\n            // Revert on error\r\n            mutate(PRODUCTS_KEY);\r\n            showErrorToast(\"Failed to delete product\", err?.message || \"An error occurred.\");\r\n        }\r\n    }, [deleteProduct, onProductDeleted]);\r\n\r\n    // Enhanced columns with actions\r\n    const enhancedColumns = useMemo(() =>\r\n        columns.map((col) =>\r\n            col.id === \"actions\"\r\n                ? {\r\n                    ...col,\r\n                    cell: ({ row }: any) => (\r\n                        <div className=\"flex gap-2 justify-center\">\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"icon\"\r\n                                onClick={() => handleEdit(row.original)}\r\n                                disabled={isLoading}\r\n                            >\r\n                                <Pencil className=\"w-4 h-4\" />\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"icon\"\r\n                                onClick={() => handleDelete(row.original)}\r\n                                disabled={isLoading}\r\n                            >\r\n                                <Trash2 className=\"w-4 h-4\" />\r\n                            </Button>\r\n                        </div>\r\n                    ),\r\n                }\r\n                : col\r\n        ), [handleEdit, handleDelete, isLoading]);\r\n\r\n    return (\r\n        <div className=\"w-full mt-4 relative\">\r\n            {isLoading && (\r\n                <div className=\"absolute top-0 left-0 right-0 h-1 bg-blue-200 z-10\">\r\n                    <div className=\"h-full bg-blue-500 animate-pulse\"></div>\r\n                </div>\r\n            )}\r\n\r\n            <DataTable\r\n                columns={enhancedColumns}\r\n                data={mappedProducts}\r\n                page={page}\r\n                pageSize={pageSize}\r\n            />\r\n\r\n            <div className=\"mt-7\">\r\n                <Pagination\r\n                    page={page}\r\n                    pageCount={pageCount}\r\n                    setPage={setPage}\r\n                    pageSize={pageSize}\r\n                    onPageSizeChange={(size) => {\r\n                        setPageSize(size);\r\n                        setPage(0);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {/* Edit Dialog */}\r\n            <Dialog open={showEditDialog} onOpenChange={setShowEditDialog}>\r\n                <DialogContent>\r\n                    {showUpdateConfirm ? (\r\n                        <div className=\"flex flex-col items-center justify-center py-8\">\r\n                            <h2 className=\"font-bold text-lg mb-2\">Are you absolutely sure?</h2>\r\n                            <p className=\"mb-6 text-gray-500\">This will update the product details.</p>\r\n                            <div className=\"flex gap-2\">\r\n                                <Button variant=\"outline\" onClick={() => setShowUpdateConfirm(false)}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={handleUpdateProduct}>Continue</Button>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <DialogHeader>\r\n                                <DialogTitle>Edit Product</DialogTitle>\r\n                                <DialogDescription>Update product details below.</DialogDescription>\r\n                            </DialogHeader>\r\n\r\n                            <div className=\"flex flex-col gap-4\">\r\n                                <div className=\"flex flex-col gap-2\">\r\n                                    <Label htmlFor=\"edit-name\">Product Name</Label>\r\n                                    <Input\r\n                                        id=\"edit-name\"\r\n                                        value={editForm.name}\r\n                                        onChange={(e) => setEditForm(f => ({ ...f, name: e.target.value }))}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"flex gap-2\">\r\n                                    <div className=\"flex-1 flex flex-col gap-2\">\r\n                                        <Label htmlFor=\"edit-barcode\">Barcode</Label>\r\n                                        <Input\r\n                                            id=\"edit-barcode\"\r\n                                            value={editForm.barcode}\r\n                                            onChange={(e) => setEditForm(f => ({ ...f, barcode: e.target.value }))}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"flex-1 flex flex-col gap-2\">\r\n                                        <Label htmlFor=\"edit-category\">Category</Label>\r\n                                        <DropdownMenu>\r\n                                            <DropdownMenuTrigger asChild>\r\n                                                <Input\r\n                                                    readOnly\r\n                                                    value={categoryMap.get(editForm.category_id) || \"\"}\r\n                                                    placeholder=\"Select category\"\r\n                                                    className=\"cursor-pointer\"\r\n                                                />\r\n                                            </DropdownMenuTrigger>\r\n                                            <DropdownMenuContent>\r\n                                                {categories.map((cat) => (\r\n                                                    <DropdownMenuItem\r\n                                                        key={cat.id}\r\n                                                        onClick={() => setEditForm(f => ({ ...f, category_id: String(cat.id) }))}\r\n                                                    >\r\n                                                        {cat.name}\r\n                                                    </DropdownMenuItem>\r\n                                                ))}\r\n                                            </DropdownMenuContent>\r\n                                        </DropdownMenu>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"flex gap-2\">\r\n                                    <div className=\"flex-1 flex flex-col gap-2\">\r\n                                        <Label htmlFor=\"edit-price\">Price</Label>\r\n                                        <div className=\"relative\">\r\n                                            <span className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\">₱</span>\r\n                                            <Input\r\n                                                id=\"edit-price\"\r\n                                                type=\"number\"\r\n                                                value={editForm.price || \"\"}\r\n                                                onChange={(e) => setEditForm(f => ({ ...f, price: Number(e.target.value) || 0 }))}\r\n                                                className=\"pl-8\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex-1 flex flex-col gap-2\">\r\n                                        <Label htmlFor=\"edit-quantity\">Quantity</Label>\r\n                                        <Input\r\n                                            id=\"edit-quantity\"\r\n                                            type=\"number\"\r\n                                            value={editForm.quantity || \"\"}\r\n                                            onChange={(e) => setEditForm(f => ({ ...f, quantity: Number(e.target.value) || 0 }))}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <DialogFooter>\r\n                                    <Button variant=\"outline\" onClick={() => setShowEditDialog(false)}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                    <Button onClick={() => setShowUpdateConfirm(true)}>\r\n                                        Update Product\r\n                                    </Button>\r\n                                </DialogFooter>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            {/* Delete Dialog */}\r\n            <Dialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>\r\n                <DialogContent>\r\n                    <DialogHeader>\r\n                        <DialogTitle>Are you absolutely sure?</DialogTitle>\r\n                        <DialogDescription>\r\n                            This action cannot be undone. This will permanently delete the product.\r\n                        </DialogDescription>\r\n                    </DialogHeader>\r\n                    <DialogFooter>\r\n                        <Button variant=\"outline\" onClick={() => setShowDeleteDialog(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"destructive\" onClick={handleDeleteProduct}>\r\n                            Continue\r\n                        </Button>\r\n                    </DialogFooter>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4220, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/components/productCatalog/index.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader } from \"@/components/ui/card\";\r\nimport ProductCatalogToolbar from \"./ProductCatalogToolbar\";\r\nimport ProductTable from \"./ProductTable\";\r\nimport { useState } from \"react\";\r\n\r\ninterface IndexProps {\r\n  onProductDeleted?: (id: number) => void;\r\n}\r\n\r\nexport default function Index({ onProductDeleted }: IndexProps) {\r\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\r\n  const [selectedProducts, setSelectedProducts] = useState(\"all\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <Card className=\"h-full w-full\">\r\n      <CardHeader>\r\n        <h2 className=\"text-2xl font-semibold\">Product Catalog</h2>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <ProductCatalogToolbar\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          selectedProducts={selectedProducts}\r\n          setSelectedProducts={setSelectedProducts}\r\n          search={search}\r\n          setSearch={setSearch}\r\n        />\r\n        <ProductTable\r\n          selectedCategory={selectedCategory}\r\n          selectedStatus={selectedProducts}\r\n          onProductDeleted={onProductDeleted}\r\n          search={search}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAMe,SAAS,MAAM,EAAE,gBAAgB,EAAc;IAC5D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IACzD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IACzD,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IAErC,qBACE,8OAAC,wIAAI;QAAC,WAAU;;0BACd,8OAAC,8IAAU;0BACT,cAAA,8OAAC;oBAAG,WAAU;8BAAyB;;;;;;;;;;;0BAEzC,8OAAC,+IAAW;;kCACV,8OAAC,kNAAqB;wBACpB,kBAAkB;wBAClB,qBAAqB;wBACrB,kBAAkB;wBAClB,qBAAqB;wBACrB,QAAQ;wBACR,WAAW;;;;;;kCAEb,8OAAC,yMAAY;wBACX,kBAAkB;wBAClB,gBAAgB;wBAChB,kBAAkB;wBAClB,QAAQ;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}},
    {"offset": {"line": 4296, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Products/productsScreen.tsx"],"sourcesContent":["'use client'\r\n\r\nimport Head from './components/head';\r\nimport ProductsStats from './components/ProductStats';\r\nimport Index from './components/productCatalog/index';\r\nimport AddCategoryModal from './components/addCategoryModal';\r\n\r\nexport default function ProductsScreen() {\r\n  return (\r\n    <div className=\"flex flex-col gap-4 h-full p-8\">\r\n      <div className=\"flex-[7%]\">\r\n        <Head />\r\n      </div>\r\n\r\n      <div className=\"flex-[18%]\">\r\n        <ProductsStats />\r\n      </div>\r\n\r\n      <div className=\"flex-[75%]\">\r\n        <Index />\r\n      </div>\r\n\r\n      <AddCategoryModal />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+KAAI;;;;;;;;;;0BAGP,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,uLAAa;;;;;;;;;;0BAGhB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,kMAAK;;;;;;;;;;0BAGR,8OAAC,2LAAgB;;;;;;;;;;;AAGvB","debugId":null}},
    {"offset": {"line": 4367, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/hooks/global/fetching/useSaleItems.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"@/lib/axios\";\r\n\r\nexport interface AggregatedSaleItem {\r\n  category: string;\r\n  quantity: number;\r\n}\r\n\r\n/**\r\n * Hook for fetching aggregated sale items by category.\r\n * Accepts optional { from, to } ISO date strings.\r\n */\r\nexport const useSaleItems = (opts?: { from?: string; to?: string }) => {\r\n  const [saleItems, setSaleItems] = useState<AggregatedSaleItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchSaleItems = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const params = new URLSearchParams();\r\n      params.set(\"limit\", \"all\");\r\n      if (opts?.from) params.set(\"from\", opts.from);\r\n      if (opts?.to) params.set(\"to\", opts.to);\r\n\r\n      const url = `/sales-items?${params.toString()}`;\r\n      const res = await axios.get(url);\r\n\r\n      const payload = res.data;\r\n      setSaleItems(Array.isArray(payload) ? payload : payload?.data ?? []);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Unknown error\");\r\n      setSaleItems([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSaleItems();\r\n  }, [opts?.from, opts?.to]);\r\n\r\n  return { saleItems, loading, error, refetch: fetchSaleItems };\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAWO,MAAM,eAAe,CAAC;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAuB,EAAE;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAElD,MAAM,iBAAiB;QACrB,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,SAAS,IAAI;YACnB,OAAO,GAAG,CAAC,SAAS;YACpB,IAAI,MAAM,MAAM,OAAO,GAAG,CAAC,QAAQ,KAAK,IAAI;YAC5C,IAAI,MAAM,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,EAAE;YAEtC,MAAM,MAAM,CAAC,aAAa,EAAE,OAAO,QAAQ,IAAI;YAC/C,MAAM,MAAM,MAAM,8HAAK,CAAC,GAAG,CAAC;YAE5B,MAAM,UAAU,IAAI,IAAI;YACxB,aAAa,MAAM,OAAO,CAAC,WAAW,UAAU,SAAS,QAAQ,EAAE;QACrE,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,aAAa,EAAE;QACjB,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAA,kNAAS,EAAC;QACR;IACF,GAAG;QAAC,MAAM;QAAM,MAAM;KAAG;IAEzB,OAAO;QAAE;QAAW;QAAS;QAAO,SAAS;IAAe;AAC9D","debugId":null}},
    {"offset": {"line": 4415, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/hooks/global/fetching/useSales.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"@/lib/axios\";\r\n\r\nexport interface Sale {\r\n  id: number;\r\n  customer_id: number | null;\r\n  total_purchase: number;\r\n  created_at: string;\r\n}\r\n\r\ninterface UseSalesParams {\r\n  from?: string;\r\n  to?: string;\r\n}\r\n\r\nexport const useSales = (params?: UseSalesParams) => {\r\n  const [sales, setSales] = useState<Sale[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchSales = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const res = await axios.get(\"/sales\", {\r\n        params: {\r\n          from: params?.from,\r\n          to: params?.to,\r\n        },\r\n      });\r\n\r\n      setSales(res.data.data || []);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Unknown error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSales();\r\n  }, [params?.from, params?.to]);\r\n\r\n  return { sales, loading, error, refetch: fetchSales };\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAcO,MAAM,WAAW,CAAC;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAS,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAElD,MAAM,aAAa;QACjB,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,MAAM,MAAM,8HAAK,CAAC,GAAG,CAAC,UAAU;gBACpC,QAAQ;oBACN,MAAM,QAAQ;oBACd,IAAI,QAAQ;gBACd;YACF;YAEA,SAAS,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;QAC9B,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAA,kNAAS,EAAC;QACR;IACF,GAAG;QAAC,QAAQ;QAAM,QAAQ;KAAG;IAE7B,OAAO;QAAE;QAAO;QAAS;QAAO,SAAS;IAAW;AACtD","debugId":null}},
    {"offset": {"line": 4461, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Dashboard/components/stats.tsx"],"sourcesContent":["// Stats.tsx\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { DollarSign, Package, ShoppingCart } from \"lucide-react\";\r\nimport { useSaleItems } from \"@/hooks/global/fetching/useSaleItems\";\r\nimport { useProducts } from \"@/hooks/global/fetching/useProducts\";\r\nimport { useSales } from \"@/hooks/global/fetching/useSales\";\r\nfunction getCalendarDayRange() {\r\n    const now = new Date();\r\n\r\n    const start = new Date(now);\r\n    start.setHours(0, 0, 0, 0); // 12:00 AM\r\n\r\n    const end = new Date(now);\r\n    end.setHours(23, 59, 59, 999); // 11:59 PM\r\n\r\n    return { from: start.toISOString(), to: end.toISOString() };\r\n}\r\n\r\nexport default function Stats() {\r\n    const { products = [], loading: productsLoading } = useProducts();\r\n\r\n    const { from, to } = getCalendarDayRange();\r\n\r\n    const { sales = [], loading: salesLoading } = useSales({ from, to });\r\n    const { saleItems: todaysSaleItems = [], loading: saleItemsLoading } =\r\n        useSaleItems({ from, to });\r\n\r\n    const todaysSales = sales.reduce((sum, sale) => sum + sale.total_purchase, 0);\r\n    const todaysTransactions = sales.length;\r\n    const itemsSoldToday = todaysSaleItems.reduce(\r\n        (sum, item) => sum + (Number(item.quantity) || 0),\r\n        0\r\n    );\r\n\r\n    const statsData = [\r\n        {\r\n            title: \"Today's Sales\",\r\n            content: salesLoading ? \"...\" : `₱ ${todaysSales.toLocaleString()}`,\r\n            icon: <DollarSign size={20} />,\r\n        },\r\n        {\r\n            title: \"Items Sold Today\",\r\n            content: saleItemsLoading ? \"...\" : itemsSoldToday.toLocaleString(),\r\n            icon: <Package size={20} />,\r\n        },\r\n        {\r\n            title: \"Today's Transactions\",\r\n            content: salesLoading ? \"...\" : todaysTransactions.toLocaleString(),\r\n            icon: <ShoppingCart size={20} />,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-3 gap-4 w-full h-full\">\r\n            {statsData.map((stat, idx) => (\r\n                <Card key={idx} className=\"gap-0 flex justify-center\">\r\n                    <CardHeader className=\"mb-4 flex flex-row justify-between items-center\">\r\n                        <CardTitle className=\"text-md font-semibold\">\r\n                            {stat.title}\r\n                        </CardTitle>\r\n                        <div className=\"opacity-60\">{stat.icon}</div>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"text-3xl font-bold mb-6\">{stat.content}</div>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"AAAA,YAAY;;;;;;AACZ;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AACA,SAAS;IACL,MAAM,MAAM,IAAI;IAEhB,MAAM,QAAQ,IAAI,KAAK;IACvB,MAAM,QAAQ,CAAC,GAAG,GAAG,GAAG,IAAI,WAAW;IAEvC,MAAM,MAAM,IAAI,KAAK;IACrB,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,MAAM,WAAW;IAE1C,OAAO;QAAE,MAAM,MAAM,WAAW;QAAI,IAAI,IAAI,WAAW;IAAG;AAC9D;AAEe,SAAS;IACpB,MAAM,EAAE,WAAW,EAAE,EAAE,SAAS,eAAe,EAAE,GAAG,IAAA,gKAAW;IAE/D,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG;IAErB,MAAM,EAAE,QAAQ,EAAE,EAAE,SAAS,YAAY,EAAE,GAAG,IAAA,0JAAQ,EAAC;QAAE;QAAM;IAAG;IAClE,MAAM,EAAE,WAAW,kBAAkB,EAAE,EAAE,SAAS,gBAAgB,EAAE,GAChE,IAAA,kKAAY,EAAC;QAAE;QAAM;IAAG;IAE5B,MAAM,cAAc,MAAM,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,cAAc,EAAE;IAC3E,MAAM,qBAAqB,MAAM,MAAM;IACvC,MAAM,iBAAiB,gBAAgB,MAAM,CACzC,CAAC,KAAK,OAAS,MAAM,CAAC,OAAO,KAAK,QAAQ,KAAK,CAAC,GAChD;IAGJ,MAAM,YAAY;QACd;YACI,OAAO;YACP,SAAS,eAAe,QAAQ,CAAC,EAAE,EAAE,YAAY,cAAc,IAAI;YACnE,oBAAM,8OAAC,gOAAU;gBAAC,MAAM;;;;;;QAC5B;QACA;YACI,OAAO;YACP,SAAS,mBAAmB,QAAQ,eAAe,cAAc;YACjE,oBAAM,8OAAC,mNAAO;gBAAC,MAAM;;;;;;QACzB;QACA;YACI,OAAO;YACP,SAAS,eAAe,QAAQ,mBAAmB,cAAc;YACjE,oBAAM,8OAAC,sOAAY;gBAAC,MAAM;;;;;;QAC9B;KACH;IAED,qBACI,8OAAC;QAAI,WAAU;kBACV,UAAU,GAAG,CAAC,CAAC,MAAM,oBAClB,8OAAC,wIAAI;gBAAW,WAAU;;kCACtB,8OAAC,8IAAU;wBAAC,WAAU;;0CAClB,8OAAC,6IAAS;gCAAC,WAAU;0CAChB,KAAK,KAAK;;;;;;0CAEf,8OAAC;gCAAI,WAAU;0CAAc,KAAK,IAAI;;;;;;;;;;;;kCAE1C,8OAAC,+IAAW;kCACR,cAAA,8OAAC;4BAAI,WAAU;sCAA2B,KAAK,OAAO;;;;;;;;;;;;eARnD;;;;;;;;;;AAc3B","debugId":null}},
    {"offset": {"line": 4600, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n} from \"lucide-react\"\r\nimport { DayButton, DayPicker, getDefaultClassNames } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button, buttonVariants } from \"@/components/ui/button\"\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  captionLayout = \"label\",\r\n  buttonVariant = \"ghost\",\r\n  formatters,\r\n  components,\r\n  ...props\r\n}: React.ComponentProps<typeof DayPicker> & {\r\n  buttonVariant?: React.ComponentProps<typeof Button>[\"variant\"]\r\n}) {\r\n  const defaultClassNames = getDefaultClassNames()\r\n\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\r\n        \"bg-background group/calendar p-3 [--cell-size:--spacing(8)] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent\",\r\n        String.raw`rtl:**:[.rdp-button\\_next>svg]:rotate-180`,\r\n        String.raw`rtl:**:[.rdp-button\\_previous>svg]:rotate-180`,\r\n        className\r\n      )}\r\n      captionLayout={captionLayout}\r\n      formatters={{\r\n        formatMonthDropdown: (date) =>\r\n          date.toLocaleString(\"default\", { month: \"short\" }),\r\n        ...formatters,\r\n      }}\r\n      classNames={{\r\n        root: cn(\"w-fit\", defaultClassNames.root),\r\n        months: cn(\r\n          \"flex gap-4 flex-col md:flex-row relative\",\r\n          defaultClassNames.months\r\n        ),\r\n        month: cn(\"flex flex-col w-full gap-4\", defaultClassNames.month),\r\n        nav: cn(\r\n          \"flex items-center gap-1 w-full absolute top-0 inset-x-0 justify-between\",\r\n          defaultClassNames.nav\r\n        ),\r\n        button_previous: cn(\r\n          buttonVariants({ variant: buttonVariant }),\r\n          \"size-(--cell-size) aria-disabled:opacity-50 p-0 select-none\",\r\n          defaultClassNames.button_previous\r\n        ),\r\n        button_next: cn(\r\n          buttonVariants({ variant: buttonVariant }),\r\n          \"size-(--cell-size) aria-disabled:opacity-50 p-0 select-none\",\r\n          defaultClassNames.button_next\r\n        ),\r\n        month_caption: cn(\r\n          \"flex items-center justify-center h-(--cell-size) w-full px-(--cell-size)\",\r\n          defaultClassNames.month_caption\r\n        ),\r\n        dropdowns: cn(\r\n          \"w-full flex items-center text-sm font-medium justify-center h-(--cell-size) gap-1.5\",\r\n          defaultClassNames.dropdowns\r\n        ),\r\n        dropdown_root: cn(\r\n          \"relative has-focus:border-ring border border-input shadow-xs has-focus:ring-ring/50 has-focus:ring-[3px] rounded-md\",\r\n          defaultClassNames.dropdown_root\r\n        ),\r\n        dropdown: cn(\r\n          \"absolute bg-popover inset-0 opacity-0\",\r\n          defaultClassNames.dropdown\r\n        ),\r\n        caption_label: cn(\r\n          \"select-none font-medium\",\r\n          captionLayout === \"label\"\r\n            ? \"text-sm\"\r\n            : \"rounded-md pl-2 pr-1 flex items-center gap-1 text-sm h-8 [&>svg]:text-muted-foreground [&>svg]:size-3.5\",\r\n          defaultClassNames.caption_label\r\n        ),\r\n        table: \"w-full border-collapse\",\r\n        weekdays: cn(\"flex\", defaultClassNames.weekdays),\r\n        weekday: cn(\r\n          \"text-muted-foreground rounded-md flex-1 font-normal text-[0.8rem] select-none\",\r\n          defaultClassNames.weekday\r\n        ),\r\n        week: cn(\"flex w-full mt-2\", defaultClassNames.week),\r\n        week_number_header: cn(\r\n          \"select-none w-(--cell-size)\",\r\n          defaultClassNames.week_number_header\r\n        ),\r\n        week_number: cn(\r\n          \"text-[0.8rem] select-none text-muted-foreground\",\r\n          defaultClassNames.week_number\r\n        ),\r\n        day: cn(\r\n          \"relative w-full h-full p-0 text-center [&:first-child[data-selected=true]_button]:rounded-l-md [&:last-child[data-selected=true]_button]:rounded-r-md group/day aspect-square select-none\",\r\n          defaultClassNames.day\r\n        ),\r\n        range_start: cn(\r\n          \"rounded-l-md bg-accent\",\r\n          defaultClassNames.range_start\r\n        ),\r\n        range_middle: cn(\"rounded-none\", defaultClassNames.range_middle),\r\n        range_end: cn(\"rounded-r-md bg-accent\", defaultClassNames.range_end),\r\n        today: cn(\r\n          \"bg-accent text-accent-foreground rounded-md data-[selected=true]:rounded-none\",\r\n          defaultClassNames.today\r\n        ),\r\n        outside: cn(\r\n          \"text-muted-foreground aria-selected:text-muted-foreground\",\r\n          defaultClassNames.outside\r\n        ),\r\n        disabled: cn(\r\n          \"text-muted-foreground opacity-50\",\r\n          defaultClassNames.disabled\r\n        ),\r\n        hidden: cn(\"invisible\", defaultClassNames.hidden),\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        Root: ({ className, rootRef, ...props }) => {\r\n          return (\r\n            <div\r\n              data-slot=\"calendar\"\r\n              ref={rootRef}\r\n              className={cn(className)}\r\n              {...props}\r\n            />\r\n          )\r\n        },\r\n        Chevron: ({ className, orientation, ...props }) => {\r\n          if (orientation === \"left\") {\r\n            return (\r\n              <ChevronLeftIcon className={cn(\"size-4\", className)} {...props} />\r\n            )\r\n          }\r\n\r\n          if (orientation === \"right\") {\r\n            return (\r\n              <ChevronRightIcon\r\n                className={cn(\"size-4\", className)}\r\n                {...props}\r\n              />\r\n            )\r\n          }\r\n\r\n          return (\r\n            <ChevronDownIcon className={cn(\"size-4\", className)} {...props} />\r\n          )\r\n        },\r\n        DayButton: CalendarDayButton,\r\n        WeekNumber: ({ children, ...props }) => {\r\n          return (\r\n            <td {...props}>\r\n              <div className=\"flex size-(--cell-size) items-center justify-center text-center\">\r\n                {children}\r\n              </div>\r\n            </td>\r\n          )\r\n        },\r\n        ...components,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CalendarDayButton({\r\n  className,\r\n  day,\r\n  modifiers,\r\n  ...props\r\n}: React.ComponentProps<typeof DayButton>) {\r\n  const defaultClassNames = getDefaultClassNames()\r\n\r\n  const ref = React.useRef<HTMLButtonElement>(null)\r\n  React.useEffect(() => {\r\n    if (modifiers.focused) ref.current?.focus()\r\n  }, [modifiers.focused])\r\n\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      data-day={day.date.toLocaleDateString()}\r\n      data-selected-single={\r\n        modifiers.selected &&\r\n        !modifiers.range_start &&\r\n        !modifiers.range_end &&\r\n        !modifiers.range_middle\r\n      }\r\n      data-range-start={modifiers.range_start}\r\n      data-range-end={modifiers.range_end}\r\n      data-range-middle={modifiers.range_middle}\r\n      className={cn(\r\n        \"data-[selected-single=true]:bg-primary data-[selected-single=true]:text-primary-foreground data-[range-middle=true]:bg-accent data-[range-middle=true]:text-accent-foreground data-[range-start=true]:bg-primary data-[range-start=true]:text-primary-foreground data-[range-end=true]:bg-primary data-[range-end=true]:text-primary-foreground group-data-[focused=true]/day:border-ring group-data-[focused=true]/day:ring-ring/50 dark:hover:text-accent-foreground flex aspect-square size-auto w-full min-w-(--cell-size) flex-col gap-1 leading-none font-normal group-data-[focused=true]/day:relative group-data-[focused=true]/day:z-10 group-data-[focused=true]/day:ring-[3px] data-[range-end=true]:rounded-md data-[range-end=true]:rounded-r-md data-[range-middle=true]:rounded-none data-[range-start=true]:rounded-md data-[range-start=true]:rounded-l-md [&>span]:text-xs [&>span]:opacity-70\",\r\n        defaultClassNames.day,\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Calendar, CalendarDayButton }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4766, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RechartsPrimitive from \"recharts\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = { light: \"\", dark: \".dark\" } as const\r\n\r\nexport type ChartConfig = {\r\n  [k in string]: {\r\n    label?: React.ReactNode\r\n    icon?: React.ComponentType\r\n  } & (\r\n    | { color?: string; theme?: never }\r\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\r\n  )\r\n}\r\n\r\ntype ChartContextProps = {\r\n  config: ChartConfig\r\n}\r\n\r\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nfunction ChartContainer({\r\n  id,\r\n  className,\r\n  children,\r\n  config,\r\n  ...props\r\n}: React.ComponentProps<\"div\"> & {\r\n  config: ChartConfig\r\n  children: React.ComponentProps<\r\n    typeof RechartsPrimitive.ResponsiveContainer\r\n  >[\"children\"]\r\n}) {\r\n  const uniqueId = React.useId()\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-slot=\"chart\"\r\n        data-chart={chartId}\r\n        className={cn(\r\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  )\r\n}\r\n\r\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\r\n  const colorConfig = Object.entries(config).filter(\r\n    ([, config]) => config.theme || config.color\r\n  )\r\n\r\n  if (!colorConfig.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color =\r\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\r\n      itemConfig.color\r\n    return color ? `  --color-${key}: ${color};` : null\r\n  })\r\n  .join(\"\\n\")}\r\n}\r\n`\r\n          )\r\n          .join(\"\\n\"),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip\r\n\r\nfunction ChartTooltipContent({\r\n  active,\r\n  payload,\r\n  className,\r\n  indicator = \"dot\",\r\n  hideLabel = false,\r\n  hideIndicator = false,\r\n  label,\r\n  labelFormatter,\r\n  labelClassName,\r\n  formatter,\r\n  color,\r\n  nameKey,\r\n  labelKey,\r\n}: React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\r\n  React.ComponentProps<\"div\"> & {\r\n    hideLabel?: boolean\r\n    hideIndicator?: boolean\r\n    indicator?: \"line\" | \"dot\" | \"dashed\"\r\n    nameKey?: string\r\n    labelKey?: string\r\n  }) {\r\n  const { config } = useChart()\r\n\r\n  const tooltipLabel = React.useMemo(() => {\r\n    if (hideLabel || !payload?.length) {\r\n      return null\r\n    }\r\n\r\n    const [item] = payload\r\n    const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\r\n    const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n    const value =\r\n      !labelKey && typeof label === \"string\"\r\n        ? config[label as keyof typeof config]?.label || label\r\n        : itemConfig?.label\r\n\r\n    if (labelFormatter) {\r\n      return (\r\n        <div className={cn(\"font-medium\", labelClassName)}>\r\n          {labelFormatter(value, payload)}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (!value) {\r\n      return null\r\n    }\r\n\r\n    return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\r\n  }, [\r\n    label,\r\n    labelFormatter,\r\n    payload,\r\n    hideLabel,\r\n    labelClassName,\r\n    config,\r\n    labelKey,\r\n  ])\r\n\r\n  if (!active || !payload?.length) {\r\n    return null\r\n  }\r\n\r\n  const nestLabel = payload.length === 1 && indicator !== \"dot\"\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl\",\r\n        className\r\n      )}\r\n    >\r\n      {!nestLabel ? tooltipLabel : null}\r\n      <div className=\"grid gap-1.5\">\r\n        {payload.map((item, index) => {\r\n          const key = `${nameKey || item.name || item.dataKey || \"value\"}`\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n          const indicatorColor = color || item.payload.fill || item.color\r\n\r\n          return (\r\n            <div\r\n              key={item.dataKey}\r\n              className={cn(\r\n                \"[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5\",\r\n                indicator === \"dot\" && \"items-center\"\r\n              )}\r\n            >\r\n              {formatter && item?.value !== undefined && item.name ? (\r\n                formatter(item.value, item.name, item, index, item.payload)\r\n              ) : (\r\n                <>\r\n                  {itemConfig?.icon ? (\r\n                    <itemConfig.icon />\r\n                  ) : (\r\n                    !hideIndicator && (\r\n                      <div\r\n                        className={cn(\r\n                          \"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\",\r\n                          {\r\n                            \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                            \"w-1\": indicator === \"line\",\r\n                            \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                              indicator === \"dashed\",\r\n                            \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                          }\r\n                        )}\r\n                        style={\r\n                          {\r\n                            \"--color-bg\": indicatorColor,\r\n                            \"--color-border\": indicatorColor,\r\n                          } as React.CSSProperties\r\n                        }\r\n                      />\r\n                    )\r\n                  )}\r\n                  <div\r\n                    className={cn(\r\n                      \"flex flex-1 justify-between leading-none\",\r\n                      nestLabel ? \"items-end\" : \"items-center\"\r\n                    )}\r\n                  >\r\n                    <div className=\"grid gap-1.5\">\r\n                      {nestLabel ? tooltipLabel : null}\r\n                      <span className=\"text-muted-foreground\">\r\n                        {itemConfig?.label || item.name}\r\n                      </span>\r\n                    </div>\r\n                    {item.value && (\r\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\r\n                        {item.value.toLocaleString()}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend\r\n\r\nfunction ChartLegendContent({\r\n  className,\r\n  hideIcon = false,\r\n  payload,\r\n  verticalAlign = \"bottom\",\r\n  nameKey,\r\n}: React.ComponentProps<\"div\"> &\r\n  Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\r\n    hideIcon?: boolean\r\n    nameKey?: string\r\n  }) {\r\n  const { config } = useChart()\r\n\r\n  if (!payload?.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"flex items-center justify-center gap-4\",\r\n        verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n        className\r\n      )}\r\n    >\r\n      {payload.map((item) => {\r\n        const key = `${nameKey || item.dataKey || \"value\"}`\r\n        const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n\r\n        return (\r\n          <div\r\n            key={item.value}\r\n            className={cn(\r\n              \"[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3\"\r\n            )}\r\n          >\r\n            {itemConfig?.icon && !hideIcon ? (\r\n              <itemConfig.icon />\r\n            ) : (\r\n              <div\r\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                style={{\r\n                  backgroundColor: item.color,\r\n                }}\r\n              />\r\n            )}\r\n            {itemConfig?.label}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(\r\n  config: ChartConfig,\r\n  payload: unknown,\r\n  key: string\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined\r\n\r\n  let configLabelKey: string = key\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key as keyof typeof payload] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key as keyof typeof payload] as string\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[\r\n      key as keyof typeof payloadPayload\r\n    ] as string\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key as keyof typeof config]\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5061, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Popover({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\r\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\r\n}\r\n\r\nfunction PopoverTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\r\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\r\n}\r\n\r\nfunction PopoverContent({\r\n  className,\r\n  align = \"center\",\r\n  sideOffset = 4,\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\r\n  return (\r\n    <PopoverPrimitive.Portal>\r\n      <PopoverPrimitive.Content\r\n        data-slot=\"popover-content\"\r\n        align={align}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </PopoverPrimitive.Portal>\r\n  )\r\n}\r\n\r\nfunction PopoverAnchor({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\r\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,QAAQ,EACf,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAW,GAAG,KAAK;;;;;;AAC7D;AAEA,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,8OAAC,8KAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,QAAQ,QAAQ,EAChB,aAAa,CAAC,EACd,GAAG,OACmD;IACtD,qBACE,8OAAC,6KAAuB;kBACtB,cAAA,8OAAC,8KAAwB;YACvB,aAAU;YACV,OAAO;YACP,YAAY;YACZ,WAAW,IAAA,yHAAE,EACX,keACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,6KAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE","debugId":null}},
    {"offset": {"line": 5132, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Dashboard/components/productStats.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useMemo } from 'react'\r\nimport useSWR from 'swr'\r\nimport { CalendarIcon, ChevronDown, ChevronUp, History } from 'lucide-react'\r\nimport type { DateRange } from 'react-day-picker'\r\nimport { Bar, BarChart, CartesianGrid, XAxis } from 'recharts'\r\nimport axios from \"@/lib/axios\"\r\nimport { Button } from '@/components/ui/button'\r\nimport { Calendar } from '@/components/ui/calendar'\r\nimport {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle\r\n} from '@/components/ui/card'\r\nimport type { ChartConfig } from '@/components/ui/chart'\r\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart'\r\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\nimport { Skeleton } from '@/components/ui/skeleton'\r\n\r\ntype SaleItem = {\r\n  category: string\r\n  quantity: number\r\n  last_purchase: string\r\n}\r\n\r\ntype Product = {\r\n  name: string\r\n  qty: number\r\n  price: number\r\n  total: number\r\n  last_purchase: string | null \r\n}\r\ntype ChartData = SaleItem\r\n\r\nconst chartConfig: ChartConfig = {\r\n  quantity: {\r\n    label: 'Transactions',\r\n    color: 'var(--color-primary)'\r\n  }\r\n}\r\n\r\nconst fetcher = async (url: string) => {\r\n  const response = await axios.get(url)\r\n  return response.data?.data || response.data || []\r\n}\r\n\r\nexport default function ProductStats() {\r\n  const today = new Date()\r\n  const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1)\r\n\r\n  const [range, setRange] = useState<DateRange | undefined>({\r\n    from: startOfMonth,\r\n    to: today\r\n  })\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc' | 'recent'>('recent')\r\n\r\n  const saleItemsUrl = useMemo(() => {\r\n    const params = new URLSearchParams()\r\n    if (range?.from) params.set('from', range.from.toISOString())\r\n    if (range?.to) params.set('to', range.to.toISOString())\r\n    return `/sales-items?${params.toString()}`\r\n  }, [range])\r\n\r\n  // Keep previous data during revalidation and avoid refetch on window focus\r\n  const { data: saleItems = [], error, isLoading, isValidating } = useSWR<SaleItem[]>(\r\n    saleItemsUrl,\r\n    fetcher,\r\n    { keepPreviousData: true, revalidateOnFocus: false }\r\n  )\r\n\r\n  const chartData = useMemo(() => {\r\n    const arr = saleItems.map(si => ({\r\n      category: si.category,\r\n      quantity: Number(si.quantity) || 0,\r\n      last_purchase: si.last_purchase\r\n    }))\r\n    switch (sortOrder) {\r\n      case 'asc': return [...arr].sort((a, b) => a.quantity - b.quantity)\r\n      case 'desc': return [...arr].sort((a, b) => b.quantity - a.quantity)\r\n      case 'recent': return [...arr].sort((a, b) => new Date(b.last_purchase).getTime() - new Date(a.last_purchase).getTime())\r\n      default: return arr\r\n    }\r\n  }, [saleItems, sortOrder])\r\n\r\n  const total = useMemo(() => chartData.reduce((acc, curr) => acc + curr.quantity, 0), [chartData])\r\n\r\n  // Modal state\r\n  const [open, setOpen] = useState(false)\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null)\r\n  const [products, setProducts] = useState<Product[]>([])\r\n  const [loadingProducts, setLoadingProducts] = useState(false)\r\n  const [tableSortOrder, setTableSortOrder] = useState<'asc' | 'desc' | 'recent'>('recent')\r\n\r\n  const handleBarClick = async (data: any) => {\r\n    setSelectedCategory(data.category)\r\n    setOpen(true)\r\n\r\n    const params = new URLSearchParams()\r\n    params.set('category', data.category)\r\n    if (range?.from) params.set('from', range.from.toISOString())\r\n    if (range?.to) params.set('to', range.to.toISOString())\r\n\r\n    // Don't clear existing products — show previous list until the new one arrives.\r\n    setLoadingProducts(true)\r\n    try {\r\n      const res = await axios.get(`/products/by-category?${params.toString()}`)\r\n      // Normalize backend shape -> frontend shape used by the table\r\n      const normalized = (res.data?.data || []).map((item: any) => ({\r\n        // backend returns product_name; fall back to name if present\r\n        name: item.product_name ?? item.name ?? '',\r\n        qty: Number(item.qty ?? item.quantity ?? 0) || 0,\r\n        price: Number(item.price ?? 0) || 0,\r\n        total: Number(item.total ?? 0) || 0,\r\n        last_purchase: item.last_purchase ?? item.last_purchase_date ?? null\r\n      }))\r\n      setProducts(normalized)\r\n    } catch (err) {\r\n      console.error('Failed to fetch products by category', err)\r\n      // keep existing products on error\r\n    } finally {\r\n      setLoadingProducts(false)\r\n    }\r\n  }\r\n  // Sort table data locally based on tableSortOrder\r\n  const sortedProducts = useMemo(() => {\r\n    switch (tableSortOrder) {\r\n      case 'asc':\r\n        return [...products].sort((a, b) => a.total - b.total)\r\n      case 'desc':\r\n        return [...products].sort((a, b) => b.total - a.total)\r\n      case 'recent':\r\n      default:\r\n        // newest first by last_purchase (robust to missing values)\r\n        return [...products].sort((a, b) => {\r\n          const ta = a.last_purchase ? new Date(a.last_purchase).getTime() : 0\r\n          const tb = b.last_purchase ? new Date(b.last_purchase).getTime() : 0\r\n          return tb - ta\r\n        })\r\n    }\r\n  }, [products, tableSortOrder])\r\n\r\n  // compute total of products currently shown in modal\r\n  const productsTotal = products.reduce((acc, p) => acc + (Number(p.total) || 0), 0)\r\n\r\n  // initial empty state: show skeleton full-chart if first load and no data\r\n  const initialLoadingNoData = isLoading && saleItems.length === 0\r\n  // updating overlay while revalidating (keep previous chart visible)\r\n  const isUpdating = isValidating && saleItems.length > 0\r\n\r\n  // Note: do not return early on error — render error inside the chart area so header/footer remain visible.\r\n\r\n  return (\r\n    <>\r\n      <Card className='@container/card w-full relative'>\r\n        <CardHeader className='flex flex-col border-b @md/card:grid'>\r\n          <CardTitle>Product Analytics</CardTitle>\r\n          <CardDescription>Showing most sold categories for this month.</CardDescription>\r\n          <CardAction className='mt-2 @md/card:mt-0'>\r\n            <div className=\"flex gap-2 items-center mt-2\">\r\n              <Button onClick={() => setSortOrder('desc')} variant={sortOrder === 'desc' ? 'default' : 'outline'} size=\"sm\"><ChevronDown size={16} /></Button>\r\n              <Button onClick={() => setSortOrder('recent')} variant={sortOrder === 'recent' ? 'default' : 'outline'} size=\"sm\"><History size={16} /></Button>\r\n              <Button onClick={() => setSortOrder('asc')} variant={sortOrder === 'asc' ? 'default' : 'outline'} size=\"sm\"><ChevronUp size={16} /></Button>\r\n              <Popover>\r\n                <PopoverTrigger asChild>\r\n                  <Button variant='outline'>\r\n                    <CalendarIcon />\r\n                    {range?.from && range?.to\r\n                      ? `${range.from.toLocaleDateString()} - ${range.to.toLocaleDateString()}`\r\n                      : `${startOfMonth.toLocaleDateString()} - ${today.toLocaleDateString()}`}\r\n                  </Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent className='w-auto p-0' align='end'>\r\n                  <Calendar mode='range' defaultMonth={range?.from} selected={range} onSelect={setRange} fixedWeeks showOutsideDays disabled={{ after: today }} />\r\n                </PopoverContent>\r\n              </Popover>\r\n            </div>\r\n          </CardAction>\r\n        </CardHeader>\r\n\r\n        {/* CardContent is always rendered so header/footer don't disappear */}\r\n        <CardContent className='px-4'>\r\n          {/* Chart wrapper: relative so we can overlay the skeleton.\r\n              h-89 is preserved on the wrapper so size remains constant. */}\r\n          <div className=\"relative h-89 w-full\">\r\n            {/* Chart area (keeps previous data visible because SWR keepPreviousData is enabled).\r\n                We render either:\r\n                  - the chart (when there is chart data),\r\n                  - a \"no data\" / error message (when not loading & no data),\r\n                  - underlying empty area (chart hidden) while initial skeleton shows on top.\r\n            */}\r\n            <div className=\"absolute inset-0 z-10 flex items-center justify-center\">\r\n              {chartData.length > 0 ? (\r\n                <div className=\"w-full h-full\">\r\n                  {/* ChartContainer sized to fill the area */}\r\n                  <ChartContainer config={chartConfig} className='aspect-auto h-89 w-full'>\r\n                    <BarChart data={chartData} margin={{ left: 12, right: 12 }}>\r\n                      <CartesianGrid vertical={false} />\r\n                      <XAxis dataKey='category' tickLine={false} axisLine={false} tickMargin={8} minTickGap={20} />\r\n                      <ChartTooltip content={<ChartTooltipContent className='w-[150px]' nameKey='quantity' labelFormatter={v => v} />} />\r\n                      <Bar dataKey='quantity' fill={`var(--color-quantity)`} radius={4} onClick={handleBarClick} />\r\n                    </BarChart>\r\n                  </ChartContainer>\r\n                </div>\r\n              ) : (\r\n                // show helpful messages when there is no chart data\r\n                <div className=\"w-full h-full flex items-center justify-center px-4\">\r\n                  {error ? (\r\n                    <div className=\"text-sm text-red-600\">Error loading product stats.</div>\r\n                  ) : (!isLoading && saleItems.length === 0) ? (\r\n                    <div className=\"text-sm text-gray-600\">No data for the selected range.</div>\r\n                  ) : (\r\n                    // keep empty while initial skeleton (below) handles first-load UX\r\n                    <div className=\"w-full h-full\" />\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Skeleton overlay — used both for initial loading (no data) and for updates.\r\n                Overlay sits above chart (z-20), fades in/out using transition-opacity.\r\n                pointer-events-none ensures underlying chart remains interactive if needed. */}\r\n            <div\r\n              aria-hidden\r\n              className={`absolute inset-0 z-20 flex items-end px-4 pointer-events-none transition-opacity duration-300 ease-in-out ${(isUpdating || initialLoadingNoData) ? 'opacity-100' : 'opacity-0'\r\n                }`}\r\n            >\r\n              <div className=\"flex w-full h-full items-end gap-3\">\r\n                {Array.from({ length: Math.max(6, chartData.length || 6) }).map((_, i) => {\r\n                  // create some height variety for a natural skeleton chart\r\n                  const heights = [28, 44, 60, 36, 52, 40]\r\n                  const pct = heights[i % heights.length]\r\n                  return (\r\n                    <div key={i} className=\"flex-1 flex items-end justify-center\">\r\n                      <div className=\"w-3/4\">\r\n                        <Skeleton className=\"rounded-t-md animate-pulse\" style={{ height: `${pct}%` }} />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n\r\n        <CardFooter className='border-t'>\r\n          <div className='text-sm'>\r\n            Total sold: <span className='font-semibold'>{total.toLocaleString()}</span>\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n\r\n      {/* Modal with filter buttons + scroll area */}\r\n      <Dialog open={open} onOpenChange={setOpen}>\r\n        <DialogContent className=\"w-full max-w-5xl sm:max-w-4xl md:max-w-3xl lg:max-w-5xl xl:max-w-6xl\">\r\n          <DialogHeader className=\"flex flex-row items-center justify-between\">\r\n            <DialogTitle className=\"text-lg font-semibold items-center\">\r\n              {selectedCategory ? `${selectedCategory} — Total Amount: ₱ ${productsTotal.toLocaleString()}` : `₱ ${productsTotal.toLocaleString()}`}\r\n            </DialogTitle>\r\n            <div className=\"flex gap-2 pr-4\">\r\n              <Button\r\n                onClick={() => setTableSortOrder('desc')}\r\n                variant={tableSortOrder === 'desc' ? 'default' : 'outline'}\r\n                size=\"icon\"\r\n                className=\"w-8 h-8\"\r\n              >\r\n                <ChevronDown size={16} />\r\n              </Button>\r\n              <Button\r\n                onClick={() => setTableSortOrder('recent')}\r\n                variant={tableSortOrder === 'recent' ? 'default' : 'outline'}\r\n                size=\"icon\"\r\n                className=\"w-8 h-8\"\r\n              >\r\n                <History size={16} />\r\n              </Button>\r\n              <Button\r\n                onClick={() => setTableSortOrder('asc')}\r\n                variant={tableSortOrder === 'asc' ? 'default' : 'outline'}\r\n                size=\"icon\"\r\n                className=\"w-8 h-8\"\r\n              >\r\n                <ChevronUp size={16} />\r\n              </Button>\r\n            </div>\r\n          </DialogHeader>\r\n\r\n          {/* Table area */}\r\n          <ScrollArea className=\"h-80 mt-4 rounded-md border bg-white\">\r\n            {/* If we're loading and have no previous products, show loading message */}\r\n            {loadingProducts && products.length === 0 && (\r\n              <div className=\"p-4 text-center text-gray-600\">Loading products…</div>\r\n            )}\r\n\r\n            {/* Show existing / fetched table if we have products */}\r\n            {sortedProducts.length > 0 ? (\r\n              <>\r\n                {/* optional small loader banner while updating */}\r\n                {loadingProducts && (\r\n                  <div className=\"p-2 text-sm text-gray-600 border-b\">Updating products…</div>\r\n                )}\r\n                <table className=\"w-full text-sm border-collapse\">\r\n                  <thead className=\"bg-gray-100 sticky top-0\">\r\n                    <tr>\r\n                      <th className=\"p-2 border text-left font-semibold\">Product</th>\r\n                      <th className=\"p-2 border text-center font-semibold\">Qty</th>\r\n                      <th className=\"p-2 border text-center font-semibold\">Price</th>\r\n                      <th className=\"p-2 border text-center font-semibold\">Total</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {sortedProducts.map((p, idx) => (\r\n                      <tr key={idx} className=\"hover:bg-gray-50 transition\">\r\n                        <td className=\"p-2 border\">{p.name}</td>\r\n                        <td className=\"p-2 border text-center\">{p.qty}</td>\r\n                        <td className=\"p-2 border text-left\">₱ {p.price}</td>\r\n                        <td className=\"p-2 border text-left\">₱ {p.total}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            ) : (\r\n              // If not loading and no products, show empty state\r\n              !loadingProducts && (\r\n                <p className=\"p-4 text-center text-gray-500\">No products found for this category.</p>\r\n              )\r\n            )}\r\n          </ScrollArea>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5897, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Dashboard/components/salesStats.tsx"],"sourcesContent":["'use client'\r\n\r\nimport * as React from 'react'\r\nimport useSWR from 'swr'\r\nimport axios from \"@/lib/axios\";\r\nimport { CartesianGrid, Line, LineChart, XAxis } from 'recharts'\r\nimport { CalendarIcon, List, ChevronDown, ChevronUp } from 'lucide-react'\r\nimport type { DateRange } from 'react-day-picker'\r\n\r\nimport { Button } from '@/components/ui/button'\r\nimport { Calendar } from '@/components/ui/calendar'\r\nimport {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle\r\n} from '@/components/ui/card'\r\nimport type { ChartConfig } from '@/components/ui/chart'\r\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart'\r\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\r\nimport { Skeleton } from '@/components/ui/skeleton'\r\n\r\ntype Sale = {\r\n  created_at: string\r\n  total_purchase: number\r\n}\r\n\r\ntype ChartData = {\r\n  date: string\r\n  customer: number\r\n}\r\n\r\nconst chartConfig: ChartConfig = {\r\n  customer: {\r\n    label: 'Total',\r\n    color: 'var(--color-primary)'\r\n  }\r\n}\r\n\r\nconst fetcher = async (url: string) => {\r\n  const response = await axios.get(url);\r\n  return response.data?.data || []\r\n}\r\n\r\n// Manila offset in ms\r\nconst MANILA_OFFSET_MS = 8 * 60 * 60 * 1000\r\n\r\n// Return UTC ISO that corresponds to Manila 00:00:00.000 for the provided date (inclusive start).\r\n// Caller should pass a Date representing the selected local day (from calendar).\r\nfunction manilaDayStartUTCiso(d: Date) {\r\n  const manilaLocal = new Date(d.getTime() + MANILA_OFFSET_MS)\r\n  const y = manilaLocal.getUTCFullYear()\r\n  const m = manilaLocal.getUTCMonth()\r\n  const day = manilaLocal.getUTCDate()\r\n  const manilaMidnightUTCms = Date.UTC(y, m, day, 0, 0, 0) - MANILA_OFFSET_MS\r\n  return new Date(manilaMidnightUTCms).toISOString() // inclusive start\r\n}\r\n\r\n// Return UTC ISO for Manila next-day 00:00:00.000 (exclusive end).\r\n// Use this as `to` so backend can use created_at < to and include the whole last Manila day.\r\nfunction manilaNextDayStartUTCiso(d: Date) {\r\n  const manilaLocal = new Date(d.getTime() + MANILA_OFFSET_MS)\r\n  const y = manilaLocal.getUTCFullYear()\r\n  const m = manilaLocal.getUTCMonth()\r\n  const day = manilaLocal.getUTCDate()\r\n  const manilaMidnightUTCms = Date.UTC(y, m, day, 0, 0, 0) - MANILA_OFFSET_MS\r\n  const nextMidnight = manilaMidnightUTCms + 24 * 60 * 60 * 1000\r\n  return new Date(nextMidnight).toISOString() // exclusive end\r\n}\r\n\r\n// Convert an ISO created_at (UTC) to a Manila YYYY-MM-DD string\r\nfunction createdAtToManilaYmd(iso: string) {\r\n  const d = new Date(iso) // UTC time\r\n  const manila = new Date(d.getTime() + MANILA_OFFSET_MS)\r\n  const y = manila.getUTCFullYear()\r\n  const m = String(manila.getUTCMonth() + 1).padStart(2, '0')\r\n  const day = String(manila.getUTCDate()).padStart(2, '0')\r\n  return `${y}-${m}-${day}`\r\n}\r\n\r\n// iterate dates inclusive (local dates)\r\nfunction eachDayInclusive(from: Date, to: Date) {\r\n  const arr: Date[] = []\r\n  const cur = new Date(from.getFullYear(), from.getMonth(), from.getDate())\r\n  const end = new Date(to.getFullYear(), to.getMonth(), to.getDate())\r\n  while (cur <= end) {\r\n    arr.push(new Date(cur))\r\n    cur.setDate(cur.getDate() + 1)\r\n  }\r\n  return arr\r\n}\r\n\r\n// format YYYY-MM-DD from local Date\r\nfunction ymd(date: Date) {\r\n  const y = date.getFullYear()\r\n  const m = String(date.getMonth() + 1).padStart(2, '0')\r\n  const d = String(date.getDate()).padStart(2, '0')\r\n  return `${y}-${m}-${d}`\r\n}\r\n\r\n// parse YYYY-MM-DD into a local Date (avoid timezone shifts)\r\nfunction parseYmdToLocalDate(ymdStr: string) {\r\n  const [y, m, d] = ymdStr.split('-').map(Number)\r\n  return new Date(y, m - 1, d)\r\n}\r\n\r\nexport default function SalesStats() {\r\n  const today = new Date()\r\n  const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1)\r\n  const [range, setRange] = React.useState<DateRange | undefined>({\r\n    from: startOfMonth,\r\n    to: today\r\n  })\r\n  const [sortOrder, setSortOrder] = React.useState<'asc' | 'desc' | 'normal'>('normal')\r\n\r\n  // build URL with from/to when range selected (convert to Manila day boundaries -> UTC ISO)\r\n  // pass from = Manila 00:00 (inclusive), to = next Manila 00:00 (exclusive) so backend can use gte / lt\r\n  const salesUrl = React.useMemo(() => {\r\n    if (!range?.from || !range?.to) return '/sales'\r\n    const fromIso = manilaDayStartUTCiso(range.from)\r\n    const toIso = manilaNextDayStartUTCiso(range.to) // exclusive end: includes the whole `range.to` Manila day\r\n    return `/sales?from=${encodeURIComponent(fromIso)}&to=${encodeURIComponent(toIso)}`\r\n  }, [range?.from?.getTime(), range?.to?.getTime()])\r\n\r\n  // Keep previous data during revalidation to avoid flicker\r\n  const { data: sales = [], error, isLoading, isValidating } = useSWR<Sale[]>(\r\n    salesUrl,\r\n    fetcher,\r\n    { keepPreviousData: true, revalidateOnFocus: false }\r\n  )\r\n\r\n  // Group by Manila date (YYYY-MM-DD)\r\n  const groupedByDateMap = React.useMemo(() => {\r\n    const map = new Map<string, number>()\r\n    sales.forEach(sale => {\r\n      const key = createdAtToManilaYmd(sale.created_at)\r\n      map.set(key, (map.get(key) || 0) + (sale.total_purchase || 0))\r\n    })\r\n    return map\r\n  }, [sales])\r\n\r\n  // Build full date series based on selected range (or fallback to data date span)\r\n  const chartSeries = React.useMemo(() => {\r\n    let fromDate: Date\r\n    let toDate: Date\r\n    if (range?.from && range?.to) {\r\n      fromDate = new Date(range.from.getFullYear(), range.from.getMonth(), range.from.getDate())\r\n      toDate = new Date(range.to.getFullYear(), range.to.getMonth(), range.to.getDate())\r\n    } else if (sales.length > 0) {\r\n      const keys = Array.from(groupedByDateMap.keys()).sort()\r\n      const min = parseYmdToLocalDate(keys[0])\r\n      const max = parseYmdToLocalDate(keys[keys.length - 1])\r\n      fromDate = new Date(min.getFullYear(), min.getMonth(), min.getDate())\r\n      toDate = new Date(max.getFullYear(), max.getMonth(), max.getDate())\r\n    } else {\r\n      fromDate = new Date(today.getFullYear(), today.getMonth(), today.getDate())\r\n      toDate = fromDate\r\n    }\r\n\r\n    const days = eachDayInclusive(fromDate, toDate)\r\n    return days.map(d => {\r\n      const key = ymd(d) // YYYY-MM-DD (Manila/local day keys)\r\n      return {\r\n        date: key,\r\n        customer: groupedByDateMap.get(key) || 0\r\n      }\r\n    })\r\n  }, [range?.from?.getTime(), range?.to?.getTime(), sales, groupedByDateMap, today])\r\n\r\n  // --- NEW: compute chartDisplayData based on sortOrder ---\r\n  const chartDisplayData = React.useMemo(() => {\r\n    if (sortOrder === 'normal') return chartSeries\r\n    const arr = [...chartSeries]\r\n    if (sortOrder === 'asc') {\r\n      arr.sort((a, b) => a.customer - b.customer)\r\n    } else if (sortOrder === 'desc') {\r\n      arr.sort((a, b) => b.customer - a.customer)\r\n    }\r\n    return arr\r\n  }, [chartSeries, sortOrder])\r\n  // -------------------------------------------------------\r\n\r\n  // sortedDataForTable (affects table/summaries only)\r\n  const sortedDataForTable = React.useMemo(() => {\r\n    let arr = [...chartSeries]\r\n    if (sortOrder === 'asc') arr.sort((a, b) => a.customer - b.customer)\r\n    else if (sortOrder === 'desc') arr.sort((a, b) => b.customer - a.customer)\r\n    return arr\r\n  }, [chartSeries, sortOrder])\r\n\r\n  // total sums the filtered chartSeries values\r\n  const total = React.useMemo(\r\n    () => chartSeries.reduce((acc, curr) => acc + curr.customer, 0),\r\n    [chartSeries]\r\n  )\r\n\r\n  // Detect \"empty\" period: all points are zero\r\n  const isEmptyPeriod = React.useMemo(() => {\r\n    return chartSeries.length > 0 && chartSeries.every(pt => (pt.customer ?? 0) === 0)\r\n  }, [chartSeries])\r\n\r\n  const initialLoadingNoData = isLoading && sales.length === 0\r\n  const isUpdating = isValidating && sales.length > 0\r\n\r\n  if (error && !sales.length) return <div>Error loading sales data.</div>\r\n\r\n  return (\r\n    <Card className='@container/card w-full'>\r\n      <CardHeader className='flex flex-col border-b @md/card:grid'>\r\n        <CardTitle>Sales Chart</CardTitle>\r\n        <CardDescription>Filter total sales by date range</CardDescription>\r\n        <CardAction className='mt-2 @md/card:mt-0'>\r\n          <div className=\"flex gap-2 items-center mt-2\">\r\n            <Button\r\n              variant={sortOrder === 'desc' ? 'default' : 'outline'}\r\n              size=\"sm\"\r\n              onClick={() => setSortOrder('desc')}\r\n              aria-label=\"Sort Descending\"\r\n            >\r\n              <ChevronDown size={16} />\r\n            </Button>\r\n            <Button\r\n              variant={sortOrder === 'normal' ? 'default' : 'outline'}\r\n              size=\"sm\"\r\n              onClick={() => setSortOrder('normal')}\r\n              aria-label=\"Follow Order\"\r\n            >\r\n              <List size={16} />\r\n            </Button>\r\n            <Button\r\n              variant={sortOrder === 'asc' ? 'default' : 'outline'}\r\n              size=\"sm\"\r\n              onClick={() => setSortOrder('asc')}\r\n              aria-label=\"Sort Ascending\"\r\n            >\r\n              <ChevronUp size={16} />\r\n            </Button>\r\n            <Popover>\r\n              <PopoverTrigger asChild>\r\n                <Button variant='outline'>\r\n                  <CalendarIcon />\r\n                  {range?.from && range?.to\r\n                    ? `${range.from.toLocaleDateString()} - ${range.to.toLocaleDateString()}`\r\n                    : `${startOfMonth.toLocaleDateString()} - ${today.toLocaleDateString()}`}\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent className='w-auto overflow-hidden p-0' align='end'>\r\n                <Calendar\r\n                  className='w-full'\r\n                  mode='range'\r\n                  defaultMonth={range?.from}\r\n                  selected={range}\r\n                  onSelect={setRange}\r\n                  fixedWeeks\r\n                  showOutsideDays\r\n                  disabled={{\r\n                    after: today\r\n                  }}\r\n                />\r\n              </PopoverContent>\r\n            </Popover>\r\n          </div>\r\n        </CardAction>\r\n      </CardHeader>\r\n\r\n      <CardContent className='px-4'>\r\n        {/* Chart area: keep size fixed h-89 */}\r\n        <div className=\"relative h-89 w-full\">\r\n          {/* Initial full-screen skeleton when first load and no previous data */}\r\n          {initialLoadingNoData && (\r\n            <div className=\"absolute inset-0 flex items-end px-4\">\r\n              <div className=\"flex w-full h-full items-end gap-3\">\r\n                {Array.from({ length: Math.max(6, chartSeries.length || 6) }).map((_, i) => {\r\n                  const heights = [28, 44, 60, 36, 52, 40]\r\n                  const pct = heights[i % heights.length]\r\n                  return (\r\n                    <div key={i} className=\"flex-1 flex items-end justify-center\">\r\n                      <div className=\"w-3/4\">\r\n                        <Skeleton className=\"rounded-t-md animate-pulse\" style={{ height: `${pct}%` }} />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* If selected period has no sales (all zeros), show centered muted message */}\r\n          {!initialLoadingNoData && isEmptyPeriod && (\r\n            <div className=\"absolute inset-0 flex items-center justify-center\">\r\n              <div className=\"text-center text-sm text-gray-500\">\r\n                No sales found for the selected period\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Chart (render when not initial-loading and not empty-period). Keeps previous data during revalidation. */}\r\n          {!initialLoadingNoData && !isEmptyPeriod && (\r\n            <div className=\"absolute inset-0 w-full h-full\">\r\n              <ChartContainer config={chartConfig} className='aspect-auto h-89 w-full'>\r\n                <LineChart\r\n                  accessibilityLayer\r\n                  data={chartDisplayData} // <-- use sorted/normal display data\r\n                  margin={{ left: 12, right: 12 }}\r\n                >\r\n                  <CartesianGrid vertical={false} />\r\n                  <XAxis\r\n                    dataKey=\"date\"\r\n                    tickLine={false}\r\n                    axisLine={false}\r\n                    tickMargin={8}\r\n                    minTickGap={20}\r\n                    tickFormatter={value => {\r\n                      const date = parseYmdToLocalDate(String(value))\r\n                      return date.toLocaleDateString(undefined, {\r\n                        month: 'short', // or 'long' if you want full month\r\n                        day: 'numeric'\r\n                      })\r\n                    }}\r\n                  />\r\n                  <ChartTooltip\r\n                    content={\r\n                      <ChartTooltipContent\r\n                        className='w-[200px]'\r\n                        nameKey='customer'\r\n                        labelFormatter={value =>\r\n                          parseYmdToLocalDate(String(value)).toLocaleDateString(undefined, {\r\n                            month: 'short',\r\n                            day: 'numeric',\r\n                            year: 'numeric'\r\n                          })\r\n                        }\r\n                      />\r\n                    }\r\n                  />\r\n                  <Line\r\n                    dataKey=\"customer\"\r\n                    type=\"monotone\"\r\n                    stroke={`var(--color-customer)`}\r\n                    strokeWidth={2}\r\n                    dot={false}\r\n                  />\r\n                </LineChart>\r\n              </ChartContainer>\r\n            </div>\r\n          )}\r\n\r\n          {/* Overlay skeleton when revalidating (keeps previous chart visible underneath) */}\r\n          {!initialLoadingNoData && isUpdating && !isEmptyPeriod && (\r\n            <div\r\n              aria-hidden\r\n              className=\"absolute inset-0 flex items-end px-4 pointer-events-none transition-opacity duration-300 ease-in-out z-20\"\r\n            >\r\n              <div className=\"flex w-full h-full items-end gap-3\">\r\n                {Array.from({ length: Math.max(6, chartSeries.length || 6) }).map((_, i) => {\r\n                  const heights = [28, 44, 60, 36, 52, 40]\r\n                  const pct = heights[i % heights.length]\r\n                  return (\r\n                    <div key={i} className=\"flex-1 flex items-end justify-center\">\r\n                      <div className=\"w-3/4\">\r\n                        <Skeleton className=\"rounded-t-md animate-pulse\" style={{ height: `${pct}%` }} />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n\r\n      <CardFooter className='border-t'>\r\n        <div className='text-sm'>\r\n          You had <span className='font-semibold'>₱ {total.toLocaleString()}</span> total sales for the selected period.\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6522, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/Dashboard/dashboardScreen.tsx"],"sourcesContent":["import Stats from './components/stats';\r\nimport ProductStats from './components/productStats';\r\nimport SalesStats from './components/salesStats';\r\n\r\nexport default function DashboardScreen() {\r\n    return (\r\n        <div className=\"flex flex-col p-6 h-full gap-3\">\r\n            <div className=\"flex-[7%]\">\r\n                <h1 className=\"font-extrabold text-4xl\">Dashboard</h1>\r\n                <p>Welcome Back! Here's your business overview!</p>\r\n            </div>\r\n            <div className=\"flex-[20%]\"><Stats /></div>\r\n            <div className=\"flex-[78%] flex gap-3 flex-col\">\r\n                <div className=\"flex-[50%] mb-4\"><SalesStats /></div>\r\n                <div className=\"flex-[50%] mb-2\"><ProductStats /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACpB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8OAAC;kCAAE;;;;;;;;;;;;0BAEP,8OAAC;gBAAI,WAAU;0BAAa,cAAA,8OAAC,iLAAK;;;;;;;;;;0BAClC,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;kCAAkB,cAAA,8OAAC,sLAAU;;;;;;;;;;kCAC5C,8OAAC;wBAAI,WAAU;kCAAkB,cAAA,8OAAC,wLAAY;;;;;;;;;;;;;;;;;;;;;;AAI9D","debugId":null}},
    {"offset": {"line": 6618, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/StockMovements/components/addProductModal.tsx"],"sourcesContent":["'use client'\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { CheckIcon, ChevronsUpDownIcon } from 'lucide-react'\r\n\r\nimport { Button } from '@/components/ui/button'\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from '@/components/ui/command'\r\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\r\nimport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from '@/components/ui/dialog'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Label } from '@/components/ui/label'\r\nimport { cn } from '@/lib/utils'\r\nimport Fuse from 'fuse.js'\r\nimport { useProducts } from '@/hooks/global/fetching/useProducts'\r\n\r\nconst FALLBACK_PRODUCTS = [\r\n  { value: 'widget-a', label: 'Widget A' },\r\n  { value: 'widget-b', label: 'Widget B' },\r\n  { value: 'gadget-x', label: 'Gadget X' },\r\n  { value: 'gadget-y', label: 'Gadget Y' },\r\n  { value: 'part-123', label: 'Part 123' },\r\n]\r\n\r\ntype Props = { onAdd: (p: { name: string; qty: number; unitPrice: number; productId?: string | number | null }) => void }\r\n\r\nexport default function AddProductModal({ onAdd }: Props) {\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [popOpen, setPopOpen] = useState(false)\r\n  const [query, setQuery] = useState('')\r\n  const [selected, setSelected] = useState<string>('') // product id or fallback value\r\n  const [qty, setQty] = useState<number>(1)\r\n  const [unitPrice, setUnitPrice] = useState<number | ''>('')\r\n  const qtyRef = useRef<HTMLInputElement | null>(null)\r\n\r\n  const triggerRef = useRef<HTMLButtonElement | null>(null)\r\n  const [triggerWidth, setTriggerWidth] = useState<number | null>(null)\r\n\r\n  const { products: apiProducts, loading, error } = useProducts()\r\n\r\n  // normalize product list for the command component\r\n  const productItems = useMemo(\r\n    () =>\r\n      apiProducts && apiProducts.length > 0\r\n        ? apiProducts.map((p) => ({ value: String(p.id), label: p.name ?? `#${p.id}` }))\r\n        : FALLBACK_PRODUCTS,\r\n    [apiProducts]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (dialogOpen && selected) {\r\n      setTimeout(() => qtyRef.current?.focus(), 60)\r\n    }\r\n  }, [dialogOpen, selected])\r\n\r\n  // measure trigger width so popover can match it\r\n  useLayoutEffect(() => {\r\n    const update = () => setTriggerWidth(triggerRef.current?.offsetWidth ?? null)\r\n    update()\r\n    window.addEventListener('resize', update)\r\n    return () => window.removeEventListener('resize', update)\r\n  }, [])\r\n\r\n  // when the popover opens ensure width is up-to-date\r\n  useEffect(() => {\r\n    if (popOpen) {\r\n      setTriggerWidth(triggerRef.current?.offsetWidth ?? null)\r\n    }\r\n  }, [popOpen, selected])\r\n\r\n  // robust, memoized filtering (normalizes unicode and checks both label and value)\r\n  const fuse = useMemo(() => {\r\n    return new Fuse(productItems, {\r\n      keys: ['label'],\r\n      threshold: 0.30, // adjust fuzziness if needed\r\n      ignoreLocation: true,\r\n      minMatchCharLength: 1,\r\n    })\r\n  }, [productItems])\r\n\r\n  const filtered = useMemo(() => {\r\n    const qRaw = query.trim()\r\n    if (!qRaw) return productItems\r\n\r\n    const tokens = qRaw\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter(Boolean)\r\n\r\n    const strictMatches = productItems.filter((p) => {\r\n      const label = String(p.label ?? '').normalize('NFKC').toLowerCase()\r\n      return tokens.every((t) => label.includes(t))\r\n    })\r\n\r\n    if (strictMatches.length > 0) return strictMatches\r\n\r\n    // Fuse will only search label (product name)\r\n    return fuse.search(qRaw).map((r) => r.item)\r\n  }, [fuse, query, productItems])\r\n\r\n  // DEBUG: log what the modal sees so we can diagnose \"No product found\" even though network returned data\r\n  useEffect(() => {\r\n    try {\r\n      console.log('[AddProductModal] apiProducts.length=', apiProducts?.length ?? 0)\r\n      console.log('[AddProductModal] sample apiProducts=', (apiProducts ?? []).slice(0, 5))\r\n      console.log('[AddProductModal] productItems.length=', productItems.length)\r\n      console.log('[AddProductModal] sample productItems=', productItems.slice(0, 8))\r\n      console.log('[AddProductModal] query=', JSON.stringify(query), 'filtered.length=', filtered.length)\r\n      console.log('[AddProductModal] sample filtered=', filtered.slice(0, 8))\r\n    } catch (e) {\r\n      console.error('[AddProductModal] debug error', e)\r\n    }\r\n  }, [apiProducts, productItems, query, filtered])\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: React.FormEvent) => {\r\n      e.preventDefault()\r\n      if (!selected || qty < 1 || unitPrice === '' || Number(unitPrice) < 0) return\r\n      const label = productItems.find((p) => p.value === selected)?.label ?? selected\r\n      // if selection corresponds to an API product, pass its id along\r\n      const apiId = apiProducts?.find((ap: any) => String(ap.id) === selected)?.id ?? null\r\n      if (typeof onAdd === 'function') {\r\n        onAdd({ name: label, qty, unitPrice: Number(unitPrice), productId: apiId })\r\n      } else {\r\n        try {\r\n          window.dispatchEvent(\r\n            new CustomEvent('stock:addProduct', {\r\n              detail: { name: label, qty, unitPrice: Number(unitPrice), productId: apiId },\r\n            })\r\n          )\r\n        } catch {\r\n          // noop\r\n        }\r\n      }\r\n\r\n      setSelected('')\r\n      setQty(1)\r\n      setUnitPrice('')\r\n      setQuery('')\r\n      setDialogOpen(false)\r\n    },\r\n    [selected, qty, unitPrice, productItems, onAdd]\r\n  )\r\n  useEffect(() => {\r\n    if (error) {\r\n      // Log the error coming from useProducts to the browser console\r\n      console.error('useProducts error:', error)\r\n    }\r\n  }, [error])\r\n  return (\r\n    <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button variant=\"outline\" className=\"h-8\">\r\n          Add\r\n        </Button>\r\n      </DialogTrigger>\r\n\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogHeader>\r\n            <DialogTitle>Add Product</DialogTitle>\r\n            <div className=\"text-sm text-muted-foreground\">Search and add a product with quantity and unit price.</div>\r\n          </DialogHeader>\r\n\r\n          <div className=\"grid gap-4 py-2\">\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"product-combobox\">Product</Label>\r\n\r\n              <Popover open={popOpen} onOpenChange={setPopOpen}>\r\n                <PopoverTrigger asChild>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    role=\"combobox\"\r\n                    aria-expanded={popOpen}\r\n                    className=\"w-full justify-between text-left overflow-hidden\"\r\n                    aria-label=\"Product combobox\"\r\n                    id=\"product-combobox\"\r\n                    ref={triggerRef}\r\n                    type=\"button\"\r\n                  >\r\n                    <span className=\"flex-1 min-w-0 truncate pr-2 text-left\">\r\n                      {selected ? productItems.find((p) => p.value === selected)?.label ?? selected : 'Select product...'}\r\n                    </span>\r\n                    <ChevronsUpDownIcon className=\"opacity-50\" />\r\n                  </Button>\r\n                </PopoverTrigger>\r\n\r\n                <PopoverContent\r\n                  className=\"p-3 min-w-[280px] max-w-[640px]\"\r\n                  align=\"start\"\r\n                  side=\"bottom\"\r\n                  style={triggerWidth ? { width: `${triggerWidth}px` } : undefined}\r\n                >\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Search product...\"\r\n                      className=\"h-9 mb-2\"\r\n                      value={query}\r\n                      onChange={(e) => setQuery(e.target.value)}\r\n                      autoFocus\r\n                    />\r\n\r\n                    {loading ? (\r\n                      <div className=\"p-2 text-sm\">Loading products...</div>\r\n                    ) : filtered.length === 0 ? (\r\n                      <div className=\"p-2 text-sm text-muted-foreground\">\r\n                        {`No product found for \"${query}\". products=${productItems.length} filtered=${filtered.length}`}\r\n                      </div>\r\n                    ) : (\r\n                      <ul className=\"max-h-56 overflow-auto divide-y rounded-md bg-background\">\r\n                        {filtered.map((it) => (\r\n                          <li key={it.value}>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"w-full text-left px-3 py-2 hover:bg-muted-foreground/5 flex items-center gap-3\"\r\n                              onClick={() => {\r\n                                setSelected(it.value)\r\n                                setPopOpen(false)\r\n                                setTimeout(() => qtyRef.current?.focus(), 60)\r\n                              }}\r\n                            >\r\n                              <span className=\"flex-1 truncate\">{String(it.label)}</span>\r\n\r\n                            </button>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                </PopoverContent>\r\n              </Popover>\r\n            </div>\r\n\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"qty\">Quantity</Label>\r\n              <Input\r\n                id=\"qty\"\r\n                ref={qtyRef}\r\n                type=\"number\"\r\n                min={1}\r\n                value={String(qty)}\r\n                onChange={(e) => setQty(Math.max(1, Number(e.target.value) || 1))}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"unit-price\">Unit price (purchased)</Label>\r\n              <Input\r\n                id=\"unit-price\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min={0}\r\n                value={unitPrice === '' ? '' : String(unitPrice)}\r\n                onChange={(e) => setUnitPrice(e.target.value === '' ? '' : Math.max(0, Number(e.target.value)))}\r\n                placeholder=\"0.00\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <DialogFooter>\r\n            <DialogClose asChild>\r\n              <Button variant=\"outline\">Cancel</Button>\r\n            </DialogClose>\r\n            <Button type=\"submit\" disabled={!selected || qty < 1 || unitPrice === ''}>\r\n              Add\r\n            </Button>\r\n          </DialogFooter>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7116, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/StockMovements/components/addStockModal.tsx"],"sourcesContent":["'use client'\r\nimport { useState, useEffect } from \"react\";\r\nimport { ChevronLeft as ChevronLeftIcon, Plus, X, Calendar as CalendarIcon } from \"lucide-react\";\r\nimport { useSWRConfig } from 'swr'\r\nimport axios from \"@/lib/axios\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n    Dialog,\r\n    DialogClose,\r\n    DialogContent,\r\n    DialogDescription,\r\n    DialogFooter,\r\n    DialogHeader,\r\n    DialogTitle,\r\n    DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Calendar } from \"@/components/ui/calendar\";\r\nimport {\r\n    Card,\r\n    CardAction,\r\n    CardContent,\r\n    CardDescription,\r\n    CardHeader,\r\n    CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport AddProductModal from \"./addProductModal\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableFooter,\r\n    TableHead,\r\n    TableHeader,\r\n    TableRow\r\n} from '@/components/ui/table'\r\n\r\ntype ProductItem = { id: string; productId?: string | number | null; name: string; qty: number; unitPrice: number };\r\ntype StockPayload = { company: string; date: string; price: number; products: ProductItem[] };\r\ntype Props = { onSave?: (payload: StockPayload) => void };\r\n\r\nexport default function AddStockModal({ onSave }: Props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [month, setMonth] = useState<Date | undefined>(new Date());\r\n    useEffect(() => {\r\n        const handler = (e: Event) => {\r\n            const ce = e as CustomEvent<{ name: string; qty: number; unitPrice: number }>;\r\n            if (ce?.detail) {\r\n                handleAddProduct(ce.detail)\r\n            }\r\n        }\r\n        window.addEventListener('stock:addProduct', handler as EventListener)\r\n        return () => window.removeEventListener('stock:addProduct', handler as EventListener)\r\n    }, [])\r\n\r\n    const [company, setCompany] = useState(\"\");\r\n    const [date, setDate] = useState<Date | undefined>(undefined);\r\n    const [price, setPrice] = useState<number | \"\">(\"\");\r\n    const [products, setProducts] = useState<ProductItem[]>([])\r\n    const [saving, setSaving] = useState(false);\r\n    const { mutate } = useSWRConfig()\r\n\r\n    const handleSave = async () => {\r\n        if (!company || products.length === 0) {\r\n            // minimal validation\r\n            alert('Company and at least one product are required.')\r\n            return\r\n        }\r\n\r\n        const payload = {\r\n            company_name: company,\r\n            date: date ? date.toISOString() : new Date().toISOString(),\r\n            total: Number(price) || 0,\r\n            items: products.map(p => ({\r\n                product_id: p.productId ?? null,\r\n                purchased_price: p.unitPrice ?? (Number(price) || 0),\r\n                quantity: p.qty\r\n            }))\r\n        }\r\n\r\n        try {\r\n            setSaving(true)\r\n            const endpoint = `/stock-transactions`;\r\n            const res = await axios.post(endpoint, payload);\r\n            const json = res.data;\r\n            if (res.status >= 400) throw new Error(json?.message || json?.error || 'Save failed')\r\n\r\n            // notify parent if needed\r\n            onSave?.({\r\n                company,\r\n                date: date ? date.toISOString() : new Date().toISOString(),\r\n                price: Number(price) || 0,\r\n                products,\r\n            })\r\n\r\n            // revalidate stock transactions SWR cache\r\n            mutate(endpoint)\r\n\r\n            // reset and close\r\n            setCompany(\"\")\r\n            setDate(undefined)\r\n            setPrice(\"\")\r\n            setProducts([])\r\n            setOpen(false)\r\n        } catch (err: any) {\r\n            console.error('save stock error', err)\r\n            alert(`Save failed: ${err?.message ?? err}`)\r\n        } finally {\r\n            setSaving(false)\r\n        }\r\n    };\r\n\r\n    // Merge same product by name: increase qty and update unitPrice to the newly provided one\r\n    const handleAddProduct = (p: { name: string; qty: number; unitPrice: number; productId?: string | number | null }) => {\r\n        setProducts(prev => {\r\n            // prefer matching by productId when available, otherwise fallback to name\r\n            const idx = prev.findIndex(x => (p.productId != null ? x.productId === p.productId : x.name === p.name))\r\n            if (idx !== -1) {\r\n                const updated = [...prev]\r\n                updated[idx] = {\r\n                    ...updated[idx],\r\n                    qty: updated[idx].qty + p.qty,\r\n                    unitPrice: p.unitPrice,\r\n                    productId: updated[idx].productId ?? p.productId\r\n                }\r\n                return updated\r\n            }\r\n            return [\r\n                ...prev,\r\n                { id: `${Date.now()}-${Math.random().toString(36).slice(2, 9)}`, productId: p.productId ?? null, name: p.name, qty: p.qty, unitPrice: p.unitPrice }\r\n            ]\r\n        })\r\n    };\r\n\r\n    const handleRemoveProduct = (id: string) => {\r\n        setProducts(prev => prev.filter(p => p.id !== id));\r\n    };\r\n\r\n    // Update a product field (qty or unitPrice)\r\n    const updateProductField = (id: string, field: 'qty' | 'unitPrice', value: string | number) => {\r\n        setProducts(prev =>\r\n            prev.map(p => {\r\n                if (p.id !== id) return p\r\n                const parsed = field === 'qty' ? Math.max(0, Math.floor(Number(value) || 0)) : Math.max(0, Number(value) || 0)\r\n                return { ...p, [field]: parsed }\r\n            })\r\n        )\r\n    }\r\n\r\n    const total = products.reduce((sum, p) => sum + p.qty * p.unitPrice, 0)\r\n\r\n    return (\r\n        <Dialog open={open} onOpenChange={setOpen}>\r\n            <DialogTrigger asChild>\r\n                <Button className=\"h-full flex items-center gap-2\">\r\n                    <Plus size={16} />\r\n                    Add Stocks\r\n                </Button>\r\n            </DialogTrigger>\r\n\r\n            <DialogContent className=\" flex h-[calc(80vh-2rem)] min-w-[calc(80vw-2rem)] flex-col justify-between gap-0 p-0\">\r\n                <ScrollArea className=\"flex-1 overflow-hidden\">\r\n                    <DialogHeader className=\"contents space-y-0 text-left\">\r\n                        <DialogTitle className=\"px-6 pt-6\">Add Stock</DialogTitle>\r\n                        <DialogDescription asChild>\r\n                            <div className=\"pt-2 px-6\">\r\n                                <p className=\"text-sm text-muted-foreground\">Enter stock details and add products.</p>\r\n                            </div>\r\n                        </DialogDescription>\r\n                    </DialogHeader>\r\n\r\n                    <div className=\"px-6 pt-2\">\r\n                        <div className=\"flex w-full gap-6\">\r\n                            {/* Left column - basic info */}\r\n                            <div className=\"flex-[40%] \">\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"text-sm block mb-1\">Company</label>\r\n                                    <Input value={company} onChange={(e) => setCompany(e.target.value)} placeholder=\"Company name\" />\r\n                                </div>\r\n\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"text-sm block mb-1\">Date</label>\r\n                                    <Popover>\r\n                                        <PopoverTrigger asChild>\r\n                                            <Button\r\n                                                variant=\"outline\"\r\n                                                className=\"w-full h-10 justify-between text-left px-3\"\r\n                                                type=\"button\"\r\n                                                aria-label=\"Choose date\"\r\n                                            >\r\n                                                <span className=\"truncate\">\r\n                                                    {date ? date.toLocaleDateString() : 'mm/dd/yyyy'}\r\n                                                </span>\r\n                                                <CalendarIcon className=\"ml-2 opacity-70\" />\r\n                                            </Button>\r\n                                        </PopoverTrigger>\r\n\r\n                                        <PopoverContent className=\"w-auto p-2\">\r\n                                            <Card className=\"w-[290px]\">\r\n                                                <CardHeader className=\"flex items-start gap-2\">\r\n                                                    <div>\r\n                                                        <CardDescription className=\"text-xs text-muted-foreground\">\r\n                                                            <CardTitle className=\"text-sm\">Choose date</CardTitle>\r\n                                                            Select a date for this stock entry\r\n                                                        </CardDescription>\r\n                                                    </div>\r\n                                                    <CardAction>\r\n                                                        <Button\r\n                                                            size=\"sm\"\r\n                                                            variant=\"outline\"\r\n                                                            onClick={() => {\r\n                                                                const now = new Date()\r\n                                                                setMonth(now)\r\n                                                                setDate(now)\r\n                                                            }}\r\n                                                        >\r\n                                                            Today\r\n                                                        </Button>\r\n                                                    </CardAction>\r\n                                                </CardHeader>\r\n                                                <CardContent className=\"p-2\">\r\n                                                    <Calendar\r\n                                                        mode=\"single\"\r\n                                                        month={month}\r\n                                                        onMonthChange={setMonth}\r\n                                                        selected={date}\r\n                                                        onSelect={setDate}\r\n                                                        className=\"bg-transparent p-0 rounded-md\"\r\n                                                    />\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </PopoverContent>\r\n                                    </Popover>\r\n                                </div>\r\n\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"text-sm block mb-1\">Price</label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        step=\"0.01\"\r\n                                        value={price === \"\" ? \"\" : String(price)}\r\n                                        onChange={(e) => setPrice(e.target.value === \"\" ? \"\" : Number(e.target.value))}\r\n                                        placeholder=\"0.00\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Right column - products */}\r\n                            <div className=\"flex flex-col h-full flex-[60%]\">\r\n                                <div className=\"flex items-center justify-between mb-3\">\r\n                                    <h3 className=\"font-medium\">Products</h3>\r\n                                    <AddProductModal onAdd={handleAddProduct} />\r\n                                </div>\r\n\r\n                                <div className='[&>div]:max-h-[400px] [&>div]:rounded-sm [&>div]:border'>\r\n                                    <div className=\"overflow-x-auto\">\r\n                                        <Table className=\"table-fixed w-full\">\r\n                                            <TableHeader>\r\n                                                <TableRow className=\"bg-background sticky top-0\">\r\n                                                    <TableHead className=\"w-[35%]\">Product</TableHead>\r\n                                                    <TableHead className=\"w-[10%] text-center\">Quantity</TableHead>\r\n                                                    <TableHead className=\"w-[10%] text-center\">Unit Price</TableHead>\r\n\r\n                                                    <TableHead className=\"w-[8%]\" />\r\n                                                </TableRow>\r\n                                            </TableHeader>\r\n\r\n                                            <TableBody>\r\n                                                {products.length === 0 ? (\r\n                                                    <TableRow>\r\n                                                        <TableCell colSpan={4}>\r\n                                                            <div className=\"w-full h-24 flex items-center justify-center text-sm text-muted-foreground\">\r\n                                                                No products added.\r\n                                                            </div>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                ) : (\r\n                                                    products.map(p => (\r\n                                                        <TableRow key={p.id}>\r\n                                                            {/* Product column: prevent flex expansion and allow wrapping */}\r\n                                                            <TableCell className=\"min-w-0 break-words whitespace-normal pr-4\">\r\n                                                                <div className=\"font-medium\">{p.name}</div>\r\n                                                            </TableCell>\r\n\r\n                                                            {/* Quantity: compact centered input so it won't push layout */}\r\n                                                            <TableCell className=\"text-center align-middle\">\r\n                                                                <Input\r\n                                                                    type=\"number\"\r\n                                                                    min={0}\r\n                                                                    value={String(p.qty)}\r\n                                                                    onChange={(e) => updateProductField(p.id, 'qty', e.target.value)}\r\n                                                                    onBlur={(e) => updateProductField(p.id, 'qty', e.target.value)}\r\n                                                                    className=\"focus-visible:ring-ring h-8 w-20 border-0 bg-transparent p-1 text-center focus-visible:ring-1 mx-auto\"\r\n                                                                    aria-label={`qty-${p.id}`}\r\n                                                                />\r\n                                                            </TableCell>\r\n\r\n                                                            {/* Unit Price: compact centered input */}\r\n                                                            <TableCell className=\"text-center align-middle\">\r\n                                                                <Input\r\n                                                                    type=\"number\"\r\n                                                                    step=\"0.01\"\r\n                                                                    min={0}\r\n                                                                    value={String(p.unitPrice)}\r\n                                                                    onChange={(e) => updateProductField(p.id, 'unitPrice', e.target.value)}\r\n                                                                    onBlur={(e) => updateProductField(p.id, 'unitPrice', e.target.value)}\r\n                                                                    className=\"focus-visible:ring-ring h-8 w-24 border-0 bg-transparent p-1 text-center focus-visible:ring-1 mx-auto\"\r\n                                                                    aria-label={`unit-${p.id}`}\r\n                                                                />\r\n                                                            </TableCell>\r\n\r\n                                                            {/* Delete button in small column */}\r\n                                                            <TableCell className=\"text-center align-middle\">\r\n                                                                <Button variant=\"ghost\" size=\"sm\" onClick={() => handleRemoveProduct(p.id)} aria-label=\"Remove product\">\r\n                                                                    <X className=\"h-4 w-4\" />\r\n                                                                </Button>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                )}\r\n                                            </TableBody>\r\n\r\n                                        </Table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ScrollArea>\r\n\r\n                <DialogFooter className=\"px-6 pb-6 sm:justify-end\">\r\n                    <DialogClose asChild>\r\n                        <Button variant=\"outline\" onClick={() => setOpen(false)} disabled={saving}>\r\n                            <ChevronLeftIcon />\r\n                            Back\r\n                        </Button>\r\n                    </DialogClose>\r\n\r\n                    <Button onClick={handleSave} disabled={saving}>\r\n                        {saving ? 'Saving...' : 'Save'}\r\n                    </Button>\r\n                </DialogFooter>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7839, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/StockMovements/components/stockHead.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\r\nimport { Plus } from \"lucide-react\";\r\nimport AddStockModal from \"./addStockModal\";\r\n\r\nexport default function StockMovementHead() {\r\n    return (\r\n        <div className=\"flex justify-between items-center h-full\">\r\n            <h1 className=\"text-3xl font-bold\">Stock Movements</h1>\r\n            <div className=\"flex gap-3\">\r\n                <AddStockModal />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAEe,SAAS;IACpB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,8LAAa;;;;;;;;;;;;;;;;AAI9B","debugId":null}},
    {"offset": {"line": 7882, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/hooks/stocks/useStockTransactions.ts"],"sourcesContent":["import useSWR from \"swr\";\r\nimport axios from \"@/lib/axios\";\r\n\r\nexport type StockTransaction = { id: number | string; company_name: string; date: string; total?: number };\r\n\r\nconst fetcher = async (url: string) => {\r\n  const res = await axios.get(url);\r\n  return (res.data?.data ?? []) as StockTransaction[];\r\n};\r\n\r\nexport default function useStockTransactions() {\r\n  const { data, error, isValidating } = useSWR<StockTransaction[], Error>(\"/stock-transactions\", fetcher, {\r\n    revalidateOnFocus: false,\r\n  });\r\n  return { data, loading: !error && !data && isValidating, error: error ? error.message : null };\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAIA,MAAM,UAAU,OAAO;IACrB,MAAM,MAAM,MAAM,8HAAK,CAAC,GAAG,CAAC;IAC5B,OAAQ,IAAI,IAAI,EAAE,QAAQ,EAAE;AAC9B;AAEe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAA,yKAAM,EAA4B,uBAAuB,SAAS;QACtG,mBAAmB;IACrB;IACA,OAAO;QAAE;QAAM,SAAS,CAAC,SAAS,CAAC,QAAQ;QAAc,OAAO,QAAQ,MAAM,OAAO,GAAG;IAAK;AAC/F","debugId":null}},
    {"offset": {"line": 7908, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/StockMovements/components/stockTable.tsx"],"sourcesContent":["// ...existing code...\r\n'use client'\r\n\r\nimport { useState } from 'react'\r\nimport axios from \"@/lib/axios\";\r\nimport type { ColumnDef, ColumnFiltersState, SortingState, VisibilityState } from '@tanstack/react-table'\r\nimport {\r\n    flexRender,\r\n    getCoreRowModel,\r\n    getFilteredRowModel,\r\n    getPaginationRowModel,\r\n    getSortedRowModel,\r\n    useReactTable\r\n} from '@tanstack/react-table'\r\n\r\nimport { Button } from '@/components/ui/button'\r\nimport { Checkbox } from '@/components/ui/checkbox'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport useStockTransactions, { StockTransaction } from '@/hooks/stocks/useStockTransactions'\r\n\r\n/* ------------------ NEW IMPORTS ------------------ */\r\nimport { Eye, ChevronLeft as ChevronLeftIcon } from 'lucide-react'\r\nimport {\r\n    Dialog,\r\n    DialogClose,\r\n    DialogContent,\r\n    DialogDescription,\r\n    DialogFooter,\r\n    DialogHeader,\r\n    DialogTitle,\r\n    DialogTrigger\r\n} from '@/components/ui/dialog'\r\nimport { ScrollArea } from '@/components/ui/scroll-area'\r\nimport React from 'react'\r\n/* ------------------------------------------------- */\r\n\r\n\r\nexport type StockItem = {\r\n    id: string\r\n    company: string\r\n    date: string // ISO date string\r\n    price: number\r\n}\r\n\r\nexport const columns: ColumnDef<StockTransaction>[] = [\r\n    {\r\n        accessorKey: 'company_name',\r\n        header: 'Company Name',\r\n        cell: ({ row }) => <div className='font-medium'>{row.getValue('company_name')}</div>\r\n    },\r\n    {\r\n        accessorKey: 'date',\r\n        header: 'Date',\r\n        cell: ({ row }) => {\r\n            const raw = row.getValue('date') as string\r\n            const formatted = raw ? new Date(raw).toLocaleDateString() : ''\r\n            return <div className='text-sm text-muted-foreground'>{formatted}</div>\r\n        }\r\n    },\r\n    {\r\n        accessorKey: 'total',\r\n        header: () => <div className='text-right'>Total</div>,\r\n        cell: ({ row }) => {\r\n            const price = parseFloat(String(row.getValue('total') ?? 0))\r\n            const formatted = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(price)\r\n            return <div className='text-right font-medium'>{formatted}</div>\r\n        }\r\n    },\r\n\r\n    {\r\n        id: 'actions',\r\n        header: '',\r\n        cell: ({ row }) => {\r\n            const company = String(row.getValue('company_name') ?? '')\r\n            const rawDate = String(row.getValue('date') ?? '')\r\n            const formattedDate = rawDate ? new Date(rawDate).toLocaleDateString() : ''\r\n            const total = parseFloat(String(row.getValue('total') ?? 0))\r\n            const formattedTotal = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(total)\r\n\r\n            // transaction id from original row\r\n            const txId = (row.original as any)?.id\r\n\r\n            const TransactionDetailsDialog: React.FC<{ id: number | string }> = ({ id }) => {\r\n                const [open, setOpen] = React.useState(false)\r\n                const [items, setItems] = React.useState<any[] | null>(null)\r\n                const [loadingItems, setLoadingItems] = React.useState(false)\r\n                const [loadError, setLoadError] = React.useState<string | null>(null)\r\n\r\n                React.useEffect(() => {\r\n                    if (!open) return\r\n                    let mounted = true\r\n                    const load = async () => {\r\n                        setLoadingItems(true)\r\n                        setLoadError(null)\r\n                        try {\r\n                            const endpoint = `/stock-transactions/${id}`;\r\n                            const res = await axios.get(endpoint);\r\n                            const json = res.data;\r\n                            if (res.status >= 400) throw new Error(json?.message || json?.error || 'Failed to load')\r\n                            // backend now returns items with joined product object and product_name normalization\r\n                            const fetched = json?.items ?? json?.data?.items ?? []\r\n                            if (mounted) setItems(Array.isArray(fetched) ? fetched : [])\r\n                        } catch (err: any) {\r\n                            console.error('load transaction items error', err)\r\n                            if (mounted) setLoadError(err?.message ?? String(err))\r\n                        } finally {\r\n                            if (mounted) setLoadingItems(false)\r\n                        }\r\n                    }\r\n                    load()\r\n                    return () => { mounted = false }\r\n                }, [open, id])\r\n\r\n                // fallback to original row items if remote not available yet\r\n                const origItems = (row.original as any)?.items ?? (row.original as any)?.products ?? []\r\n                const shownItems = items ?? (Array.isArray(origItems) ? origItems : [])\r\n\r\n                return (\r\n                    <Dialog open={open} onOpenChange={setOpen}>\r\n                        <DialogTrigger asChild>\r\n                            <Button variant=\"ghost\" size=\"sm\" aria-label=\"View details\">\r\n                                <Eye className=\"h-4 w-4\" />\r\n                            </Button>\r\n                        </DialogTrigger>\r\n\r\n                        <DialogContent className=\"flex max-h-[min(640px,84vh)] flex-col gap-0 p-0 sm:max-w-lg\">\r\n                            <DialogHeader className=\"contents space-y-0 text-left\">\r\n                                <ScrollArea className=\"flex max-h-full flex-col overflow-hidden\">\r\n                                    <DialogTitle className=\"px-6 pt-6 text-lg md:text-xl font-semibold text-foreground\">Transaction Details</DialogTitle>\r\n                                    <DialogDescription asChild>\r\n                                        <div className=\"p-6\">\r\n                                            <div className=\"space-y-4\">\r\n                                                <div className=\"flex flex-col gap-2\">\r\n                                                    <div className=\"flex items-baseline gap-3\">\r\n                                                        <span className=\"text-sm text-muted-foreground\">Company:</span>\r\n                                                        <span className=\"text-base font-medium text-foreground\">{company}</span>\r\n                                                    </div>\r\n                                                    <div className=\"flex items-baseline gap-3\">\r\n                                                        <span className=\"text-sm text-muted-foreground\">Date:</span>\r\n                                                        <span className=\"text-sm text-foreground\">{formattedDate}</span>\r\n                                                    </div>\r\n                                                    <div className=\"flex items-baseline gap-3\">\r\n                                                        <span className=\"text-sm text-muted-foreground\">Total:</span>\r\n                                                        <span className=\"text-base font-semibold text-foreground\">{formattedTotal}</span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4 className=\"text-sm font-medium text-muted-foreground\">Products</h4>\r\n\r\n                                                    {loadingItems ? (\r\n                                                        <div className=\"text-sm text-muted-foreground mt-3\">Loading products…</div>\r\n                                                    ) : loadError ? (\r\n                                                        <div className=\"text-sm text-destructive mt-3\">Failed to load products: {loadError}</div>\r\n                                                    ) : !shownItems || shownItems.length === 0 ? (\r\n                                                        <div className=\"text-sm text-muted-foreground mt-3\">No products available for this transaction.</div>\r\n                                                    ) : (\r\n                                                        <div className=\"mt-3 overflow-auto rounded-sm border\">\r\n                                                            <table className=\"w-full text-sm\">\r\n                                                                <thead>\r\n                                                                    <tr className=\"bg-muted/5\">\r\n                                                                        <th className=\"px-4 py-3 text-left text-xs text-muted-foreground\">Product</th>\r\n                                                                        <th className=\"px-4 py-3 text-right text-xs text-muted-foreground\">Qty</th>\r\n                                                                        <th className=\"px-4 py-3 text-right text-xs text-muted-foreground\">Unit</th>\r\n                                                                        <th className=\"px-4 py-3 text-right text-xs text-muted-foreground\">Subtotal</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {shownItems.map((it: any, i: number) => {\r\n                                                                        const name =\r\n                                                                            it.product?.name ??\r\n                                                                            it.product_name ??\r\n                                                                            it.name ??\r\n                                                                            (it.product_id ? `#${it.product_id}` : `Item ${i + 1}`)\r\n                                                                        const qty = Number(it.quantity ?? it.qty ?? 0)\r\n                                                                        const unit = Number(it.purchased_price ?? it.unit_price ?? it.price ?? 0)\r\n                                                                        const subtotal = qty * unit\r\n                                                                        const formattedUnit = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(unit)\r\n                                                                        const formattedSubtotal = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(subtotal)\r\n\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"border-t last:border-b\">\r\n                                                                                <td className=\"px-4 py-3 align-top text-sm text-foreground max-w-[260px] break-words whitespace-normal\">{name}</td>\r\n                                                                                <td className=\"px-4 py-3 align-top text-sm text-right text-foreground\">{qty}</td>\r\n                                                                                <td className=\"px-4 py-3 align-top text-sm text-right text-foreground\">{formattedUnit}</td>\r\n                                                                                <td className=\"px-4 py-3 align-top text-sm text-right font-medium text-foreground\">{formattedSubtotal}</td>\r\n                                                                            </tr>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </DialogDescription>\r\n                                </ScrollArea>\r\n                            </DialogHeader>\r\n\r\n                            <DialogFooter className=\"flex-row items-center justify-end border-t px-6 py-4\">\r\n                                <DialogClose asChild>\r\n                                    <Button variant=\"outline\" size=\"sm\">\r\n                                        <ChevronLeftIcon />\r\n                                        Back\r\n                                    </Button>\r\n                                </DialogClose>\r\n                            </DialogFooter>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div className=\"flex justify-end\">\r\n                    <TransactionDetailsDialog id={txId} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n]\r\n\r\nconst StockMovementTable = () => {\r\n    const { data, loading, error } = useStockTransactions()\r\n    const rowsData = data ?? []\r\n    const [sorting, setSorting] = useState<SortingState>([])\r\n    const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([])\r\n    const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({})\r\n    const [rowSelection, setRowSelection] = useState({})\r\n    const [globalFilter, setGlobalFilter] = useState('')\r\n\r\n    const table = useReactTable({\r\n        data: rowsData,\r\n        columns,\r\n        onSortingChange: setSorting,\r\n        onColumnFiltersChange: setColumnFilters,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n        getFilteredRowModel: getFilteredRowModel(),\r\n        onColumnVisibilityChange: setColumnVisibility,\r\n        onRowSelectionChange: setRowSelection,\r\n        onGlobalFilterChange: setGlobalFilter,\r\n        globalFilterFn: 'includesString',\r\n        state: {\r\n            sorting,\r\n            columnFilters,\r\n            columnVisibility,\r\n            rowSelection,\r\n            globalFilter\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div className='w-full h-full'>\r\n            <div className='flex justify-between gap-2 pb-4 max-sm:flex-col sm:items-center'>\r\n                <div className='flex items-center space-x-2'>\r\n                    <Input\r\n                        placeholder='Search all columns...'\r\n                        value={globalFilter ?? ''}\r\n                        onChange={event => setGlobalFilter(String(event.target.value))}\r\n                        className='max-w-sm'\r\n                    />\r\n                </div>\r\n                <div className='flex items-center space-x-2'>\r\n                    <div className='text-muted-foreground text-sm'>\r\n                        {table.getSelectedRowModel().rows.length > 0 && (\r\n                            <span className='mr-2'>\r\n                                {table.getSelectedRowModel().rows.length} of {table.getFilteredRowModel().rows.length} row(s) selected\r\n                            </span>\r\n                        )}\r\n                        {loading && <span className=\"ml-2\">Loading...</span>}\r\n                        {error && <span className=\"ml-2 text-destructive\">Error: {error}</span>}\r\n                    </div>\r\n                    {/* Refresh button removed since SWR handles revalidation; call mutate() if you want manual refresh */}\r\n                </div>\r\n            </div>\r\n            <div className='rounded-md border'>\r\n                <Table>\r\n                    <TableHeader>\r\n                        {table.getHeaderGroups().map(headerGroup => (\r\n                            <TableRow key={headerGroup.id}>\r\n                                {headerGroup.headers.map(header => {\r\n                                    return (\r\n                                        <TableHead key={header.id}>\r\n                                            {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\r\n                                        </TableHead>\r\n                                    )\r\n                                })}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {table.getRowModel().rows?.length ? (\r\n                            table.getRowModel().rows.map(row => (\r\n                                <TableRow key={row.id} data-state={row.getIsSelected() && 'selected'}>\r\n                                    {row.getVisibleCells().map(cell => (\r\n                                        <TableCell key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))\r\n                        ) : (\r\n                            <TableRow>\r\n                                <TableCell colSpan={columns.length} className='h-24 text-center'>\r\n                                    No results.\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StockMovementTable\r\n// ...existing"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8622, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/StockMovements/components/cardTable.tsx"],"sourcesContent":["import {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\n\r\nimport StockMovementTable from \"./stockTable\";\r\nexport default function CardTable() {\r\n    return (\r\n        <Card className=\"h-full border\">\r\n            <CardContent>\r\n                <StockMovementTable />\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}"],"names":[],"mappings":";;;;;AAAA;AAUA;;;;AACe,SAAS;IACpB,qBACI,8OAAC,wIAAI;QAAC,WAAU;kBACZ,cAAA,8OAAC,+IAAW;sBACR,cAAA,8OAAC,2LAAkB;;;;;;;;;;;;;;;AAInC","debugId":null}},
    {"offset": {"line": 8656, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/_pages/StockMovements/stockMScreen.tsx"],"sourcesContent":["import StockMovementHead from \"./components/stockHead\";\r\n\r\nimport CardTable from \"./components/cardTable\";\r\nexport default function StockMovementScreen() {\r\n    return (\r\n        <div className=\"flex flex-col gap-4 p-8 w-full h-full\">\r\n            <div className=\"h-full flex-[10%]\">\r\n                <StockMovementHead />\r\n            </div>\r\n            <div className=\" h-full flex-[90%]\">\r\n                <CardTable />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AACe,SAAS;IACpB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,0LAAiB;;;;;;;;;;0BAEtB,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,0LAAS;;;;;;;;;;;;;;;;AAI1B","debugId":null}},
    {"offset": {"line": 8705, "column": 0}, "map": {"version":3,"sources":["file:///D:/Code/POS/POS_Project/pos-frontend/src/app/dashboard/%5Bsite%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { use } from \"react\";\r\nimport MainDashboard from \"../_pages/POS/pos-screen\";\r\nimport ProductsPage from \"../_pages/Products/productsScreen\";\r\nimport DashboardScreen from \"../_pages/Dashboard/dashboardScreen\";\r\nimport StockMovementScreen from \"../_pages/StockMovements/stockMScreen\";\r\n\r\nexport default function SiteDashboardPage({\r\n  params,\r\n}: {\r\n  params: Promise<{ site: string }>;\r\n}) {\r\n  const { site } = use(params);\r\n\r\n  switch (site) {\r\n    case \"main\":\r\n      return <MainDashboard />;\r\n    case \"db\":\r\n      return <DashboardScreen />;\r\n    case \"products\":\r\n      return <ProductsPage />;\r\n    case \"stock\":\r\n      return <StockMovementScreen />;\r\n    default:\r\n      return <div>{site}</div>;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS,kBAAkB,EACxC,MAAM,EAGP;IACC,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,4MAAG,EAAC;IAErB,OAAQ;QACN,KAAK;YACH,qBAAO,8OAAC,qKAAa;;;;;QACvB,KAAK;YACH,qBAAO,8OAAC,6KAAe;;;;;QACzB,KAAK;YACH,qBAAO,8OAAC,2KAAY;;;;;QACtB,KAAK;YACH,qBAAO,8OAAC,+KAAmB;;;;;QAC7B;YACE,qBAAO,8OAAC;0BAAK;;;;;;IACjB;AACF","debugId":null}}]
}